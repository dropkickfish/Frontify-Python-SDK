# Generated by ariadne-codegen
# Source: queries-mutations

from typing import Any, Dict, List, Optional, Union

from .account import Account
from .add_asset_license import AddAssetLicense
from .add_asset_preview_image import AddAssetPreviewImage
from .add_asset_relations import AddAssetRelations
from .add_asset_tags import AddAssetTags
from .add_collection_assets import AddCollectionAssets
from .add_custom_metadata import AddCustomMetadata
from .add_custom_metadata_property_options import AddCustomMetadataPropertyOptions
from .add_workflow_checklist_item import AddWorkflowChecklistItem
from .add_workflow_checklist_preset import AddWorkflowChecklistPreset
from .add_workflow_status_assignees import AddWorkflowStatusAssignees
from .add_workflow_task_assignees import AddWorkflowTaskAssignees
from .asset import Asset
from .assets import Assets
from .base_client import BaseClient
from .base_model import UNSET, UnsetType
from .brand import Brand
from .brands import Brands
from .cancel_export_creatives import CancelExportCreatives
from .client_tracking_id import ClientTrackingId
from .create_account_user import CreateAccountUser
from .create_asset import CreateAsset
from .create_asset_comment import CreateAssetComment
from .create_asset_submissions import CreateAssetSubmissions
from .create_asset_variant import CreateAssetVariant
from .create_asset_workflow_task import CreateAssetWorkflowTask
from .create_attachment import CreateAttachment
from .create_brand import CreateBrand
from .create_collection import CreateCollection
from .create_custom_metadata_property import CreateCustomMetadataProperty
from .create_external_asset import CreateExternalAsset
from .create_folder import CreateFolder
from .create_license import CreateLicense
from .create_permission_token import CreatePermissionToken
from .create_share_link import CreateShareLink
from .create_workflow_status import CreateWorkflowStatus
from .create_workspace_project import CreateWorkspaceProject
from .creative_export import CreativeExport
from .creative_template import CreativeTemplate
from .current_user import CurrentUser
from .delete_account_user import DeleteAccountUser
from .delete_asset import DeleteAsset
from .delete_asset_variant import DeleteAssetVariant
from .delete_attachment import DeleteAttachment
from .delete_brand import DeleteBrand
from .delete_collection import DeleteCollection
from .delete_comment import DeleteComment
from .delete_custom_metadata_property import DeleteCustomMetadataProperty
from .delete_folders import DeleteFolders
from .delete_license import DeleteLicense
from .delete_workflow_status import DeleteWorkflowStatus
from .delete_workflow_task import DeleteWorkflowTask
from .edit_comment import EditComment
from .enums import LanguageCode
from .export_creative import ExportCreative
from .guideline_page import GuidelinePage
from .input_types import (
    AccountQueryInput,
    AddAssetLicenseInput,
    AddAssetPreviewImageInput,
    AddAssetRelationsInput,
    AddAssetTagsInput,
    AddCollectionAssetsInput,
    AddCustomMetadataInput,
    AddCustomMetadataPropertyOptionsInput,
    AddWorkflowChecklistItemInput,
    AddWorkflowChecklistPresetInput,
    AddWorkflowStatusAssigneesInput,
    AddWorkflowTaskAssigneesInput,
    AssetCommentQueryInput,
    AssetQueryInput,
    BrandQueryInput,
    CancelExportCreativesInput,
    CreateAccountUserInput,
    CreateAssetCommentInput,
    CreateAssetInput,
    CreateAssetSubmissionsInput,
    CreateAssetVariantInput,
    CreateAssetWorkflowTaskInput,
    CreateAttachmentInput,
    CreateBrandInput,
    CreateCollectionInput,
    CreateCustomMetadataPropertyInput,
    CreateExternalAssetInput,
    CreateFolderInput,
    CreateLicenseInput,
    CreatePermissionTokenInput,
    CreateShareLinkInput,
    CreateWorkflowStatusInput,
    CreateWorkspaceProjectInput,
    CreativeTemplateQueryInput,
    DeleteAccountUserInput,
    DeleteAssetInput,
    DeleteAssetVariantInput,
    DeleteAttachmentInput,
    DeleteBrandInput,
    DeleteCollectionInput,
    DeleteCommentInput,
    DeleteCustomMetadataPropertyInput,
    DeleteFoldersInput,
    DeleteLicenseInput,
    DeleteWorkflowStatusInput,
    DeleteWorkflowTaskInput,
    EditCommentInput,
    ExportCreativeInput,
    FolderAssetQueryInput,
    InstallProjectWebhookInput,
    InviteProjectUserInput,
    LibraryQueryInput,
    MoveAssetsInput,
    MoveFoldersInput,
    MoveWorkflowTaskInput,
    RemoveAssetLicenseInput,
    RemoveAssetPreviewImageInput,
    RemoveAssetRelationsInput,
    RemoveAssetTagsInput,
    RemoveCollectionAssetsInput,
    RemoveCustomMetadataInput,
    RemoveCustomMetadataPropertyOptionsInput,
    RemoveWorkflowChecklistItemInput,
    RemoveWorkflowChecklistPresetInput,
    RemoveWorkflowStatusAssigneesInput,
    RemoveWorkflowTaskAssigneesInput,
    ReopenAssetCommentInput,
    ReplaceAssetInput,
    ReplaceAssetVariantInput,
    ReplaceExternalDataSourceFileInput,
    ReplyToCommentInput,
    ResolveAssetCommentInput,
    SetCollectionAssetsInput,
    SetCustomMetadataInput,
    SyncAssetTagsInput,
    UninstallWebhookInput,
    UpdateAssetInput,
    UpdateBrandInput,
    UpdateCollectionInput,
    UpdateCustomMetadataPropertyInput,
    UpdateFolderInput,
    UpdateWorkflowChecklistItemInput,
    UpdateWorkflowChecklistPresetInput,
    UpdateWorkflowStatusInput,
    UpdateWorkflowTaskInput,
    UploadFileInput,
    WorkspaceProjectQueryInput,
)
from .install_project_webhook import InstallProjectWebhook
from .invite_project_user import InviteProjectUser
from .library import Library
from .move_assets import MoveAssets
from .move_folders import MoveFolders
from .move_workflow_task import MoveWorkflowTask
from .node import Node
from .remove_asset_license import RemoveAssetLicense
from .remove_asset_preview_image import RemoveAssetPreviewImage
from .remove_asset_relations import RemoveAssetRelations
from .remove_asset_tags import RemoveAssetTags
from .remove_collection_assets import RemoveCollectionAssets
from .remove_custom_metadata import RemoveCustomMetadata
from .remove_custom_metadata_property_options import RemoveCustomMetadataPropertyOptions
from .remove_workflow_checklist_item import RemoveWorkflowChecklistItem
from .remove_workflow_checklist_preset import RemoveWorkflowChecklistPreset
from .remove_workflow_status_assignees import RemoveWorkflowStatusAssignees
from .remove_workflow_task_assignees import RemoveWorkflowTaskAssignees
from .reopen_asset_comment import ReopenAssetComment
from .replace_asset import ReplaceAsset
from .replace_asset_variant import ReplaceAssetVariant
from .replace_external_data_source_file import ReplaceExternalDataSourceFile
from .reply_to_comment import ReplyToComment
from .resolve_asset_comment import ResolveAssetComment
from .set_collection_assets import SetCollectionAssets
from .set_custom_metadata import SetCustomMetadata
from .sync_asset_tags import SyncAssetTags
from .uninstall_webhook import UninstallWebhook
from .update_asset import UpdateAsset
from .update_brand import UpdateBrand
from .update_collection import UpdateCollection
from .update_custom_metadata_property import UpdateCustomMetadataProperty
from .update_folder import UpdateFolder
from .update_workflow_checklist_item import UpdateWorkflowChecklistItem
from .update_workflow_checklist_preset import UpdateWorkflowChecklistPreset
from .update_workflow_status import UpdateWorkflowStatus
from .update_workflow_task import UpdateWorkflowTask
from .upload_file import UploadFile
from .webhooks import Webhooks
from .workspace_project import WorkspaceProject


def gql(q: str) -> str:
    return q


class FrontifyClient(BaseClient):
    def add_asset_license(
        self,
        input: AddAssetLicenseInput,
        validity_in_days: Union[Optional[int], UnsetType] = UNSET,
        permanent: Union[Optional[bool], UnsetType] = UNSET,
        validity_in_days_1: Union[Optional[int], UnsetType] = UNSET,
        permanent_1: Union[Optional[bool], UnsetType] = UNSET,
        limit: Union[Optional[int], UnsetType] = UNSET,
        page: Union[Optional[int], UnsetType] = UNSET,
        limit_1: Union[Optional[int], UnsetType] = UNSET,
        page_1: Union[Optional[int], UnsetType] = UNSET,
        query: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_2: Union[Optional[int], UnsetType] = UNSET,
        page_2: Union[Optional[int], UnsetType] = UNSET,
        limit_3: Union[Optional[int], UnsetType] = UNSET,
        page_3: Union[Optional[int], UnsetType] = UNSET,
        limit_4: Union[Optional[int], UnsetType] = UNSET,
        page_4: Union[Optional[int], UnsetType] = UNSET,
        limit_5: Union[Optional[int], UnsetType] = UNSET,
        page_5: Union[Optional[int], UnsetType] = UNSET,
        query_1: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_6: Union[Optional[int], UnsetType] = UNSET,
        page_6: Union[Optional[int], UnsetType] = UNSET,
        limit_7: Union[Optional[int], UnsetType] = UNSET,
        page_7: Union[Optional[int], UnsetType] = UNSET,
        limit_8: Union[Optional[int], UnsetType] = UNSET,
        page_8: Union[Optional[int], UnsetType] = UNSET,
        **kwargs: Any
    ) -> AddAssetLicense:
        _query = gql(
            """
            mutation addAssetLicense($validityInDays: Int, $permanent: Boolean, $validityInDays1: Int, $permanent1: Boolean, $limit: Int, $page: Int, $limit1: Int, $page1: Int, $query: AssetCommentQueryInput, $limit2: Int, $page2: Int, $limit3: Int, $page3: Int, $limit4: Int, $page4: Int, $limit5: Int, $page5: Int, $query1: AssetCommentQueryInput, $limit6: Int, $page6: Int, $limit7: Int, $page7: Int, $limit8: Int, $page8: Int, $input: AddAssetLicenseInput!) {
              addAssetLicense(input: $input) {
                asset {
                  __typename
                  id
                  creator {
                    __typename
                    id
                    name
                  }
                  createdAt
                  modifier {
                    __typename
                    id
                    name
                  }
                  modifiedAt
                  title
                  description
                  attachments {
                    id
                    creator {
                      __typename
                      id
                      name
                    }
                    createdAt
                    modifier {
                      __typename
                      id
                      name
                    }
                    modifiedAt
                    name
                    filename
                    type
                    externalId
                    extension
                    size
                    downloadUrl(validityInDays: $validityInDays, permanent: $permanent)
                  }
                  externalId
                  tags {
                    value
                    source
                  }
                  copyright {
                    status
                    notice
                  }
                  availability {
                    from
                    to
                  }
                  expiresAt
                  licenses {
                    id
                    title
                    license
                    addByDefault
                    requireConsensus
                  }
                  status
                  relatedAssets(limit: $limit3, page: $page3) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      __typename
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      title
                      description
                      attachments {
                        id
                        createdAt
                        modifiedAt
                        name
                        filename
                        type
                        externalId
                        extension
                        size
                        downloadUrl(validityInDays: $validityInDays1, permanent: $permanent1)
                      }
                      externalId
                      tags {
                        value
                        source
                      }
                      copyright {
                        status
                        notice
                      }
                      availability {
                        from
                        to
                      }
                      expiresAt
                      licenses {
                        id
                        title
                        license
                        addByDefault
                        requireConsensus
                      }
                      status
                      relatedAssets(limit: $limit, page: $page) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      comments(limit: $limit1, page: $page1, query: $query) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      currentUserPermissions {
                        canEdit
                        canDelete
                        canDownload
                        canComment
                      }
                      workflowTask {
                        id
                        title
                        description
                      }
                      variants(limit: $limit2, page: $page2) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      previewBackgroundColor {
                        red
                        green
                        blue
                        alpha
                      }
                    }
                  }
                  comments(limit: $limit5, page: $page5, query: $query1) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      id
                      createdAt
                      modifiedAt
                      content
                      mentionedUsers {
                        __typename
                        id
                        name
                      }
                      isResolved
                      replies(limit: $limit4, page: $page4) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                    }
                  }
                  currentUserPermissions {
                    canEdit
                    canDelete
                    canDownload
                    canComment
                  }
                  customMetadata {
                    __typename
                    property {
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      name
                      type {
                        __typename
                        name
                      }
                      helpText
                      isRequired
                      defaultValue
                    }
                  }
                  workflowTask {
                    id
                    assignedUsers {
                      __typename
                      id
                      name
                    }
                    asset {
                      __typename
                      id
                      createdAt
                      modifiedAt
                      title
                      description
                      externalId
                      expiresAt
                      status
                      variants(limit: $limit6, page: $page6) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      previewBackgroundColor {
                        red
                        green
                        blue
                        alpha
                      }
                    }
                    title
                    description
                    status {
                      id
                      name
                      color {
                        red
                        green
                        blue
                        alpha
                      }
                      assignedUsers {
                        __typename
                        id
                        name
                      }
                      checklistPresets {
                        id
                        content
                      }
                      tasks(limit: $limit7, page: $page7) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      enterRules
                    }
                    checklistItem(limit: $limit8, page: $page8) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        id
                        content
                      }
                    }
                  }
                }
                license {
                  id
                  title
                  license
                  addByDefault
                  requireConsensus
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {
            "validityInDays": validity_in_days,
            "permanent": permanent,
            "validityInDays1": validity_in_days_1,
            "permanent1": permanent_1,
            "limit": limit,
            "page": page,
            "limit1": limit_1,
            "page1": page_1,
            "query": query,
            "limit2": limit_2,
            "page2": page_2,
            "limit3": limit_3,
            "page3": page_3,
            "limit4": limit_4,
            "page4": page_4,
            "limit5": limit_5,
            "page5": page_5,
            "query1": query_1,
            "limit6": limit_6,
            "page6": page_6,
            "limit7": limit_7,
            "page7": page_7,
            "limit8": limit_8,
            "page8": page_8,
            "input": input,
        }
        response = self.execute(
            query=_query,
            operation_name="addAssetLicense",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return AddAssetLicense.model_validate(data)

    def add_asset_preview_image(
        self, input: AddAssetPreviewImageInput, **kwargs: Any
    ) -> AddAssetPreviewImage:
        query = gql(
            """
            mutation addAssetPreviewImage($input: AddAssetPreviewImageInput!) {
              addAssetPreviewImage(input: $input) {
                job {
                  assetId
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {"input": input}
        response = self.execute(
            query=query,
            operation_name="addAssetPreviewImage",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return AddAssetPreviewImage.model_validate(data)

    def add_asset_relations(
        self,
        input: AddAssetRelationsInput,
        validity_in_days: Union[Optional[int], UnsetType] = UNSET,
        permanent: Union[Optional[bool], UnsetType] = UNSET,
        validity_in_days_1: Union[Optional[int], UnsetType] = UNSET,
        permanent_1: Union[Optional[bool], UnsetType] = UNSET,
        limit: Union[Optional[int], UnsetType] = UNSET,
        page: Union[Optional[int], UnsetType] = UNSET,
        limit_1: Union[Optional[int], UnsetType] = UNSET,
        page_1: Union[Optional[int], UnsetType] = UNSET,
        query: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_2: Union[Optional[int], UnsetType] = UNSET,
        page_2: Union[Optional[int], UnsetType] = UNSET,
        limit_3: Union[Optional[int], UnsetType] = UNSET,
        page_3: Union[Optional[int], UnsetType] = UNSET,
        limit_4: Union[Optional[int], UnsetType] = UNSET,
        page_4: Union[Optional[int], UnsetType] = UNSET,
        limit_5: Union[Optional[int], UnsetType] = UNSET,
        page_5: Union[Optional[int], UnsetType] = UNSET,
        query_1: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_6: Union[Optional[int], UnsetType] = UNSET,
        page_6: Union[Optional[int], UnsetType] = UNSET,
        limit_7: Union[Optional[int], UnsetType] = UNSET,
        page_7: Union[Optional[int], UnsetType] = UNSET,
        limit_8: Union[Optional[int], UnsetType] = UNSET,
        page_8: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_2: Union[Optional[int], UnsetType] = UNSET,
        permanent_2: Union[Optional[bool], UnsetType] = UNSET,
        limit_9: Union[Optional[int], UnsetType] = UNSET,
        page_9: Union[Optional[int], UnsetType] = UNSET,
        limit_10: Union[Optional[int], UnsetType] = UNSET,
        page_10: Union[Optional[int], UnsetType] = UNSET,
        query_2: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        validity_in_days_3: Union[Optional[int], UnsetType] = UNSET,
        permanent_3: Union[Optional[bool], UnsetType] = UNSET,
        limit_11: Union[Optional[int], UnsetType] = UNSET,
        page_11: Union[Optional[int], UnsetType] = UNSET,
        **kwargs: Any
    ) -> AddAssetRelations:
        _query = gql(
            """
            mutation addAssetRelations($validityInDays: Int, $permanent: Boolean, $validityInDays1: Int, $permanent1: Boolean, $limit: Int, $page: Int, $limit1: Int, $page1: Int, $query: AssetCommentQueryInput, $limit2: Int, $page2: Int, $limit3: Int, $page3: Int, $limit4: Int, $page4: Int, $limit5: Int, $page5: Int, $query1: AssetCommentQueryInput, $limit6: Int, $page6: Int, $limit7: Int, $page7: Int, $limit8: Int, $page8: Int, $validityInDays2: Int, $permanent2: Boolean, $limit9: Int, $page9: Int, $limit10: Int, $page10: Int, $query2: AssetCommentQueryInput, $validityInDays3: Int, $permanent3: Boolean, $limit11: Int, $page11: Int, $input: AddAssetRelationsInput!) {
              addAssetRelations(input: $input) {
                asset {
                  __typename
                  id
                  creator {
                    __typename
                    id
                    name
                  }
                  createdAt
                  modifier {
                    __typename
                    id
                    name
                  }
                  modifiedAt
                  title
                  description
                  attachments {
                    id
                    creator {
                      __typename
                      id
                      name
                    }
                    createdAt
                    modifier {
                      __typename
                      id
                      name
                    }
                    modifiedAt
                    name
                    filename
                    type
                    externalId
                    extension
                    size
                    downloadUrl(validityInDays: $validityInDays, permanent: $permanent)
                  }
                  externalId
                  tags {
                    value
                    source
                  }
                  copyright {
                    status
                    notice
                  }
                  availability {
                    from
                    to
                  }
                  expiresAt
                  licenses {
                    id
                    title
                    license
                    addByDefault
                    requireConsensus
                  }
                  status
                  relatedAssets(limit: $limit3, page: $page3) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      __typename
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      title
                      description
                      attachments {
                        id
                        createdAt
                        modifiedAt
                        name
                        filename
                        type
                        externalId
                        extension
                        size
                        downloadUrl(validityInDays: $validityInDays1, permanent: $permanent1)
                      }
                      externalId
                      tags {
                        value
                        source
                      }
                      copyright {
                        status
                        notice
                      }
                      availability {
                        from
                        to
                      }
                      expiresAt
                      licenses {
                        id
                        title
                        license
                        addByDefault
                        requireConsensus
                      }
                      status
                      relatedAssets(limit: $limit, page: $page) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      comments(limit: $limit1, page: $page1, query: $query) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      currentUserPermissions {
                        canEdit
                        canDelete
                        canDownload
                        canComment
                      }
                      workflowTask {
                        id
                        title
                        description
                      }
                      variants(limit: $limit2, page: $page2) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      previewBackgroundColor {
                        red
                        green
                        blue
                        alpha
                      }
                    }
                  }
                  comments(limit: $limit5, page: $page5, query: $query1) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      id
                      createdAt
                      modifiedAt
                      content
                      mentionedUsers {
                        __typename
                        id
                        name
                      }
                      isResolved
                      replies(limit: $limit4, page: $page4) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                    }
                  }
                  currentUserPermissions {
                    canEdit
                    canDelete
                    canDownload
                    canComment
                  }
                  customMetadata {
                    __typename
                    property {
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      name
                      type {
                        __typename
                        name
                      }
                      helpText
                      isRequired
                      defaultValue
                    }
                  }
                  workflowTask {
                    id
                    assignedUsers {
                      __typename
                      id
                      name
                    }
                    asset {
                      __typename
                      id
                      createdAt
                      modifiedAt
                      title
                      description
                      externalId
                      expiresAt
                      status
                      variants(limit: $limit6, page: $page6) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      previewBackgroundColor {
                        red
                        green
                        blue
                        alpha
                      }
                    }
                    title
                    description
                    status {
                      id
                      name
                      color {
                        red
                        green
                        blue
                        alpha
                      }
                      assignedUsers {
                        __typename
                        id
                        name
                      }
                      checklistPresets {
                        id
                        content
                      }
                      tasks(limit: $limit7, page: $page7) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      enterRules
                    }
                    checklistItem(limit: $limit8, page: $page8) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        id
                        content
                      }
                    }
                  }
                }
                relatedAssets {
                  __typename
                  id
                  creator {
                    __typename
                    id
                    name
                  }
                  createdAt
                  modifier {
                    __typename
                    id
                    name
                  }
                  modifiedAt
                  title
                  description
                  attachments {
                    id
                    createdAt
                    modifiedAt
                    name
                    filename
                    type
                    externalId
                    extension
                    size
                    downloadUrl(validityInDays: $validityInDays2, permanent: $permanent2)
                  }
                  externalId
                  tags {
                    value
                    source
                  }
                  copyright {
                    status
                    notice
                  }
                  availability {
                    from
                    to
                  }
                  expiresAt
                  licenses {
                    id
                    title
                    license
                    addByDefault
                    requireConsensus
                  }
                  status
                  relatedAssets(limit: $limit9, page: $page9) {
                    total
                    page
                    limit
                    hasNextPage
                  }
                  comments(limit: $limit10, page: $page10, query: $query2) {
                    total
                    page
                    limit
                    hasNextPage
                  }
                  currentUserPermissions {
                    canEdit
                    canDelete
                    canDownload
                    canComment
                  }
                  workflowTask {
                    id
                    title
                    description
                  }
                  variants(limit: $limit11, page: $page11) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      key
                      filename
                      downloadUrl(validityInDays: $validityInDays3, permanent: $permanent3)
                    }
                  }
                  location {
                    brand {
                      id
                      name
                    }
                    library {
                      id
                      name
                    }
                    workspaceProject {
                      id
                      name
                    }
                    folder {
                      id
                      name
                      breadcrumbs {
                        id
                        name
                      }
                    }
                  }
                  previewBackgroundColor {
                    red
                    green
                    blue
                    alpha
                  }
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {
            "validityInDays": validity_in_days,
            "permanent": permanent,
            "validityInDays1": validity_in_days_1,
            "permanent1": permanent_1,
            "limit": limit,
            "page": page,
            "limit1": limit_1,
            "page1": page_1,
            "query": query,
            "limit2": limit_2,
            "page2": page_2,
            "limit3": limit_3,
            "page3": page_3,
            "limit4": limit_4,
            "page4": page_4,
            "limit5": limit_5,
            "page5": page_5,
            "query1": query_1,
            "limit6": limit_6,
            "page6": page_6,
            "limit7": limit_7,
            "page7": page_7,
            "limit8": limit_8,
            "page8": page_8,
            "validityInDays2": validity_in_days_2,
            "permanent2": permanent_2,
            "limit9": limit_9,
            "page9": page_9,
            "limit10": limit_10,
            "page10": page_10,
            "query2": query_2,
            "validityInDays3": validity_in_days_3,
            "permanent3": permanent_3,
            "limit11": limit_11,
            "page11": page_11,
            "input": input,
        }
        response = self.execute(
            query=_query,
            operation_name="addAssetRelations",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return AddAssetRelations.model_validate(data)

    def add_asset_tags(
        self,
        input: AddAssetTagsInput,
        validity_in_days: Union[Optional[int], UnsetType] = UNSET,
        permanent: Union[Optional[bool], UnsetType] = UNSET,
        validity_in_days_1: Union[Optional[int], UnsetType] = UNSET,
        permanent_1: Union[Optional[bool], UnsetType] = UNSET,
        limit: Union[Optional[int], UnsetType] = UNSET,
        page: Union[Optional[int], UnsetType] = UNSET,
        limit_1: Union[Optional[int], UnsetType] = UNSET,
        page_1: Union[Optional[int], UnsetType] = UNSET,
        query: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_2: Union[Optional[int], UnsetType] = UNSET,
        page_2: Union[Optional[int], UnsetType] = UNSET,
        limit_3: Union[Optional[int], UnsetType] = UNSET,
        page_3: Union[Optional[int], UnsetType] = UNSET,
        limit_4: Union[Optional[int], UnsetType] = UNSET,
        page_4: Union[Optional[int], UnsetType] = UNSET,
        limit_5: Union[Optional[int], UnsetType] = UNSET,
        page_5: Union[Optional[int], UnsetType] = UNSET,
        query_1: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_6: Union[Optional[int], UnsetType] = UNSET,
        page_6: Union[Optional[int], UnsetType] = UNSET,
        limit_7: Union[Optional[int], UnsetType] = UNSET,
        page_7: Union[Optional[int], UnsetType] = UNSET,
        limit_8: Union[Optional[int], UnsetType] = UNSET,
        page_8: Union[Optional[int], UnsetType] = UNSET,
        **kwargs: Any
    ) -> AddAssetTags:
        _query = gql(
            """
            mutation addAssetTags($validityInDays: Int, $permanent: Boolean, $validityInDays1: Int, $permanent1: Boolean, $limit: Int, $page: Int, $limit1: Int, $page1: Int, $query: AssetCommentQueryInput, $limit2: Int, $page2: Int, $limit3: Int, $page3: Int, $limit4: Int, $page4: Int, $limit5: Int, $page5: Int, $query1: AssetCommentQueryInput, $limit6: Int, $page6: Int, $limit7: Int, $page7: Int, $limit8: Int, $page8: Int, $input: AddAssetTagsInput!) {
              addAssetTags(input: $input) {
                asset {
                  __typename
                  id
                  creator {
                    __typename
                    id
                    name
                  }
                  createdAt
                  modifier {
                    __typename
                    id
                    name
                  }
                  modifiedAt
                  title
                  description
                  attachments {
                    id
                    creator {
                      __typename
                      id
                      name
                    }
                    createdAt
                    modifier {
                      __typename
                      id
                      name
                    }
                    modifiedAt
                    name
                    filename
                    type
                    externalId
                    extension
                    size
                    downloadUrl(validityInDays: $validityInDays, permanent: $permanent)
                  }
                  externalId
                  tags {
                    value
                    source
                  }
                  copyright {
                    status
                    notice
                  }
                  availability {
                    from
                    to
                  }
                  expiresAt
                  licenses {
                    id
                    title
                    license
                    addByDefault
                    requireConsensus
                  }
                  status
                  relatedAssets(limit: $limit3, page: $page3) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      __typename
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      title
                      description
                      attachments {
                        id
                        createdAt
                        modifiedAt
                        name
                        filename
                        type
                        externalId
                        extension
                        size
                        downloadUrl(validityInDays: $validityInDays1, permanent: $permanent1)
                      }
                      externalId
                      tags {
                        value
                        source
                      }
                      copyright {
                        status
                        notice
                      }
                      availability {
                        from
                        to
                      }
                      expiresAt
                      licenses {
                        id
                        title
                        license
                        addByDefault
                        requireConsensus
                      }
                      status
                      relatedAssets(limit: $limit, page: $page) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      comments(limit: $limit1, page: $page1, query: $query) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      currentUserPermissions {
                        canEdit
                        canDelete
                        canDownload
                        canComment
                      }
                      workflowTask {
                        id
                        title
                        description
                      }
                      variants(limit: $limit2, page: $page2) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      previewBackgroundColor {
                        red
                        green
                        blue
                        alpha
                      }
                    }
                  }
                  comments(limit: $limit5, page: $page5, query: $query1) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      id
                      createdAt
                      modifiedAt
                      content
                      mentionedUsers {
                        __typename
                        id
                        name
                      }
                      isResolved
                      replies(limit: $limit4, page: $page4) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                    }
                  }
                  currentUserPermissions {
                    canEdit
                    canDelete
                    canDownload
                    canComment
                  }
                  customMetadata {
                    __typename
                    property {
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      name
                      type {
                        __typename
                        name
                      }
                      helpText
                      isRequired
                      defaultValue
                    }
                  }
                  workflowTask {
                    id
                    assignedUsers {
                      __typename
                      id
                      name
                    }
                    asset {
                      __typename
                      id
                      createdAt
                      modifiedAt
                      title
                      description
                      externalId
                      expiresAt
                      status
                      variants(limit: $limit6, page: $page6) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      previewBackgroundColor {
                        red
                        green
                        blue
                        alpha
                      }
                    }
                    title
                    description
                    status {
                      id
                      name
                      color {
                        red
                        green
                        blue
                        alpha
                      }
                      assignedUsers {
                        __typename
                        id
                        name
                      }
                      checklistPresets {
                        id
                        content
                      }
                      tasks(limit: $limit7, page: $page7) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      enterRules
                    }
                    checklistItem(limit: $limit8, page: $page8) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        id
                        content
                      }
                    }
                  }
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {
            "validityInDays": validity_in_days,
            "permanent": permanent,
            "validityInDays1": validity_in_days_1,
            "permanent1": permanent_1,
            "limit": limit,
            "page": page,
            "limit1": limit_1,
            "page1": page_1,
            "query": query,
            "limit2": limit_2,
            "page2": page_2,
            "limit3": limit_3,
            "page3": page_3,
            "limit4": limit_4,
            "page4": page_4,
            "limit5": limit_5,
            "page5": page_5,
            "query1": query_1,
            "limit6": limit_6,
            "page6": page_6,
            "limit7": limit_7,
            "page7": page_7,
            "limit8": limit_8,
            "page8": page_8,
            "input": input,
        }
        response = self.execute(
            query=_query, operation_name="addAssetTags", variables=variables, **kwargs
        )
        data = self.get_data(response)
        return AddAssetTags.model_validate(data)

    def add_collection_assets(
        self,
        input: AddCollectionAssetsInput,
        validity_in_days: Union[Optional[int], UnsetType] = UNSET,
        permanent: Union[Optional[bool], UnsetType] = UNSET,
        limit: Union[Optional[int], UnsetType] = UNSET,
        page: Union[Optional[int], UnsetType] = UNSET,
        limit_1: Union[Optional[int], UnsetType] = UNSET,
        page_1: Union[Optional[int], UnsetType] = UNSET,
        query: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_2: Union[Optional[int], UnsetType] = UNSET,
        page_2: Union[Optional[int], UnsetType] = UNSET,
        limit_3: Union[Optional[int], UnsetType] = UNSET,
        page_3: Union[Optional[int], UnsetType] = UNSET,
        **kwargs: Any
    ) -> AddCollectionAssets:
        _query = gql(
            """
            mutation addCollectionAssets($validityInDays: Int, $permanent: Boolean, $limit: Int, $page: Int, $limit1: Int, $page1: Int, $query: AssetCommentQueryInput, $limit2: Int, $page2: Int, $limit3: Int, $page3: Int, $input: AddCollectionAssetsInput!) {
              addCollectionAssets(input: $input) {
                collection {
                  id
                  name
                  assets(limit: $limit3, page: $page3) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      __typename
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      title
                      description
                      attachments {
                        id
                        createdAt
                        modifiedAt
                        name
                        filename
                        type
                        externalId
                        extension
                        size
                        downloadUrl(validityInDays: $validityInDays, permanent: $permanent)
                      }
                      externalId
                      tags {
                        value
                        source
                      }
                      copyright {
                        status
                        notice
                      }
                      availability {
                        from
                        to
                      }
                      expiresAt
                      licenses {
                        id
                        title
                        license
                        addByDefault
                        requireConsensus
                      }
                      status
                      relatedAssets(limit: $limit, page: $page) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      comments(limit: $limit1, page: $page1, query: $query) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      currentUserPermissions {
                        canEdit
                        canDelete
                        canDownload
                        canComment
                      }
                      workflowTask {
                        id
                        title
                        description
                      }
                      variants(limit: $limit2, page: $page2) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      previewBackgroundColor {
                        red
                        green
                        blue
                        alpha
                      }
                    }
                  }
                  currentUserPermissions {
                    canAddAssets
                    canRemoveAssets
                  }
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {
            "validityInDays": validity_in_days,
            "permanent": permanent,
            "limit": limit,
            "page": page,
            "limit1": limit_1,
            "page1": page_1,
            "query": query,
            "limit2": limit_2,
            "page2": page_2,
            "limit3": limit_3,
            "page3": page_3,
            "input": input,
        }
        response = self.execute(
            query=_query,
            operation_name="addCollectionAssets",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return AddCollectionAssets.model_validate(data)

    def add_custom_metadata(
        self, input: AddCustomMetadataInput, **kwargs: Any
    ) -> AddCustomMetadata:
        query = gql(
            """
            mutation addCustomMetadata($input: AddCustomMetadataInput!) {
              addCustomMetadata(input: $input) {
                parentIds
              }
            }
            """
        )
        variables: Dict[str, object] = {"input": input}
        response = self.execute(
            query=query,
            operation_name="addCustomMetadata",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return AddCustomMetadata.model_validate(data)

    def add_custom_metadata_property_options(
        self, input: AddCustomMetadataPropertyOptionsInput, **kwargs: Any
    ) -> AddCustomMetadataPropertyOptions:
        query = gql(
            """
            mutation addCustomMetadataPropertyOptions($input: AddCustomMetadataPropertyOptionsInput!) {
              addCustomMetadataPropertyOptions(input: $input) {
                customMetadataProperty {
                  id
                  creator {
                    __typename
                    id
                    name
                  }
                  createdAt
                  modifier {
                    __typename
                    id
                    name
                  }
                  modifiedAt
                  name
                  type {
                    __typename
                    name
                  }
                  helpText
                  isRequired
                  defaultValue
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {"input": input}
        response = self.execute(
            query=query,
            operation_name="addCustomMetadataPropertyOptions",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return AddCustomMetadataPropertyOptions.model_validate(data)

    def add_workflow_checklist_item(
        self, input: AddWorkflowChecklistItemInput, **kwargs: Any
    ) -> AddWorkflowChecklistItem:
        query = gql(
            """
            mutation addWorkflowChecklistItem($input: AddWorkflowChecklistItemInput!) {
              addWorkflowChecklistItem(input: $input) {
                checklistItem {
                  id
                  content
                  assignedUser {
                    __typename
                    id
                    name
                  }
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {"input": input}
        response = self.execute(
            query=query,
            operation_name="addWorkflowChecklistItem",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return AddWorkflowChecklistItem.model_validate(data)

    def add_workflow_checklist_preset(
        self, input: AddWorkflowChecklistPresetInput, **kwargs: Any
    ) -> AddWorkflowChecklistPreset:
        query = gql(
            """
            mutation addWorkflowChecklistPreset($input: AddWorkflowChecklistPresetInput!) {
              addWorkflowChecklistPreset(input: $input) {
                checklistPreset {
                  id
                  content
                  assignedUser {
                    __typename
                    id
                    name
                  }
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {"input": input}
        response = self.execute(
            query=query,
            operation_name="addWorkflowChecklistPreset",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return AddWorkflowChecklistPreset.model_validate(data)

    def add_workflow_status_assignees(
        self,
        input: AddWorkflowStatusAssigneesInput,
        limit: Union[Optional[int], UnsetType] = UNSET,
        page: Union[Optional[int], UnsetType] = UNSET,
        limit_1: Union[Optional[int], UnsetType] = UNSET,
        page_1: Union[Optional[int], UnsetType] = UNSET,
        **kwargs: Any
    ) -> AddWorkflowStatusAssignees:
        query = gql(
            """
            mutation addWorkflowStatusAssignees($limit: Int, $page: Int, $limit1: Int, $page1: Int, $input: AddWorkflowStatusAssigneesInput!) {
              addWorkflowStatusAssignees(input: $input) {
                workflowStatus {
                  id
                  name
                  color {
                    red
                    green
                    blue
                    alpha
                  }
                  assignedUsers {
                    __typename
                    id
                    name
                  }
                  checklistPresets {
                    id
                    content
                    assignedUser {
                      __typename
                      id
                      name
                    }
                  }
                  tasks(limit: $limit1, page: $page1) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      id
                      assignedUsers {
                        __typename
                        id
                        name
                      }
                      asset {
                        __typename
                        id
                        createdAt
                        modifiedAt
                        title
                        description
                        externalId
                        expiresAt
                        status
                      }
                      title
                      description
                      status {
                        id
                        name
                        enterRules
                      }
                      checklistItem(limit: $limit, page: $page) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                    }
                  }
                  enterRules
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {
            "limit": limit,
            "page": page,
            "limit1": limit_1,
            "page1": page_1,
            "input": input,
        }
        response = self.execute(
            query=query,
            operation_name="addWorkflowStatusAssignees",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return AddWorkflowStatusAssignees.model_validate(data)

    def add_workflow_task_assignees(
        self,
        input: AddWorkflowTaskAssigneesInput,
        validity_in_days: Union[Optional[int], UnsetType] = UNSET,
        permanent: Union[Optional[bool], UnsetType] = UNSET,
        limit: Union[Optional[int], UnsetType] = UNSET,
        page: Union[Optional[int], UnsetType] = UNSET,
        limit_1: Union[Optional[int], UnsetType] = UNSET,
        page_1: Union[Optional[int], UnsetType] = UNSET,
        query: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_2: Union[Optional[int], UnsetType] = UNSET,
        page_2: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_1: Union[Optional[int], UnsetType] = UNSET,
        permanent_1: Union[Optional[bool], UnsetType] = UNSET,
        limit_3: Union[Optional[int], UnsetType] = UNSET,
        page_3: Union[Optional[int], UnsetType] = UNSET,
        **kwargs: Any
    ) -> AddWorkflowTaskAssignees:
        _query = gql(
            """
            mutation addWorkflowTaskAssignees($validityInDays: Int, $permanent: Boolean, $limit: Int, $page: Int, $limit1: Int, $page1: Int, $query: AssetCommentQueryInput, $limit2: Int, $page2: Int, $validityInDays1: Int, $permanent1: Boolean, $limit3: Int, $page3: Int, $input: AddWorkflowTaskAssigneesInput!) {
              addWorkflowTaskAssignees(input: $input) {
                workflowTask {
                  id
                  assignedUsers {
                    __typename
                    id
                    name
                  }
                  asset {
                    __typename
                    id
                    creator {
                      __typename
                      id
                      name
                    }
                    createdAt
                    modifier {
                      __typename
                      id
                      name
                    }
                    modifiedAt
                    title
                    description
                    attachments {
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      name
                      filename
                      type
                      externalId
                      extension
                      size
                      downloadUrl(validityInDays: $validityInDays, permanent: $permanent)
                    }
                    externalId
                    tags {
                      value
                      source
                    }
                    copyright {
                      status
                      notice
                    }
                    availability {
                      from
                      to
                    }
                    expiresAt
                    licenses {
                      id
                      title
                      license
                      addByDefault
                      requireConsensus
                    }
                    status
                    relatedAssets(limit: $limit, page: $page) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        __typename
                        id
                        createdAt
                        modifiedAt
                        title
                        description
                        externalId
                        expiresAt
                        status
                      }
                    }
                    comments(limit: $limit1, page: $page1, query: $query) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        id
                        createdAt
                        modifiedAt
                        content
                        isResolved
                      }
                    }
                    currentUserPermissions {
                      canEdit
                      canDelete
                      canDownload
                      canComment
                    }
                    customMetadata {
                      __typename
                      property {
                        id
                        createdAt
                        modifiedAt
                        name
                        helpText
                        isRequired
                        defaultValue
                      }
                    }
                    workflowTask {
                      id
                      title
                      description
                      status {
                        id
                        name
                        enterRules
                      }
                      checklistItem(limit: $limit2, page: $page2) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                    }
                    variants(limit: $limit3, page: $page3) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        key
                        filename
                        downloadUrl(validityInDays: $validityInDays1, permanent: $permanent1)
                      }
                    }
                    location {
                      brand {
                        id
                        name
                      }
                      library {
                        id
                        name
                      }
                      workspaceProject {
                        id
                        name
                      }
                      folder {
                        id
                        name
                      }
                    }
                    previewBackgroundColor {
                      red
                      green
                      blue
                      alpha
                    }
                  }
                  title
                  description
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {
            "validityInDays": validity_in_days,
            "permanent": permanent,
            "limit": limit,
            "page": page,
            "limit1": limit_1,
            "page1": page_1,
            "query": query,
            "limit2": limit_2,
            "page2": page_2,
            "validityInDays1": validity_in_days_1,
            "permanent1": permanent_1,
            "limit3": limit_3,
            "page3": page_3,
            "input": input,
        }
        response = self.execute(
            query=_query,
            operation_name="addWorkflowTaskAssignees",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return AddWorkflowTaskAssignees.model_validate(data)

    def cancel_export_creatives(
        self,
        input: CancelExportCreativesInput,
        validity_in_days: Union[Optional[int], UnsetType] = UNSET,
        permanent: Union[Optional[bool], UnsetType] = UNSET,
        limit: Union[Optional[int], UnsetType] = UNSET,
        page: Union[Optional[int], UnsetType] = UNSET,
        limit_1: Union[Optional[int], UnsetType] = UNSET,
        page_1: Union[Optional[int], UnsetType] = UNSET,
        query: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_2: Union[Optional[int], UnsetType] = UNSET,
        page_2: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_1: Union[Optional[int], UnsetType] = UNSET,
        permanent_1: Union[Optional[bool], UnsetType] = UNSET,
        **kwargs: Any
    ) -> CancelExportCreatives:
        _query = gql(
            """
            mutation cancelExportCreatives($validityInDays: Int, $permanent: Boolean, $limit: Int, $page: Int, $limit1: Int, $page1: Int, $query: AssetCommentQueryInput, $limit2: Int, $page2: Int, $validityInDays1: Int, $permanent1: Boolean, $input: CancelExportCreativesInput!) {
              cancelExportCreatives(input: $input) {
                canceledJobs {
                  id
                  status
                  result {
                    downloadUrl
                    pageDownloadUrls
                    asset {
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      title
                      description
                      alternativeText
                      isDecorative
                      attachments {
                        id
                        createdAt
                        modifiedAt
                        name
                        filename
                        type
                        externalId
                        extension
                        size
                        downloadUrl(validityInDays: $validityInDays, permanent: $permanent)
                      }
                      externalId
                      tags {
                        value
                        source
                      }
                      copyright {
                        status
                        notice
                      }
                      availability {
                        from
                        to
                      }
                      expiresAt
                      licenses {
                        id
                        title
                        license
                        addByDefault
                        requireConsensus
                      }
                      author
                      status
                      relatedAssets(limit: $limit, page: $page) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      comments(limit: $limit1, page: $page1, query: $query) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      currentUserPermissions {
                        canEdit
                        canDelete
                        canDownload
                        canComment
                      }
                      workflowTask {
                        id
                        title
                        description
                      }
                      variants(limit: $limit2, page: $page2) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      previewBackgroundColor {
                        red
                        green
                        blue
                        alpha
                      }
                      filename
                      size
                      extension
                      previewUrl
                      thumbnailUrl
                      dynamicPreviewUrl
                      downloadUrl(validityInDays: $validityInDays1, permanent: $permanent1)
                    }
                  }
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {
            "validityInDays": validity_in_days,
            "permanent": permanent,
            "limit": limit,
            "page": page,
            "limit1": limit_1,
            "page1": page_1,
            "query": query,
            "limit2": limit_2,
            "page2": page_2,
            "validityInDays1": validity_in_days_1,
            "permanent1": permanent_1,
            "input": input,
        }
        response = self.execute(
            query=_query,
            operation_name="cancelExportCreatives",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return CancelExportCreatives.model_validate(data)

    def create_account_user(
        self, input: CreateAccountUserInput, **kwargs: Any
    ) -> CreateAccountUser:
        query = gql(
            """
            mutation createAccountUser($input: CreateAccountUserInput!) {
              createAccountUser(input: $input) {
                accountUser {
                  id
                  email
                  name
                  avatar
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {"input": input}
        response = self.execute(
            query=query,
            operation_name="createAccountUser",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return CreateAccountUser.model_validate(data)

    def create_asset(self, input: CreateAssetInput, **kwargs: Any) -> CreateAsset:
        query = gql(
            """
            mutation createAsset($input: CreateAssetInput!) {
              createAsset(input: $input) {
                job {
                  assetId
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {"input": input}
        response = self.execute(
            query=query, operation_name="createAsset", variables=variables, **kwargs
        )
        data = self.get_data(response)
        return CreateAsset.model_validate(data)

    def create_asset_comment(
        self,
        input: CreateAssetCommentInput,
        limit: Union[Optional[int], UnsetType] = UNSET,
        page: Union[Optional[int], UnsetType] = UNSET,
        **kwargs: Any
    ) -> CreateAssetComment:
        query = gql(
            """
            mutation createAssetComment($limit: Int, $page: Int, $input: CreateAssetCommentInput!) {
              createAssetComment(input: $input) {
                comment {
                  id
                  creator {
                    __typename
                    id
                    name
                  }
                  createdAt
                  modifier {
                    __typename
                    id
                    name
                  }
                  modifiedAt
                  content
                  mentionedUsers {
                    __typename
                    id
                    name
                  }
                  isResolved
                  replies(limit: $limit, page: $page) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      content
                      mentionedUsers {
                        __typename
                        id
                        name
                      }
                    }
                  }
                  marking {
                    __typename
                    position {
                      x
                      y
                    }
                    dimensions {
                      width
                      height
                    }
                  }
                  currentUserPermissions {
                    canEdit
                    canDelete
                    canReply
                  }
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {"limit": limit, "page": page, "input": input}
        response = self.execute(
            query=query,
            operation_name="createAssetComment",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return CreateAssetComment.model_validate(data)

    def create_asset_submissions(
        self, input: CreateAssetSubmissionsInput, **kwargs: Any
    ) -> CreateAssetSubmissions:
        query = gql(
            """
            mutation createAssetSubmissions($input: CreateAssetSubmissionsInput!) {
              createAssetSubmissions(input: $input) {
                assetSubmissionIds
              }
            }
            """
        )
        variables: Dict[str, object] = {"input": input}
        response = self.execute(
            query=query,
            operation_name="createAssetSubmissions",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return CreateAssetSubmissions.model_validate(data)

    def create_asset_variant(
        self, input: CreateAssetVariantInput, **kwargs: Any
    ) -> CreateAssetVariant:
        query = gql(
            """
            mutation createAssetVariant($input: CreateAssetVariantInput!) {
              createAssetVariant(input: $input) {
                job {
                  variantId
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {"input": input}
        response = self.execute(
            query=query,
            operation_name="createAssetVariant",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return CreateAssetVariant.model_validate(data)

    def create_asset_workflow_task(
        self,
        input: CreateAssetWorkflowTaskInput,
        validity_in_days: Union[Optional[int], UnsetType] = UNSET,
        permanent: Union[Optional[bool], UnsetType] = UNSET,
        limit: Union[Optional[int], UnsetType] = UNSET,
        page: Union[Optional[int], UnsetType] = UNSET,
        limit_1: Union[Optional[int], UnsetType] = UNSET,
        page_1: Union[Optional[int], UnsetType] = UNSET,
        query: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_2: Union[Optional[int], UnsetType] = UNSET,
        page_2: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_1: Union[Optional[int], UnsetType] = UNSET,
        permanent_1: Union[Optional[bool], UnsetType] = UNSET,
        limit_3: Union[Optional[int], UnsetType] = UNSET,
        page_3: Union[Optional[int], UnsetType] = UNSET,
        **kwargs: Any
    ) -> CreateAssetWorkflowTask:
        _query = gql(
            """
            mutation createAssetWorkflowTask($validityInDays: Int, $permanent: Boolean, $limit: Int, $page: Int, $limit1: Int, $page1: Int, $query: AssetCommentQueryInput, $limit2: Int, $page2: Int, $validityInDays1: Int, $permanent1: Boolean, $limit3: Int, $page3: Int, $input: CreateAssetWorkflowTaskInput!) {
              createAssetWorkflowTask(input: $input) {
                workflowTask {
                  id
                  assignedUsers {
                    __typename
                    id
                    name
                  }
                  asset {
                    __typename
                    id
                    creator {
                      __typename
                      id
                      name
                    }
                    createdAt
                    modifier {
                      __typename
                      id
                      name
                    }
                    modifiedAt
                    title
                    description
                    attachments {
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      name
                      filename
                      type
                      externalId
                      extension
                      size
                      downloadUrl(validityInDays: $validityInDays, permanent: $permanent)
                    }
                    externalId
                    tags {
                      value
                      source
                    }
                    copyright {
                      status
                      notice
                    }
                    availability {
                      from
                      to
                    }
                    expiresAt
                    licenses {
                      id
                      title
                      license
                      addByDefault
                      requireConsensus
                    }
                    status
                    relatedAssets(limit: $limit, page: $page) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        __typename
                        id
                        createdAt
                        modifiedAt
                        title
                        description
                        externalId
                        expiresAt
                        status
                      }
                    }
                    comments(limit: $limit1, page: $page1, query: $query) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        id
                        createdAt
                        modifiedAt
                        content
                        isResolved
                      }
                    }
                    currentUserPermissions {
                      canEdit
                      canDelete
                      canDownload
                      canComment
                    }
                    customMetadata {
                      __typename
                      property {
                        id
                        createdAt
                        modifiedAt
                        name
                        helpText
                        isRequired
                        defaultValue
                      }
                    }
                    workflowTask {
                      id
                      title
                      description
                      status {
                        id
                        name
                        enterRules
                      }
                      checklistItem(limit: $limit2, page: $page2) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                    }
                    variants(limit: $limit3, page: $page3) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        key
                        filename
                        downloadUrl(validityInDays: $validityInDays1, permanent: $permanent1)
                      }
                    }
                    location {
                      brand {
                        id
                        name
                      }
                      library {
                        id
                        name
                      }
                      workspaceProject {
                        id
                        name
                      }
                      folder {
                        id
                        name
                      }
                    }
                    previewBackgroundColor {
                      red
                      green
                      blue
                      alpha
                    }
                  }
                  title
                  description
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {
            "validityInDays": validity_in_days,
            "permanent": permanent,
            "limit": limit,
            "page": page,
            "limit1": limit_1,
            "page1": page_1,
            "query": query,
            "limit2": limit_2,
            "page2": page_2,
            "validityInDays1": validity_in_days_1,
            "permanent1": permanent_1,
            "limit3": limit_3,
            "page3": page_3,
            "input": input,
        }
        response = self.execute(
            query=_query,
            operation_name="createAssetWorkflowTask",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return CreateAssetWorkflowTask.model_validate(data)

    def create_attachment(
        self, input: CreateAttachmentInput, **kwargs: Any
    ) -> CreateAttachment:
        query = gql(
            """
            mutation createAttachment($input: CreateAttachmentInput!) {
              createAttachment(input: $input) {
                job {
                  attachmentId
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {"input": input}
        response = self.execute(
            query=query,
            operation_name="createAttachment",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return CreateAttachment.model_validate(data)

    def create_brand(
        self,
        key: str,
        input: CreateBrandInput,
        validity_in_days: Union[Optional[int], UnsetType] = UNSET,
        permanent: Union[Optional[bool], UnsetType] = UNSET,
        limit: Union[Optional[int], UnsetType] = UNSET,
        page: Union[Optional[int], UnsetType] = UNSET,
        limit_1: Union[Optional[int], UnsetType] = UNSET,
        page_1: Union[Optional[int], UnsetType] = UNSET,
        query: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_2: Union[Optional[int], UnsetType] = UNSET,
        page_2: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_1: Union[Optional[int], UnsetType] = UNSET,
        permanent_1: Union[Optional[bool], UnsetType] = UNSET,
        limit_3: Union[Optional[int], UnsetType] = UNSET,
        page_3: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_2: Union[Optional[int], UnsetType] = UNSET,
        permanent_2: Union[Optional[bool], UnsetType] = UNSET,
        width: Union[Optional[int], UnsetType] = UNSET,
        height: Union[Optional[int], UnsetType] = UNSET,
        width_1: Union[Optional[int], UnsetType] = UNSET,
        height_1: Union[Optional[int], UnsetType] = UNSET,
        page_4: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_3: Union[Optional[int], UnsetType] = UNSET,
        permanent_3: Union[Optional[bool], UnsetType] = UNSET,
        validity_in_days_4: Union[Optional[int], UnsetType] = UNSET,
        permanent_4: Union[Optional[bool], UnsetType] = UNSET,
        width_2: Union[Optional[int], UnsetType] = UNSET,
        height_2: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_5: Union[Optional[int], UnsetType] = UNSET,
        permanent_5: Union[Optional[bool], UnsetType] = UNSET,
        width_3: Union[Optional[int], UnsetType] = UNSET,
        height_3: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_6: Union[Optional[int], UnsetType] = UNSET,
        permanent_6: Union[Optional[bool], UnsetType] = UNSET,
        validity_in_days_7: Union[Optional[int], UnsetType] = UNSET,
        permanent_7: Union[Optional[bool], UnsetType] = UNSET,
        limit_4: Union[Optional[int], UnsetType] = UNSET,
        page_5: Union[Optional[int], UnsetType] = UNSET,
        limit_5: Union[Optional[int], UnsetType] = UNSET,
        page_6: Union[Optional[int], UnsetType] = UNSET,
        query_1: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_6: Union[Optional[int], UnsetType] = UNSET,
        page_7: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_8: Union[Optional[int], UnsetType] = UNSET,
        permanent_8: Union[Optional[bool], UnsetType] = UNSET,
        width_4: Union[Optional[int], UnsetType] = UNSET,
        height_4: Union[Optional[int], UnsetType] = UNSET,
        width_5: Union[Optional[int], UnsetType] = UNSET,
        height_5: Union[Optional[int], UnsetType] = UNSET,
        page_8: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_9: Union[Optional[int], UnsetType] = UNSET,
        permanent_9: Union[Optional[bool], UnsetType] = UNSET,
        validity_in_days_10: Union[Optional[int], UnsetType] = UNSET,
        permanent_10: Union[Optional[bool], UnsetType] = UNSET,
        width_6: Union[Optional[int], UnsetType] = UNSET,
        height_6: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_11: Union[Optional[int], UnsetType] = UNSET,
        permanent_11: Union[Optional[bool], UnsetType] = UNSET,
        width_7: Union[Optional[int], UnsetType] = UNSET,
        height_7: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_12: Union[Optional[int], UnsetType] = UNSET,
        permanent_12: Union[Optional[bool], UnsetType] = UNSET,
        limit_7: Union[Optional[int], UnsetType] = UNSET,
        page_9: Union[Optional[int], UnsetType] = UNSET,
        query_2: Union[Optional[BrandQueryInput], UnsetType] = UNSET,
        limit_8: Union[Optional[int], UnsetType] = UNSET,
        page_10: Union[Optional[int], UnsetType] = UNSET,
        query_3: Union[Optional[AssetQueryInput], UnsetType] = UNSET,
        limit_9: Union[Optional[int], UnsetType] = UNSET,
        page_11: Union[Optional[int], UnsetType] = UNSET,
        limit_10: Union[Optional[int], UnsetType] = UNSET,
        page_12: Union[Optional[int], UnsetType] = UNSET,
        query_4: Union[Optional[LibraryQueryInput], UnsetType] = UNSET,
        limit_11: Union[Optional[int], UnsetType] = UNSET,
        page_13: Union[Optional[int], UnsetType] = UNSET,
        query_5: Union[Optional[WorkspaceProjectQueryInput], UnsetType] = UNSET,
        limit_12: Union[Optional[int], UnsetType] = UNSET,
        page_14: Union[Optional[int], UnsetType] = UNSET,
        limit_13: Union[Optional[int], UnsetType] = UNSET,
        page_15: Union[Optional[int], UnsetType] = UNSET,
        language: Union[Optional[LanguageCode], UnsetType] = UNSET,
        limit_14: Union[Optional[int], UnsetType] = UNSET,
        page_16: Union[Optional[int], UnsetType] = UNSET,
        limit_15: Union[Optional[int], UnsetType] = UNSET,
        page_17: Union[Optional[int], UnsetType] = UNSET,
        query_6: Union[Optional[CreativeTemplateQueryInput], UnsetType] = UNSET,
        **kwargs: Any
    ) -> CreateBrand:
        _query = gql(
            """
            mutation createBrand($validityInDays: Int, $permanent: Boolean, $limit: Int, $page: Int, $limit1: Int, $page1: Int, $query: AssetCommentQueryInput, $limit2: Int, $page2: Int, $validityInDays1: Int, $permanent1: Boolean, $limit3: Int, $page3: Int, $validityInDays2: Int, $permanent2: Boolean, $width: Int, $height: Int, $width1: Int, $height1: Int, $page4: Int, $validityInDays3: Int, $permanent3: Boolean, $validityInDays4: Int, $permanent4: Boolean, $width2: Int, $height2: Int, $validityInDays5: Int, $permanent5: Boolean, $width3: Int, $height3: Int, $validityInDays6: Int, $permanent6: Boolean, $validityInDays7: Int, $permanent7: Boolean, $limit4: Int, $page5: Int, $limit5: Int, $page6: Int, $query1: AssetCommentQueryInput, $limit6: Int, $page7: Int, $validityInDays8: Int, $permanent8: Boolean, $width4: Int, $height4: Int, $width5: Int, $height5: Int, $page8: Int, $validityInDays9: Int, $permanent9: Boolean, $validityInDays10: Int, $permanent10: Boolean, $width6: Int, $height6: Int, $validityInDays11: Int, $permanent11: Boolean, $width7: Int, $height7: Int, $validityInDays12: Int, $permanent12: Boolean, $limit7: Int, $page9: Int, $query2: BrandQueryInput, $limit8: Int, $page10: Int, $query3: AssetQueryInput, $limit9: Int, $page11: Int, $limit10: Int, $page12: Int, $query4: LibraryQueryInput, $limit11: Int, $page13: Int, $query5: WorkspaceProjectQueryInput, $limit12: Int, $page14: Int, $limit13: Int, $page15: Int, $language: LanguageCode, $limit14: Int, $page16: Int, $key: String!, $limit15: Int, $page17: Int, $query6: CreativeTemplateQueryInput, $input: CreateBrandInput!) {
              createBrand(input: $input) {
                brand {
                  id
                  name
                  rgbaColor {
                    red
                    green
                    blue
                    alpha
                  }
                  avatar
                  slug
                  search(limit: $limit7, page: $page9, query: $query2) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      __typename
                      ... on Audio {
                        id
                        creator {
                          __typename
                          id
                          name
                        }
                        createdAt
                        modifier {
                          __typename
                          id
                          name
                        }
                        modifiedAt
                        title
                        description
                        alternativeText
                        isDecorative
                        attachments {
                          id
                          creator {
                            __typename
                            id
                            name
                          }
                          createdAt
                          modifier {
                            __typename
                            id
                            name
                          }
                          modifiedAt
                          name
                          filename
                          type
                          externalId
                          extension
                          size
                          downloadUrl(validityInDays: $validityInDays, permanent: $permanent)
                        }
                        externalId
                        tags {
                          value
                          source
                        }
                        externalProducts {
                          id
                          name
                          externalId
                          title
                        }
                        copyright {
                          status
                          notice
                        }
                        availability {
                          from
                          to
                        }
                        expiresAt
                        licenses {
                          id
                          title
                          license
                          addByDefault
                          requireConsensus
                        }
                        author
                        status
                        relatedAssets(limit: $limit, page: $page) {
                          total
                          page
                          limit
                          hasNextPage
                          items {
                            __typename
                            id
                            createdAt
                            modifiedAt
                            title
                            description
                            externalId
                            expiresAt
                            status
                          }
                        }
                        comments(limit: $limit1, page: $page1, query: $query) {
                          total
                          page
                          limit
                          hasNextPage
                          items {
                            id
                            createdAt
                            modifiedAt
                            content
                            isResolved
                          }
                        }
                        currentUserPermissions {
                          canEdit
                          canDelete
                          canDownload
                          canComment
                        }
                        customMetadata {
                          __typename
                          property {
                            id
                            createdAt
                            modifiedAt
                            name
                            helpText
                            isRequired
                            defaultValue
                          }
                        }
                        workflowTask {
                          id
                          assignedUsers {
                            __typename
                            id
                            name
                          }
                          asset {
                            __typename
                            id
                            createdAt
                            modifiedAt
                            title
                            description
                            externalId
                            expiresAt
                            status
                          }
                          title
                          description
                          status {
                            id
                            name
                            enterRules
                          }
                          checklistItem(limit: $limit2, page: $page2) {
                            total
                            page
                            limit
                            hasNextPage
                          }
                        }
                        variants(limit: $limit3, page: $page3) {
                          total
                          page
                          limit
                          hasNextPage
                          items {
                            key
                            filename
                            downloadUrl(validityInDays: $validityInDays1, permanent: $permanent1)
                          }
                        }
                        location {
                          brand {
                            id
                            name
                          }
                          library {
                            id
                            name
                          }
                          workspaceProject {
                            id
                            name
                          }
                          folder {
                            id
                            name
                          }
                        }
                        previewBackgroundColor {
                          red
                          green
                          blue
                          alpha
                        }
                        filename
                        size
                        extension
                        downloadUrl(validityInDays: $validityInDays2, permanent: $permanent2)
                        previewUrl(width: $width, height: $height)
                        thumbnailUrl
                        dynamicPreviewUrl
                      }
                      ... on Document {
                        id
                        createdAt
                        modifiedAt
                        title
                        description
                        alternativeText
                        isDecorative
                        externalId
                        expiresAt
                        author
                        status
                        filename
                        size
                        extension
                        previewUrl(width: $width1, height: $height1, page: $page4)
                        thumbnailUrl
                        dynamicPreviewUrl
                        downloadUrl(validityInDays: $validityInDays3, permanent: $permanent3)
                        focalPoint
                        width
                        height
                        pageCount
                      }
                      ... on EmbeddedContent {
                        id
                        createdAt
                        modifiedAt
                        title
                        description
                        alternativeText
                        isDecorative
                        externalId
                        expiresAt
                        author
                        status
                        previewUrl
                        thumbnailUrl
                      }
                      ... on File {
                        id
                        createdAt
                        modifiedAt
                        title
                        description
                        alternativeText
                        isDecorative
                        externalId
                        expiresAt
                        author
                        status
                        filename
                        size
                        extension
                        previewUrl
                        thumbnailUrl
                        dynamicPreviewUrl
                        downloadUrl(validityInDays: $validityInDays4, permanent: $permanent4)
                      }
                      ... on Image {
                        id
                        createdAt
                        modifiedAt
                        title
                        description
                        alternativeText
                        isDecorative
                        externalId
                        expiresAt
                        author
                        status
                        filename
                        size
                        extension
                        previewUrl(width: $width2, height: $height2)
                        thumbnailUrl
                        dynamicPreviewUrl
                        downloadUrl(validityInDays: $validityInDays5, permanent: $permanent5)
                        focalPoint
                        width
                        height
                      }
                      ... on Video {
                        id
                        createdAt
                        modifiedAt
                        title
                        description
                        alternativeText
                        isDecorative
                        externalId
                        expiresAt
                        author
                        status
                        filename
                        size
                        extension
                        previewUrl(width: $width3, height: $height3)
                        thumbnailUrl
                        dynamicPreviewUrl
                        downloadUrl(validityInDays: $validityInDays6, permanent: $permanent6)
                        width
                        height
                        duration
                        bitrate
                      }
                    }
                    edges {
                      title
                      node {
                        __typename
                        ... on Audio {
                          id
                          creator {
                            __typename
                            id
                            name
                          }
                          createdAt
                          modifier {
                            __typename
                            id
                            name
                          }
                          modifiedAt
                          title
                          description
                          alternativeText
                          isDecorative
                          attachments {
                            id
                            createdAt
                            modifiedAt
                            name
                            filename
                            type
                            externalId
                            extension
                            size
                            downloadUrl(validityInDays: $validityInDays7, permanent: $permanent7)
                          }
                          externalId
                          tags {
                            value
                            source
                          }
                          externalProducts {
                            id
                            name
                            externalId
                            title
                          }
                          copyright {
                            status
                            notice
                          }
                          availability {
                            from
                            to
                          }
                          expiresAt
                          licenses {
                            id
                            title
                            license
                            addByDefault
                            requireConsensus
                          }
                          author
                          status
                          relatedAssets(limit: $limit4, page: $page5) {
                            total
                            page
                            limit
                            hasNextPage
                          }
                          comments(limit: $limit5, page: $page6, query: $query1) {
                            total
                            page
                            limit
                            hasNextPage
                          }
                          currentUserPermissions {
                            canEdit
                            canDelete
                            canDownload
                            canComment
                          }
                          workflowTask {
                            id
                            title
                            description
                          }
                          variants(limit: $limit6, page: $page7) {
                            total
                            page
                            limit
                            hasNextPage
                          }
                          previewBackgroundColor {
                            red
                            green
                            blue
                            alpha
                          }
                          filename
                          size
                          extension
                          downloadUrl(validityInDays: $validityInDays8, permanent: $permanent8)
                          previewUrl(width: $width4, height: $height4)
                          thumbnailUrl
                          dynamicPreviewUrl
                        }
                        ... on Document {
                          id
                          createdAt
                          modifiedAt
                          title
                          description
                          alternativeText
                          isDecorative
                          externalId
                          expiresAt
                          author
                          status
                          filename
                          size
                          extension
                          previewUrl(width: $width5, height: $height5, page: $page8)
                          thumbnailUrl
                          dynamicPreviewUrl
                          downloadUrl(validityInDays: $validityInDays9, permanent: $permanent9)
                          focalPoint
                          width
                          height
                          pageCount
                        }
                        ... on EmbeddedContent {
                          id
                          createdAt
                          modifiedAt
                          title
                          description
                          alternativeText
                          isDecorative
                          externalId
                          expiresAt
                          author
                          status
                          previewUrl
                          thumbnailUrl
                        }
                        ... on File {
                          id
                          createdAt
                          modifiedAt
                          title
                          description
                          alternativeText
                          isDecorative
                          externalId
                          expiresAt
                          author
                          status
                          filename
                          size
                          extension
                          previewUrl
                          thumbnailUrl
                          dynamicPreviewUrl
                          downloadUrl(validityInDays: $validityInDays10, permanent: $permanent10)
                        }
                        ... on Image {
                          id
                          createdAt
                          modifiedAt
                          title
                          description
                          alternativeText
                          isDecorative
                          externalId
                          expiresAt
                          author
                          status
                          filename
                          size
                          extension
                          previewUrl(width: $width6, height: $height6)
                          thumbnailUrl
                          dynamicPreviewUrl
                          downloadUrl(validityInDays: $validityInDays11, permanent: $permanent11)
                          focalPoint
                          width
                          height
                        }
                        ... on Video {
                          id
                          createdAt
                          modifiedAt
                          title
                          description
                          alternativeText
                          isDecorative
                          externalId
                          expiresAt
                          author
                          status
                          filename
                          size
                          extension
                          previewUrl(width: $width7, height: $height7)
                          thumbnailUrl
                          dynamicPreviewUrl
                          downloadUrl(validityInDays: $validityInDays12, permanent: $permanent12)
                          width
                          height
                          duration
                          bitrate
                        }
                      }
                    }
                  }
                  libraries(limit: $limit10, page: $page12, query: $query4) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      __typename
                      id
                      name
                      color {
                        red
                        green
                        blue
                        alpha
                      }
                      assets(limit: $limit8, page: $page10, query: $query3) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      collections(limit: $limit9, page: $page11) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      workflow {
                        id
                      }
                      customMetadataProperties {
                        id
                        createdAt
                        modifiedAt
                        name
                        helpText
                        isRequired
                        defaultValue
                      }
                      assetSubmissionRequests {
                        id
                        createdAt
                        modifiedAt
                        projectId
                        title
                        description
                        configuration
                      }
                    }
                  }
                  workspaceProjects(limit: $limit11, page: $page13, query: $query5) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      id
                      name
                      isArchived
                    }
                  }
                  guidelines(language: $language, limit: $limit14, page: $page16) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      id
                      name
                      url
                      defaultLanguage {
                        code
                        name
                      }
                      translationLanguages {
                        code
                        name
                      }
                      libraryPages(limit: $limit12, page: $page14) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      pages(limit: $limit13, page: $page15) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                    }
                  }
                  customMetadataProperties {
                    id
                    creator {
                      __typename
                      id
                      name
                    }
                    createdAt
                    modifier {
                      __typename
                      id
                      name
                    }
                    modifiedAt
                    name
                    type {
                      __typename
                      name
                    }
                    helpText
                    isRequired
                    defaultValue
                  }
                  creativeTemplates(limit: $limit15, page: $page17, query: $query6) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      id
                      brandId
                      name
                      description
                      variable(key: $key) {
                        key
                        name
                        description
                        type
                        value
                        connectionCount
                      }
                      variables {
                        key
                        name
                        description
                        type
                        value
                        connectionCount
                      }
                      assetId
                    }
                  }
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {
            "validityInDays": validity_in_days,
            "permanent": permanent,
            "limit": limit,
            "page": page,
            "limit1": limit_1,
            "page1": page_1,
            "query": query,
            "limit2": limit_2,
            "page2": page_2,
            "validityInDays1": validity_in_days_1,
            "permanent1": permanent_1,
            "limit3": limit_3,
            "page3": page_3,
            "validityInDays2": validity_in_days_2,
            "permanent2": permanent_2,
            "width": width,
            "height": height,
            "width1": width_1,
            "height1": height_1,
            "page4": page_4,
            "validityInDays3": validity_in_days_3,
            "permanent3": permanent_3,
            "validityInDays4": validity_in_days_4,
            "permanent4": permanent_4,
            "width2": width_2,
            "height2": height_2,
            "validityInDays5": validity_in_days_5,
            "permanent5": permanent_5,
            "width3": width_3,
            "height3": height_3,
            "validityInDays6": validity_in_days_6,
            "permanent6": permanent_6,
            "validityInDays7": validity_in_days_7,
            "permanent7": permanent_7,
            "limit4": limit_4,
            "page5": page_5,
            "limit5": limit_5,
            "page6": page_6,
            "query1": query_1,
            "limit6": limit_6,
            "page7": page_7,
            "validityInDays8": validity_in_days_8,
            "permanent8": permanent_8,
            "width4": width_4,
            "height4": height_4,
            "width5": width_5,
            "height5": height_5,
            "page8": page_8,
            "validityInDays9": validity_in_days_9,
            "permanent9": permanent_9,
            "validityInDays10": validity_in_days_10,
            "permanent10": permanent_10,
            "width6": width_6,
            "height6": height_6,
            "validityInDays11": validity_in_days_11,
            "permanent11": permanent_11,
            "width7": width_7,
            "height7": height_7,
            "validityInDays12": validity_in_days_12,
            "permanent12": permanent_12,
            "limit7": limit_7,
            "page9": page_9,
            "query2": query_2,
            "limit8": limit_8,
            "page10": page_10,
            "query3": query_3,
            "limit9": limit_9,
            "page11": page_11,
            "limit10": limit_10,
            "page12": page_12,
            "query4": query_4,
            "limit11": limit_11,
            "page13": page_13,
            "query5": query_5,
            "limit12": limit_12,
            "page14": page_14,
            "limit13": limit_13,
            "page15": page_15,
            "language": language,
            "limit14": limit_14,
            "page16": page_16,
            "key": key,
            "limit15": limit_15,
            "page17": page_17,
            "query6": query_6,
            "input": input,
        }
        response = self.execute(
            query=_query, operation_name="createBrand", variables=variables, **kwargs
        )
        data = self.get_data(response)
        return CreateBrand.model_validate(data)

    def create_collection(
        self,
        input: CreateCollectionInput,
        validity_in_days: Union[Optional[int], UnsetType] = UNSET,
        permanent: Union[Optional[bool], UnsetType] = UNSET,
        limit: Union[Optional[int], UnsetType] = UNSET,
        page: Union[Optional[int], UnsetType] = UNSET,
        limit_1: Union[Optional[int], UnsetType] = UNSET,
        page_1: Union[Optional[int], UnsetType] = UNSET,
        query: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_2: Union[Optional[int], UnsetType] = UNSET,
        page_2: Union[Optional[int], UnsetType] = UNSET,
        limit_3: Union[Optional[int], UnsetType] = UNSET,
        page_3: Union[Optional[int], UnsetType] = UNSET,
        **kwargs: Any
    ) -> CreateCollection:
        _query = gql(
            """
            mutation createCollection($validityInDays: Int, $permanent: Boolean, $limit: Int, $page: Int, $limit1: Int, $page1: Int, $query: AssetCommentQueryInput, $limit2: Int, $page2: Int, $limit3: Int, $page3: Int, $input: CreateCollectionInput!) {
              createCollection(input: $input) {
                collection {
                  id
                  name
                  assets(limit: $limit3, page: $page3) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      __typename
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      title
                      description
                      attachments {
                        id
                        createdAt
                        modifiedAt
                        name
                        filename
                        type
                        externalId
                        extension
                        size
                        downloadUrl(validityInDays: $validityInDays, permanent: $permanent)
                      }
                      externalId
                      tags {
                        value
                        source
                      }
                      copyright {
                        status
                        notice
                      }
                      availability {
                        from
                        to
                      }
                      expiresAt
                      licenses {
                        id
                        title
                        license
                        addByDefault
                        requireConsensus
                      }
                      status
                      relatedAssets(limit: $limit, page: $page) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      comments(limit: $limit1, page: $page1, query: $query) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      currentUserPermissions {
                        canEdit
                        canDelete
                        canDownload
                        canComment
                      }
                      workflowTask {
                        id
                        title
                        description
                      }
                      variants(limit: $limit2, page: $page2) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      previewBackgroundColor {
                        red
                        green
                        blue
                        alpha
                      }
                    }
                  }
                  currentUserPermissions {
                    canAddAssets
                    canRemoveAssets
                  }
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {
            "validityInDays": validity_in_days,
            "permanent": permanent,
            "limit": limit,
            "page": page,
            "limit1": limit_1,
            "page1": page_1,
            "query": query,
            "limit2": limit_2,
            "page2": page_2,
            "limit3": limit_3,
            "page3": page_3,
            "input": input,
        }
        response = self.execute(
            query=_query,
            operation_name="createCollection",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return CreateCollection.model_validate(data)

    def create_custom_metadata_property(
        self, input: CreateCustomMetadataPropertyInput, **kwargs: Any
    ) -> CreateCustomMetadataProperty:
        query = gql(
            """
            mutation createCustomMetadataProperty($input: CreateCustomMetadataPropertyInput!) {
              createCustomMetadataProperty(input: $input) {
                property {
                  id
                  creator {
                    __typename
                    id
                    name
                  }
                  createdAt
                  modifier {
                    __typename
                    id
                    name
                  }
                  modifiedAt
                  name
                  type {
                    __typename
                    name
                  }
                  helpText
                  isRequired
                  defaultValue
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {"input": input}
        response = self.execute(
            query=query,
            operation_name="createCustomMetadataProperty",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return CreateCustomMetadataProperty.model_validate(data)

    def create_external_asset(
        self, input: CreateExternalAssetInput, **kwargs: Any
    ) -> CreateExternalAsset:
        query = gql(
            """
            mutation createExternalAsset($input: CreateExternalAssetInput!) {
              createExternalAsset(input: $input) {
                job {
                  assetId
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {"input": input}
        response = self.execute(
            query=query,
            operation_name="createExternalAsset",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return CreateExternalAsset.model_validate(data)

    def create_folder(
        self,
        input: CreateFolderInput,
        limit: Union[Optional[int], UnsetType] = UNSET,
        page: Union[Optional[int], UnsetType] = UNSET,
        limit_1: Union[Optional[int], UnsetType] = UNSET,
        page_1: Union[Optional[int], UnsetType] = UNSET,
        query: Union[Optional[FolderAssetQueryInput], UnsetType] = UNSET,
        limit_2: Union[Optional[int], UnsetType] = UNSET,
        page_2: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days: Union[Optional[int], UnsetType] = UNSET,
        permanent: Union[Optional[bool], UnsetType] = UNSET,
        limit_3: Union[Optional[int], UnsetType] = UNSET,
        page_3: Union[Optional[int], UnsetType] = UNSET,
        limit_4: Union[Optional[int], UnsetType] = UNSET,
        page_4: Union[Optional[int], UnsetType] = UNSET,
        query_1: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_5: Union[Optional[int], UnsetType] = UNSET,
        page_5: Union[Optional[int], UnsetType] = UNSET,
        limit_6: Union[Optional[int], UnsetType] = UNSET,
        page_6: Union[Optional[int], UnsetType] = UNSET,
        query_2: Union[Optional[FolderAssetQueryInput], UnsetType] = UNSET,
        **kwargs: Any
    ) -> CreateFolder:
        _query = gql(
            """
            mutation createFolder($limit: Int, $page: Int, $limit1: Int, $page1: Int, $query: FolderAssetQueryInput, $limit2: Int, $page2: Int, $validityInDays: Int, $permanent: Boolean, $limit3: Int, $page3: Int, $limit4: Int, $page4: Int, $query1: AssetCommentQueryInput, $limit5: Int, $page5: Int, $limit6: Int, $page6: Int, $query2: FolderAssetQueryInput, $input: CreateFolderInput!) {
              createFolder(input: $input) {
                folder {
                  __typename
                  id
                  name
                  creator {
                    __typename
                    id
                    name
                  }
                  createdAt
                  modifier {
                    __typename
                    id
                    name
                  }
                  modifiedAt
                  breadcrumbs {
                    id
                    name
                  }
                  folders(limit: $limit2, page: $page2) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      __typename
                      id
                      name
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      breadcrumbs {
                        id
                        name
                      }
                      folders(limit: $limit, page: $page) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      assets(limit: $limit1, page: $page1, query: $query) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                    }
                  }
                  assets(limit: $limit6, page: $page6, query: $query2) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      __typename
                      id
                      createdAt
                      modifiedAt
                      title
                      description
                      attachments {
                        id
                        createdAt
                        modifiedAt
                        name
                        filename
                        type
                        externalId
                        extension
                        size
                        downloadUrl(validityInDays: $validityInDays, permanent: $permanent)
                      }
                      externalId
                      tags {
                        value
                        source
                      }
                      copyright {
                        status
                        notice
                      }
                      availability {
                        from
                        to
                      }
                      expiresAt
                      licenses {
                        id
                        title
                        license
                        addByDefault
                        requireConsensus
                      }
                      status
                      relatedAssets(limit: $limit3, page: $page3) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      comments(limit: $limit4, page: $page4, query: $query1) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      currentUserPermissions {
                        canEdit
                        canDelete
                        canDownload
                        canComment
                      }
                      workflowTask {
                        id
                        title
                        description
                      }
                      variants(limit: $limit5, page: $page5) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      previewBackgroundColor {
                        red
                        green
                        blue
                        alpha
                      }
                    }
                  }
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {
            "limit": limit,
            "page": page,
            "limit1": limit_1,
            "page1": page_1,
            "query": query,
            "limit2": limit_2,
            "page2": page_2,
            "validityInDays": validity_in_days,
            "permanent": permanent,
            "limit3": limit_3,
            "page3": page_3,
            "limit4": limit_4,
            "page4": page_4,
            "query1": query_1,
            "limit5": limit_5,
            "page5": page_5,
            "limit6": limit_6,
            "page6": page_6,
            "query2": query_2,
            "input": input,
        }
        response = self.execute(
            query=_query, operation_name="createFolder", variables=variables, **kwargs
        )
        data = self.get_data(response)
        return CreateFolder.model_validate(data)

    def create_license(self, input: CreateLicenseInput, **kwargs: Any) -> CreateLicense:
        query = gql(
            """
            mutation createLicense($input: CreateLicenseInput!) {
              createLicense(input: $input) {
                license {
                  id
                  title
                  license
                  addByDefault
                  requireConsensus
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {"input": input}
        response = self.execute(
            query=query, operation_name="createLicense", variables=variables, **kwargs
        )
        data = self.get_data(response)
        return CreateLicense.model_validate(data)

    def create_permission_token(
        self, input: CreatePermissionTokenInput, **kwargs: Any
    ) -> CreatePermissionToken:
        query = gql(
            """
            mutation createPermissionToken($input: CreatePermissionTokenInput!) {
              createPermissionToken(input: $input) {
                permissionToken
              }
            }
            """
        )
        variables: Dict[str, object] = {"input": input}
        response = self.execute(
            query=query,
            operation_name="createPermissionToken",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return CreatePermissionToken.model_validate(data)

    def create_share_link(
        self, input: CreateShareLinkInput, **kwargs: Any
    ) -> CreateShareLink:
        query = gql(
            """
            mutation createShareLink($input: CreateShareLinkInput!) {
              createShareLink(input: $input) {
                shareLink {
                  url
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {"input": input}
        response = self.execute(
            query=query, operation_name="createShareLink", variables=variables, **kwargs
        )
        data = self.get_data(response)
        return CreateShareLink.model_validate(data)

    def create_workflow_status(
        self,
        input: CreateWorkflowStatusInput,
        limit: Union[Optional[int], UnsetType] = UNSET,
        page: Union[Optional[int], UnsetType] = UNSET,
        limit_1: Union[Optional[int], UnsetType] = UNSET,
        page_1: Union[Optional[int], UnsetType] = UNSET,
        **kwargs: Any
    ) -> CreateWorkflowStatus:
        query = gql(
            """
            mutation createWorkflowStatus($limit: Int, $page: Int, $limit1: Int, $page1: Int, $input: CreateWorkflowStatusInput!) {
              createWorkflowStatus(input: $input) {
                workflowStatus {
                  id
                  name
                  color {
                    red
                    green
                    blue
                    alpha
                  }
                  assignedUsers {
                    __typename
                    id
                    name
                  }
                  checklistPresets {
                    id
                    content
                    assignedUser {
                      __typename
                      id
                      name
                    }
                  }
                  tasks(limit: $limit1, page: $page1) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      id
                      assignedUsers {
                        __typename
                        id
                        name
                      }
                      asset {
                        __typename
                        id
                        createdAt
                        modifiedAt
                        title
                        description
                        externalId
                        expiresAt
                        status
                      }
                      title
                      description
                      status {
                        id
                        name
                        enterRules
                      }
                      checklistItem(limit: $limit, page: $page) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                    }
                  }
                  enterRules
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {
            "limit": limit,
            "page": page,
            "limit1": limit_1,
            "page1": page_1,
            "input": input,
        }
        response = self.execute(
            query=query,
            operation_name="createWorkflowStatus",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return CreateWorkflowStatus.model_validate(data)

    def create_workspace_project(
        self,
        input: CreateWorkspaceProjectInput,
        validity_in_days: Union[Optional[int], UnsetType] = UNSET,
        permanent: Union[Optional[bool], UnsetType] = UNSET,
        limit: Union[Optional[int], UnsetType] = UNSET,
        page: Union[Optional[int], UnsetType] = UNSET,
        limit_1: Union[Optional[int], UnsetType] = UNSET,
        page_1: Union[Optional[int], UnsetType] = UNSET,
        query: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_2: Union[Optional[int], UnsetType] = UNSET,
        page_2: Union[Optional[int], UnsetType] = UNSET,
        limit_3: Union[Optional[int], UnsetType] = UNSET,
        page_3: Union[Optional[int], UnsetType] = UNSET,
        query_1: Union[Optional[AssetQueryInput], UnsetType] = UNSET,
        limit_4: Union[Optional[int], UnsetType] = UNSET,
        page_4: Union[Optional[int], UnsetType] = UNSET,
        limit_5: Union[Optional[int], UnsetType] = UNSET,
        page_5: Union[Optional[int], UnsetType] = UNSET,
        limit_6: Union[Optional[int], UnsetType] = UNSET,
        page_6: Union[Optional[int], UnsetType] = UNSET,
        query_2: Union[Optional[FolderAssetQueryInput], UnsetType] = UNSET,
        limit_7: Union[Optional[int], UnsetType] = UNSET,
        page_7: Union[Optional[int], UnsetType] = UNSET,
        **kwargs: Any
    ) -> CreateWorkspaceProject:
        _query = gql(
            """
            mutation createWorkspaceProject($validityInDays: Int, $permanent: Boolean, $limit: Int, $page: Int, $limit1: Int, $page1: Int, $query: AssetCommentQueryInput, $limit2: Int, $page2: Int, $limit3: Int, $page3: Int, $query1: AssetQueryInput, $limit4: Int, $page4: Int, $limit5: Int, $page5: Int, $limit6: Int, $page6: Int, $query2: FolderAssetQueryInput, $limit7: Int, $page7: Int, $input: CreateWorkspaceProjectInput!) {
              createWorkspaceProject(input: $input) {
                project {
                  id
                  name
                  color {
                    red
                    green
                    blue
                    alpha
                  }
                  assets(limit: $limit3, page: $page3, query: $query1) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      __typename
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      title
                      description
                      attachments {
                        id
                        createdAt
                        modifiedAt
                        name
                        filename
                        type
                        externalId
                        extension
                        size
                        downloadUrl(validityInDays: $validityInDays, permanent: $permanent)
                      }
                      externalId
                      tags {
                        value
                        source
                      }
                      copyright {
                        status
                        notice
                      }
                      availability {
                        from
                        to
                      }
                      expiresAt
                      licenses {
                        id
                        title
                        license
                        addByDefault
                        requireConsensus
                      }
                      status
                      relatedAssets(limit: $limit, page: $page) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      comments(limit: $limit1, page: $page1, query: $query) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      currentUserPermissions {
                        canEdit
                        canDelete
                        canDownload
                        canComment
                      }
                      workflowTask {
                        id
                        title
                        description
                      }
                      variants(limit: $limit2, page: $page2) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      previewBackgroundColor {
                        red
                        green
                        blue
                        alpha
                      }
                    }
                  }
                  licenses {
                    id
                    title
                    license
                    addByDefault
                    requireConsensus
                  }
                  workflow {
                    id
                    statuses {
                      id
                      name
                      color {
                        red
                        green
                        blue
                        alpha
                      }
                      assignedUsers {
                        __typename
                        id
                        name
                      }
                      checklistPresets {
                        id
                        content
                      }
                      tasks(limit: $limit4, page: $page4) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      enterRules
                    }
                  }
                  browse {
                    folders(limit: $limit5, page: $page5) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        __typename
                        id
                        name
                        createdAt
                        modifiedAt
                      }
                    }
                    assets(limit: $limit6, page: $page6, query: $query2) {
                      total
                      page
                      limit
                      hasNextPage
                    }
                  }
                  collaborators {
                    users(limit: $limit7, page: $page7) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        __typename
                        id
                        name
                      }
                      edges {
                        role
                      }
                    }
                  }
                  currentUserPermissions {
                    canCreateAssets
                    canViewCollaborators
                  }
                  isArchived
                  customMetadata {
                    __typename
                    property {
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      name
                      type {
                        __typename
                        name
                      }
                      helpText
                      isRequired
                      defaultValue
                    }
                  }
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {
            "validityInDays": validity_in_days,
            "permanent": permanent,
            "limit": limit,
            "page": page,
            "limit1": limit_1,
            "page1": page_1,
            "query": query,
            "limit2": limit_2,
            "page2": page_2,
            "limit3": limit_3,
            "page3": page_3,
            "query1": query_1,
            "limit4": limit_4,
            "page4": page_4,
            "limit5": limit_5,
            "page5": page_5,
            "limit6": limit_6,
            "page6": page_6,
            "query2": query_2,
            "limit7": limit_7,
            "page7": page_7,
            "input": input,
        }
        response = self.execute(
            query=_query,
            operation_name="createWorkspaceProject",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return CreateWorkspaceProject.model_validate(data)

    def delete_account_user(
        self, input: DeleteAccountUserInput, **kwargs: Any
    ) -> DeleteAccountUser:
        query = gql(
            """
            mutation deleteAccountUser($input: DeleteAccountUserInput!) {
              deleteAccountUser(input: $input) {
                id
              }
            }
            """
        )
        variables: Dict[str, object] = {"input": input}
        response = self.execute(
            query=query,
            operation_name="deleteAccountUser",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return DeleteAccountUser.model_validate(data)

    def delete_asset(self, input: DeleteAssetInput, **kwargs: Any) -> DeleteAsset:
        query = gql(
            """
            mutation deleteAsset($input: DeleteAssetInput!) {
              deleteAsset(input: $input) {
                id
              }
            }
            """
        )
        variables: Dict[str, object] = {"input": input}
        response = self.execute(
            query=query, operation_name="deleteAsset", variables=variables, **kwargs
        )
        data = self.get_data(response)
        return DeleteAsset.model_validate(data)

    def delete_asset_variant(
        self, input: DeleteAssetVariantInput, **kwargs: Any
    ) -> DeleteAssetVariant:
        query = gql(
            """
            mutation deleteAssetVariant($input: DeleteAssetVariantInput!) {
              deleteAssetVariant(input: $input) {
                id
              }
            }
            """
        )
        variables: Dict[str, object] = {"input": input}
        response = self.execute(
            query=query,
            operation_name="deleteAssetVariant",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return DeleteAssetVariant.model_validate(data)

    def delete_attachment(
        self, input: DeleteAttachmentInput, **kwargs: Any
    ) -> DeleteAttachment:
        query = gql(
            """
            mutation deleteAttachment($input: DeleteAttachmentInput!) {
              deleteAttachment(input: $input) {
                id
              }
            }
            """
        )
        variables: Dict[str, object] = {"input": input}
        response = self.execute(
            query=query,
            operation_name="deleteAttachment",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return DeleteAttachment.model_validate(data)

    def delete_brand(self, input: DeleteBrandInput, **kwargs: Any) -> DeleteBrand:
        query = gql(
            """
            mutation deleteBrand($input: DeleteBrandInput!) {
              deleteBrand(input: $input) {
                id
              }
            }
            """
        )
        variables: Dict[str, object] = {"input": input}
        response = self.execute(
            query=query, operation_name="deleteBrand", variables=variables, **kwargs
        )
        data = self.get_data(response)
        return DeleteBrand.model_validate(data)

    def delete_collection(
        self, input: DeleteCollectionInput, **kwargs: Any
    ) -> DeleteCollection:
        query = gql(
            """
            mutation deleteCollection($input: DeleteCollectionInput!) {
              deleteCollection(input: $input) {
                id
              }
            }
            """
        )
        variables: Dict[str, object] = {"input": input}
        response = self.execute(
            query=query,
            operation_name="deleteCollection",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return DeleteCollection.model_validate(data)

    def delete_comment(self, input: DeleteCommentInput, **kwargs: Any) -> DeleteComment:
        query = gql(
            """
            mutation deleteComment($input: DeleteCommentInput!) {
              deleteComment(input: $input) {
                id
              }
            }
            """
        )
        variables: Dict[str, object] = {"input": input}
        response = self.execute(
            query=query, operation_name="deleteComment", variables=variables, **kwargs
        )
        data = self.get_data(response)
        return DeleteComment.model_validate(data)

    def delete_custom_metadata_property(
        self, input: DeleteCustomMetadataPropertyInput, **kwargs: Any
    ) -> DeleteCustomMetadataProperty:
        query = gql(
            """
            mutation deleteCustomMetadataProperty($input: DeleteCustomMetadataPropertyInput!) {
              deleteCustomMetadataProperty(input: $input) {
                id
              }
            }
            """
        )
        variables: Dict[str, object] = {"input": input}
        response = self.execute(
            query=query,
            operation_name="deleteCustomMetadataProperty",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return DeleteCustomMetadataProperty.model_validate(data)

    def delete_folders(self, input: DeleteFoldersInput, **kwargs: Any) -> DeleteFolders:
        query = gql(
            """
            mutation deleteFolders($input: DeleteFoldersInput!) {
              deleteFolders(input: $input) {
                ids
              }
            }
            """
        )
        variables: Dict[str, object] = {"input": input}
        response = self.execute(
            query=query, operation_name="deleteFolders", variables=variables, **kwargs
        )
        data = self.get_data(response)
        return DeleteFolders.model_validate(data)

    def delete_license(self, input: DeleteLicenseInput, **kwargs: Any) -> DeleteLicense:
        query = gql(
            """
            mutation deleteLicense($input: DeleteLicenseInput!) {
              deleteLicense(input: $input) {
                id
              }
            }
            """
        )
        variables: Dict[str, object] = {"input": input}
        response = self.execute(
            query=query, operation_name="deleteLicense", variables=variables, **kwargs
        )
        data = self.get_data(response)
        return DeleteLicense.model_validate(data)

    def delete_workflow_status(
        self, input: DeleteWorkflowStatusInput, **kwargs: Any
    ) -> DeleteWorkflowStatus:
        query = gql(
            """
            mutation deleteWorkflowStatus($input: DeleteWorkflowStatusInput!) {
              deleteWorkflowStatus(input: $input) {
                id
              }
            }
            """
        )
        variables: Dict[str, object] = {"input": input}
        response = self.execute(
            query=query,
            operation_name="deleteWorkflowStatus",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return DeleteWorkflowStatus.model_validate(data)

    def delete_workflow_task(
        self, input: DeleteWorkflowTaskInput, **kwargs: Any
    ) -> DeleteWorkflowTask:
        query = gql(
            """
            mutation deleteWorkflowTask($input: DeleteWorkflowTaskInput!) {
              deleteWorkflowTask(input: $input) {
                id
              }
            }
            """
        )
        variables: Dict[str, object] = {"input": input}
        response = self.execute(
            query=query,
            operation_name="deleteWorkflowTask",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return DeleteWorkflowTask.model_validate(data)

    def edit_comment(self, input: EditCommentInput, **kwargs: Any) -> EditComment:
        query = gql(
            """
            mutation editComment($input: EditCommentInput!) {
              editComment(input: $input) {
                comment {
                  __typename
                  id
                  creator {
                    __typename
                    id
                    name
                  }
                  createdAt
                  modifier {
                    __typename
                    id
                    name
                  }
                  modifiedAt
                  content
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {"input": input}
        response = self.execute(
            query=query, operation_name="editComment", variables=variables, **kwargs
        )
        data = self.get_data(response)
        return EditComment.model_validate(data)

    def export_creative(
        self,
        input: ExportCreativeInput,
        validity_in_days: Union[Optional[int], UnsetType] = UNSET,
        permanent: Union[Optional[bool], UnsetType] = UNSET,
        limit: Union[Optional[int], UnsetType] = UNSET,
        page: Union[Optional[int], UnsetType] = UNSET,
        limit_1: Union[Optional[int], UnsetType] = UNSET,
        page_1: Union[Optional[int], UnsetType] = UNSET,
        query: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_2: Union[Optional[int], UnsetType] = UNSET,
        page_2: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_1: Union[Optional[int], UnsetType] = UNSET,
        permanent_1: Union[Optional[bool], UnsetType] = UNSET,
        **kwargs: Any
    ) -> ExportCreative:
        _query = gql(
            """
            mutation exportCreative($validityInDays: Int, $permanent: Boolean, $limit: Int, $page: Int, $limit1: Int, $page1: Int, $query: AssetCommentQueryInput, $limit2: Int, $page2: Int, $validityInDays1: Int, $permanent1: Boolean, $input: ExportCreativeInput!) {
              exportCreative(input: $input) {
                job {
                  id
                  status
                  result {
                    downloadUrl
                    pageDownloadUrls
                    asset {
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      title
                      description
                      alternativeText
                      isDecorative
                      attachments {
                        id
                        createdAt
                        modifiedAt
                        name
                        filename
                        type
                        externalId
                        extension
                        size
                        downloadUrl(validityInDays: $validityInDays, permanent: $permanent)
                      }
                      externalId
                      tags {
                        value
                        source
                      }
                      copyright {
                        status
                        notice
                      }
                      availability {
                        from
                        to
                      }
                      expiresAt
                      licenses {
                        id
                        title
                        license
                        addByDefault
                        requireConsensus
                      }
                      author
                      status
                      relatedAssets(limit: $limit, page: $page) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      comments(limit: $limit1, page: $page1, query: $query) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      currentUserPermissions {
                        canEdit
                        canDelete
                        canDownload
                        canComment
                      }
                      workflowTask {
                        id
                        title
                        description
                      }
                      variants(limit: $limit2, page: $page2) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      previewBackgroundColor {
                        red
                        green
                        blue
                        alpha
                      }
                      filename
                      size
                      extension
                      previewUrl
                      thumbnailUrl
                      dynamicPreviewUrl
                      downloadUrl(validityInDays: $validityInDays1, permanent: $permanent1)
                    }
                  }
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {
            "validityInDays": validity_in_days,
            "permanent": permanent,
            "limit": limit,
            "page": page,
            "limit1": limit_1,
            "page1": page_1,
            "query": query,
            "limit2": limit_2,
            "page2": page_2,
            "validityInDays1": validity_in_days_1,
            "permanent1": permanent_1,
            "input": input,
        }
        response = self.execute(
            query=_query, operation_name="exportCreative", variables=variables, **kwargs
        )
        data = self.get_data(response)
        return ExportCreative.model_validate(data)

    def install_project_webhook(
        self, input: InstallProjectWebhookInput, **kwargs: Any
    ) -> InstallProjectWebhook:
        query = gql(
            """
            mutation installProjectWebhook($input: InstallProjectWebhookInput!) {
              installProjectWebhook(input: $input) {
                webhook {
                  __typename
                  id
                  creator {
                    __typename
                    id
                    name
                  }
                  createdAt
                  name
                  notificationUrl
                  secret
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {"input": input}
        response = self.execute(
            query=query,
            operation_name="installProjectWebhook",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return InstallProjectWebhook.model_validate(data)

    def invite_project_user(
        self,
        input: InviteProjectUserInput,
        validity_in_days: Union[Optional[int], UnsetType] = UNSET,
        permanent: Union[Optional[bool], UnsetType] = UNSET,
        limit: Union[Optional[int], UnsetType] = UNSET,
        page: Union[Optional[int], UnsetType] = UNSET,
        limit_1: Union[Optional[int], UnsetType] = UNSET,
        page_1: Union[Optional[int], UnsetType] = UNSET,
        query: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_2: Union[Optional[int], UnsetType] = UNSET,
        page_2: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_1: Union[Optional[int], UnsetType] = UNSET,
        permanent_1: Union[Optional[bool], UnsetType] = UNSET,
        limit_3: Union[Optional[int], UnsetType] = UNSET,
        page_3: Union[Optional[int], UnsetType] = UNSET,
        limit_4: Union[Optional[int], UnsetType] = UNSET,
        page_4: Union[Optional[int], UnsetType] = UNSET,
        query_1: Union[Optional[AssetQueryInput], UnsetType] = UNSET,
        limit_5: Union[Optional[int], UnsetType] = UNSET,
        page_5: Union[Optional[int], UnsetType] = UNSET,
        limit_6: Union[Optional[int], UnsetType] = UNSET,
        page_6: Union[Optional[int], UnsetType] = UNSET,
        limit_7: Union[Optional[int], UnsetType] = UNSET,
        page_7: Union[Optional[int], UnsetType] = UNSET,
        query_2: Union[Optional[FolderAssetQueryInput], UnsetType] = UNSET,
        limit_8: Union[Optional[int], UnsetType] = UNSET,
        page_8: Union[Optional[int], UnsetType] = UNSET,
        limit_9: Union[Optional[int], UnsetType] = UNSET,
        page_9: Union[Optional[int], UnsetType] = UNSET,
        query_3: Union[Optional[FolderAssetQueryInput], UnsetType] = UNSET,
        limit_10: Union[Optional[int], UnsetType] = UNSET,
        page_10: Union[Optional[int], UnsetType] = UNSET,
        limit_11: Union[Optional[int], UnsetType] = UNSET,
        page_11: Union[Optional[int], UnsetType] = UNSET,
        **kwargs: Any
    ) -> InviteProjectUser:
        _query = gql(
            """
            mutation inviteProjectUser($validityInDays: Int, $permanent: Boolean, $limit: Int, $page: Int, $limit1: Int, $page1: Int, $query: AssetCommentQueryInput, $limit2: Int, $page2: Int, $validityInDays1: Int, $permanent1: Boolean, $limit3: Int, $page3: Int, $limit4: Int, $page4: Int, $query1: AssetQueryInput, $limit5: Int, $page5: Int, $limit6: Int, $page6: Int, $limit7: Int, $page7: Int, $query2: FolderAssetQueryInput, $limit8: Int, $page8: Int, $limit9: Int, $page9: Int, $query3: FolderAssetQueryInput, $limit10: Int, $page10: Int, $limit11: Int, $page11: Int, $input: InviteProjectUserInput!) {
              inviteProjectUser(input: $input) {
                project {
                  __typename
                  ... on MediaLibrary {
                    id
                    name
                    color {
                      red
                      green
                      blue
                      alpha
                    }
                    assetCount
                    assets(limit: $limit4, page: $page4, query: $query1) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        __typename
                        id
                        creator {
                          __typename
                          id
                          name
                        }
                        createdAt
                        modifier {
                          __typename
                          id
                          name
                        }
                        modifiedAt
                        title
                        description
                        attachments {
                          id
                          creator {
                            __typename
                            id
                            name
                          }
                          createdAt
                          modifier {
                            __typename
                            id
                            name
                          }
                          modifiedAt
                          name
                          filename
                          type
                          externalId
                          extension
                          size
                          downloadUrl(validityInDays: $validityInDays, permanent: $permanent)
                        }
                        externalId
                        tags {
                          value
                          source
                        }
                        copyright {
                          status
                          notice
                        }
                        availability {
                          from
                          to
                        }
                        expiresAt
                        licenses {
                          id
                          title
                          license
                          addByDefault
                          requireConsensus
                        }
                        status
                        relatedAssets(limit: $limit, page: $page) {
                          total
                          page
                          limit
                          hasNextPage
                          items {
                            __typename
                            id
                            createdAt
                            modifiedAt
                            title
                            description
                            externalId
                            expiresAt
                            status
                          }
                        }
                        comments(limit: $limit1, page: $page1, query: $query) {
                          total
                          page
                          limit
                          hasNextPage
                          items {
                            id
                            createdAt
                            modifiedAt
                            content
                            isResolved
                          }
                        }
                        currentUserPermissions {
                          canEdit
                          canDelete
                          canDownload
                          canComment
                        }
                        customMetadata {
                          __typename
                          property {
                            id
                            createdAt
                            modifiedAt
                            name
                            helpText
                            isRequired
                            defaultValue
                          }
                        }
                        workflowTask {
                          id
                          assignedUsers {
                            __typename
                            id
                            name
                          }
                          asset {
                            __typename
                            id
                            createdAt
                            modifiedAt
                            title
                            description
                            externalId
                            expiresAt
                            status
                          }
                          title
                          description
                          status {
                            id
                            name
                            enterRules
                          }
                          checklistItem(limit: $limit2, page: $page2) {
                            total
                            page
                            limit
                            hasNextPage
                          }
                        }
                        variants(limit: $limit3, page: $page3) {
                          total
                          page
                          limit
                          hasNextPage
                          items {
                            key
                            filename
                            downloadUrl(validityInDays: $validityInDays1, permanent: $permanent1)
                          }
                        }
                        location {
                          brand {
                            id
                            name
                          }
                          library {
                            id
                            name
                          }
                          workspaceProject {
                            id
                            name
                          }
                          folder {
                            id
                            name
                          }
                        }
                        previewBackgroundColor {
                          red
                          green
                          blue
                          alpha
                        }
                      }
                    }
                    licenses {
                      id
                      title
                      license
                      addByDefault
                      requireConsensus
                    }
                    workflow {
                      id
                      statuses {
                        id
                        name
                        color {
                          red
                          green
                          blue
                          alpha
                        }
                        assignedUsers {
                          __typename
                          id
                          name
                        }
                        checklistPresets {
                          id
                          content
                          assignedUser {
                            __typename
                            id
                            name
                          }
                        }
                        tasks(limit: $limit5, page: $page5) {
                          total
                          page
                          limit
                          hasNextPage
                          items {
                            id
                            title
                            description
                          }
                        }
                        enterRules
                      }
                    }
                    browse {
                      folders(limit: $limit8, page: $page8) {
                        total
                        page
                        limit
                        hasNextPage
                        items {
                          __typename
                          id
                          name
                          createdAt
                          modifiedAt
                          breadcrumbs {
                            id
                            name
                          }
                          folders(limit: $limit6, page: $page6) {
                            total
                            page
                            limit
                            hasNextPage
                          }
                          assets(limit: $limit7, page: $page7, query: $query2) {
                            total
                            page
                            limit
                            hasNextPage
                          }
                        }
                      }
                      assets(limit: $limit9, page: $page9, query: $query3) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                    }
                    collaborators {
                      users(limit: $limit10, page: $page10) {
                        total
                        page
                        limit
                        hasNextPage
                        items {
                          __typename
                          id
                          name
                        }
                        edges {
                          node {
                            __typename
                            id
                            name
                          }
                          role
                        }
                      }
                    }
                    currentUserPermissions {
                      canCreateAssets
                      canViewCollaborators
                      canCreateCollections
                    }
                    customMetadataProperties {
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      name
                      type {
                        __typename
                        name
                      }
                      helpText
                      isRequired
                      defaultValue
                    }
                    collections(limit: $limit11, page: $page11) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        id
                        name
                      }
                    }
                    assetSubmissionRequests {
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      projectId
                      title
                      description
                      configuration
                    }
                  }
                  ... on IconLibrary {
                    id
                    name
                    assetCount
                  }
                  ... on LogoLibrary {
                    id
                    name
                    assetCount
                  }
                  ... on DocumentLibrary {
                    id
                    name
                    assetCount
                  }
                  ... on Workspace {
                    id
                    name
                    assetCount
                    isArchived
                  }
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {
            "validityInDays": validity_in_days,
            "permanent": permanent,
            "limit": limit,
            "page": page,
            "limit1": limit_1,
            "page1": page_1,
            "query": query,
            "limit2": limit_2,
            "page2": page_2,
            "validityInDays1": validity_in_days_1,
            "permanent1": permanent_1,
            "limit3": limit_3,
            "page3": page_3,
            "limit4": limit_4,
            "page4": page_4,
            "query1": query_1,
            "limit5": limit_5,
            "page5": page_5,
            "limit6": limit_6,
            "page6": page_6,
            "limit7": limit_7,
            "page7": page_7,
            "query2": query_2,
            "limit8": limit_8,
            "page8": page_8,
            "limit9": limit_9,
            "page9": page_9,
            "query3": query_3,
            "limit10": limit_10,
            "page10": page_10,
            "limit11": limit_11,
            "page11": page_11,
            "input": input,
        }
        response = self.execute(
            query=_query,
            operation_name="inviteProjectUser",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return InviteProjectUser.model_validate(data)

    def move_assets(
        self,
        input: MoveAssetsInput,
        validity_in_days: Union[Optional[int], UnsetType] = UNSET,
        permanent: Union[Optional[bool], UnsetType] = UNSET,
        validity_in_days_1: Union[Optional[int], UnsetType] = UNSET,
        permanent_1: Union[Optional[bool], UnsetType] = UNSET,
        limit: Union[Optional[int], UnsetType] = UNSET,
        page: Union[Optional[int], UnsetType] = UNSET,
        limit_1: Union[Optional[int], UnsetType] = UNSET,
        page_1: Union[Optional[int], UnsetType] = UNSET,
        query: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_2: Union[Optional[int], UnsetType] = UNSET,
        page_2: Union[Optional[int], UnsetType] = UNSET,
        limit_3: Union[Optional[int], UnsetType] = UNSET,
        page_3: Union[Optional[int], UnsetType] = UNSET,
        limit_4: Union[Optional[int], UnsetType] = UNSET,
        page_4: Union[Optional[int], UnsetType] = UNSET,
        limit_5: Union[Optional[int], UnsetType] = UNSET,
        page_5: Union[Optional[int], UnsetType] = UNSET,
        query_1: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        validity_in_days_2: Union[Optional[int], UnsetType] = UNSET,
        permanent_2: Union[Optional[bool], UnsetType] = UNSET,
        limit_6: Union[Optional[int], UnsetType] = UNSET,
        page_6: Union[Optional[int], UnsetType] = UNSET,
        limit_7: Union[Optional[int], UnsetType] = UNSET,
        page_7: Union[Optional[int], UnsetType] = UNSET,
        query_2: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_8: Union[Optional[int], UnsetType] = UNSET,
        page_8: Union[Optional[int], UnsetType] = UNSET,
        limit_9: Union[Optional[int], UnsetType] = UNSET,
        page_9: Union[Optional[int], UnsetType] = UNSET,
        limit_10: Union[Optional[int], UnsetType] = UNSET,
        page_10: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_3: Union[Optional[int], UnsetType] = UNSET,
        permanent_3: Union[Optional[bool], UnsetType] = UNSET,
        limit_11: Union[Optional[int], UnsetType] = UNSET,
        page_11: Union[Optional[int], UnsetType] = UNSET,
        **kwargs: Any
    ) -> MoveAssets:
        _query = gql(
            """
            mutation moveAssets($validityInDays: Int, $permanent: Boolean, $validityInDays1: Int, $permanent1: Boolean, $limit: Int, $page: Int, $limit1: Int, $page1: Int, $query: AssetCommentQueryInput, $limit2: Int, $page2: Int, $limit3: Int, $page3: Int, $limit4: Int, $page4: Int, $limit5: Int, $page5: Int, $query1: AssetCommentQueryInput, $validityInDays2: Int, $permanent2: Boolean, $limit6: Int, $page6: Int, $limit7: Int, $page7: Int, $query2: AssetCommentQueryInput, $limit8: Int, $page8: Int, $limit9: Int, $page9: Int, $limit10: Int, $page10: Int, $validityInDays3: Int, $permanent3: Boolean, $limit11: Int, $page11: Int, $input: MoveAssetsInput!) {
              moveAssets(input: $input) {
                assets {
                  __typename
                  id
                  creator {
                    __typename
                    id
                    name
                  }
                  createdAt
                  modifier {
                    __typename
                    id
                    name
                  }
                  modifiedAt
                  title
                  description
                  attachments {
                    id
                    creator {
                      __typename
                      id
                      name
                    }
                    createdAt
                    modifier {
                      __typename
                      id
                      name
                    }
                    modifiedAt
                    name
                    filename
                    type
                    externalId
                    extension
                    size
                    downloadUrl(validityInDays: $validityInDays, permanent: $permanent)
                  }
                  externalId
                  tags {
                    value
                    source
                  }
                  copyright {
                    status
                    notice
                  }
                  availability {
                    from
                    to
                  }
                  expiresAt
                  licenses {
                    id
                    title
                    license
                    addByDefault
                    requireConsensus
                  }
                  status
                  relatedAssets(limit: $limit3, page: $page3) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      __typename
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      title
                      description
                      attachments {
                        id
                        createdAt
                        modifiedAt
                        name
                        filename
                        type
                        externalId
                        extension
                        size
                        downloadUrl(validityInDays: $validityInDays1, permanent: $permanent1)
                      }
                      externalId
                      tags {
                        value
                        source
                      }
                      copyright {
                        status
                        notice
                      }
                      availability {
                        from
                        to
                      }
                      expiresAt
                      licenses {
                        id
                        title
                        license
                        addByDefault
                        requireConsensus
                      }
                      status
                      relatedAssets(limit: $limit, page: $page) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      comments(limit: $limit1, page: $page1, query: $query) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      currentUserPermissions {
                        canEdit
                        canDelete
                        canDownload
                        canComment
                      }
                      workflowTask {
                        id
                        title
                        description
                      }
                      variants(limit: $limit2, page: $page2) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      previewBackgroundColor {
                        red
                        green
                        blue
                        alpha
                      }
                    }
                  }
                  comments(limit: $limit5, page: $page5, query: $query1) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      id
                      createdAt
                      modifiedAt
                      content
                      mentionedUsers {
                        __typename
                        id
                        name
                      }
                      isResolved
                      replies(limit: $limit4, page: $page4) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                    }
                  }
                  currentUserPermissions {
                    canEdit
                    canDelete
                    canDownload
                    canComment
                  }
                  customMetadata {
                    __typename
                    property {
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      name
                      type {
                        __typename
                        name
                      }
                      helpText
                      isRequired
                      defaultValue
                    }
                  }
                  workflowTask {
                    id
                    assignedUsers {
                      __typename
                      id
                      name
                    }
                    asset {
                      __typename
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      title
                      description
                      attachments {
                        id
                        createdAt
                        modifiedAt
                        name
                        filename
                        type
                        externalId
                        extension
                        size
                        downloadUrl(validityInDays: $validityInDays2, permanent: $permanent2)
                      }
                      externalId
                      tags {
                        value
                        source
                      }
                      copyright {
                        status
                        notice
                      }
                      availability {
                        from
                        to
                      }
                      expiresAt
                      licenses {
                        id
                        title
                        license
                        addByDefault
                        requireConsensus
                      }
                      status
                      relatedAssets(limit: $limit6, page: $page6) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      comments(limit: $limit7, page: $page7, query: $query2) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      currentUserPermissions {
                        canEdit
                        canDelete
                        canDownload
                        canComment
                      }
                      workflowTask {
                        id
                        title
                        description
                      }
                      variants(limit: $limit8, page: $page8) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      previewBackgroundColor {
                        red
                        green
                        blue
                        alpha
                      }
                    }
                    title
                    description
                    status {
                      id
                      name
                      color {
                        red
                        green
                        blue
                        alpha
                      }
                      assignedUsers {
                        __typename
                        id
                        name
                      }
                      checklistPresets {
                        id
                        content
                      }
                      tasks(limit: $limit9, page: $page9) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      enterRules
                    }
                    checklistItem(limit: $limit10, page: $page10) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        id
                        content
                      }
                    }
                  }
                  variants(limit: $limit11, page: $page11) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      key
                      filename
                      downloadUrl(validityInDays: $validityInDays3, permanent: $permanent3)
                    }
                  }
                  location {
                    brand {
                      id
                      name
                    }
                    library {
                      id
                      name
                    }
                    workspaceProject {
                      id
                      name
                    }
                    folder {
                      id
                      name
                      breadcrumbs {
                        id
                        name
                      }
                    }
                  }
                  previewBackgroundColor {
                    red
                    green
                    blue
                    alpha
                  }
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {
            "validityInDays": validity_in_days,
            "permanent": permanent,
            "validityInDays1": validity_in_days_1,
            "permanent1": permanent_1,
            "limit": limit,
            "page": page,
            "limit1": limit_1,
            "page1": page_1,
            "query": query,
            "limit2": limit_2,
            "page2": page_2,
            "limit3": limit_3,
            "page3": page_3,
            "limit4": limit_4,
            "page4": page_4,
            "limit5": limit_5,
            "page5": page_5,
            "query1": query_1,
            "validityInDays2": validity_in_days_2,
            "permanent2": permanent_2,
            "limit6": limit_6,
            "page6": page_6,
            "limit7": limit_7,
            "page7": page_7,
            "query2": query_2,
            "limit8": limit_8,
            "page8": page_8,
            "limit9": limit_9,
            "page9": page_9,
            "limit10": limit_10,
            "page10": page_10,
            "validityInDays3": validity_in_days_3,
            "permanent3": permanent_3,
            "limit11": limit_11,
            "page11": page_11,
            "input": input,
        }
        response = self.execute(
            query=_query, operation_name="moveAssets", variables=variables, **kwargs
        )
        data = self.get_data(response)
        return MoveAssets.model_validate(data)

    def move_folders(self, input: MoveFoldersInput, **kwargs: Any) -> MoveFolders:
        query = gql(
            """
            mutation moveFolders($input: MoveFoldersInput!) {
              moveFolders(input: $input) {
                ids
              }
            }
            """
        )
        variables: Dict[str, object] = {"input": input}
        response = self.execute(
            query=query, operation_name="moveFolders", variables=variables, **kwargs
        )
        data = self.get_data(response)
        return MoveFolders.model_validate(data)

    def move_workflow_task(
        self,
        input: MoveWorkflowTaskInput,
        limit: Union[Optional[int], UnsetType] = UNSET,
        page: Union[Optional[int], UnsetType] = UNSET,
        limit_1: Union[Optional[int], UnsetType] = UNSET,
        page_1: Union[Optional[int], UnsetType] = UNSET,
        **kwargs: Any
    ) -> MoveWorkflowTask:
        query = gql(
            """
            mutation moveWorkflowTask($limit: Int, $page: Int, $limit1: Int, $page1: Int, $input: MoveWorkflowTaskInput!) {
              moveWorkflowTask(input: $input) {
                workflowStatus {
                  id
                  name
                  color {
                    red
                    green
                    blue
                    alpha
                  }
                  assignedUsers {
                    __typename
                    id
                    name
                  }
                  checklistPresets {
                    id
                    content
                    assignedUser {
                      __typename
                      id
                      name
                    }
                  }
                  tasks(limit: $limit1, page: $page1) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      id
                      assignedUsers {
                        __typename
                        id
                        name
                      }
                      asset {
                        __typename
                        id
                        createdAt
                        modifiedAt
                        title
                        description
                        externalId
                        expiresAt
                        status
                      }
                      title
                      description
                      status {
                        id
                        name
                        enterRules
                      }
                      checklistItem(limit: $limit, page: $page) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                    }
                  }
                  enterRules
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {
            "limit": limit,
            "page": page,
            "limit1": limit_1,
            "page1": page_1,
            "input": input,
        }
        response = self.execute(
            query=query,
            operation_name="moveWorkflowTask",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return MoveWorkflowTask.model_validate(data)

    def remove_asset_license(
        self,
        input: RemoveAssetLicenseInput,
        validity_in_days: Union[Optional[int], UnsetType] = UNSET,
        permanent: Union[Optional[bool], UnsetType] = UNSET,
        validity_in_days_1: Union[Optional[int], UnsetType] = UNSET,
        permanent_1: Union[Optional[bool], UnsetType] = UNSET,
        limit: Union[Optional[int], UnsetType] = UNSET,
        page: Union[Optional[int], UnsetType] = UNSET,
        limit_1: Union[Optional[int], UnsetType] = UNSET,
        page_1: Union[Optional[int], UnsetType] = UNSET,
        query: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_2: Union[Optional[int], UnsetType] = UNSET,
        page_2: Union[Optional[int], UnsetType] = UNSET,
        limit_3: Union[Optional[int], UnsetType] = UNSET,
        page_3: Union[Optional[int], UnsetType] = UNSET,
        limit_4: Union[Optional[int], UnsetType] = UNSET,
        page_4: Union[Optional[int], UnsetType] = UNSET,
        limit_5: Union[Optional[int], UnsetType] = UNSET,
        page_5: Union[Optional[int], UnsetType] = UNSET,
        query_1: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_6: Union[Optional[int], UnsetType] = UNSET,
        page_6: Union[Optional[int], UnsetType] = UNSET,
        limit_7: Union[Optional[int], UnsetType] = UNSET,
        page_7: Union[Optional[int], UnsetType] = UNSET,
        limit_8: Union[Optional[int], UnsetType] = UNSET,
        page_8: Union[Optional[int], UnsetType] = UNSET,
        **kwargs: Any
    ) -> RemoveAssetLicense:
        _query = gql(
            """
            mutation removeAssetLicense($validityInDays: Int, $permanent: Boolean, $validityInDays1: Int, $permanent1: Boolean, $limit: Int, $page: Int, $limit1: Int, $page1: Int, $query: AssetCommentQueryInput, $limit2: Int, $page2: Int, $limit3: Int, $page3: Int, $limit4: Int, $page4: Int, $limit5: Int, $page5: Int, $query1: AssetCommentQueryInput, $limit6: Int, $page6: Int, $limit7: Int, $page7: Int, $limit8: Int, $page8: Int, $input: RemoveAssetLicenseInput!) {
              removeAssetLicense(input: $input) {
                asset {
                  __typename
                  id
                  creator {
                    __typename
                    id
                    name
                  }
                  createdAt
                  modifier {
                    __typename
                    id
                    name
                  }
                  modifiedAt
                  title
                  description
                  attachments {
                    id
                    creator {
                      __typename
                      id
                      name
                    }
                    createdAt
                    modifier {
                      __typename
                      id
                      name
                    }
                    modifiedAt
                    name
                    filename
                    type
                    externalId
                    extension
                    size
                    downloadUrl(validityInDays: $validityInDays, permanent: $permanent)
                  }
                  externalId
                  tags {
                    value
                    source
                  }
                  copyright {
                    status
                    notice
                  }
                  availability {
                    from
                    to
                  }
                  expiresAt
                  licenses {
                    id
                    title
                    license
                    addByDefault
                    requireConsensus
                  }
                  status
                  relatedAssets(limit: $limit3, page: $page3) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      __typename
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      title
                      description
                      attachments {
                        id
                        createdAt
                        modifiedAt
                        name
                        filename
                        type
                        externalId
                        extension
                        size
                        downloadUrl(validityInDays: $validityInDays1, permanent: $permanent1)
                      }
                      externalId
                      tags {
                        value
                        source
                      }
                      copyright {
                        status
                        notice
                      }
                      availability {
                        from
                        to
                      }
                      expiresAt
                      licenses {
                        id
                        title
                        license
                        addByDefault
                        requireConsensus
                      }
                      status
                      relatedAssets(limit: $limit, page: $page) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      comments(limit: $limit1, page: $page1, query: $query) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      currentUserPermissions {
                        canEdit
                        canDelete
                        canDownload
                        canComment
                      }
                      workflowTask {
                        id
                        title
                        description
                      }
                      variants(limit: $limit2, page: $page2) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      previewBackgroundColor {
                        red
                        green
                        blue
                        alpha
                      }
                    }
                  }
                  comments(limit: $limit5, page: $page5, query: $query1) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      id
                      createdAt
                      modifiedAt
                      content
                      mentionedUsers {
                        __typename
                        id
                        name
                      }
                      isResolved
                      replies(limit: $limit4, page: $page4) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                    }
                  }
                  currentUserPermissions {
                    canEdit
                    canDelete
                    canDownload
                    canComment
                  }
                  customMetadata {
                    __typename
                    property {
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      name
                      type {
                        __typename
                        name
                      }
                      helpText
                      isRequired
                      defaultValue
                    }
                  }
                  workflowTask {
                    id
                    assignedUsers {
                      __typename
                      id
                      name
                    }
                    asset {
                      __typename
                      id
                      createdAt
                      modifiedAt
                      title
                      description
                      externalId
                      expiresAt
                      status
                      variants(limit: $limit6, page: $page6) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      previewBackgroundColor {
                        red
                        green
                        blue
                        alpha
                      }
                    }
                    title
                    description
                    status {
                      id
                      name
                      color {
                        red
                        green
                        blue
                        alpha
                      }
                      assignedUsers {
                        __typename
                        id
                        name
                      }
                      checklistPresets {
                        id
                        content
                      }
                      tasks(limit: $limit7, page: $page7) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      enterRules
                    }
                    checklistItem(limit: $limit8, page: $page8) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        id
                        content
                      }
                    }
                  }
                }
                license {
                  id
                  title
                  license
                  addByDefault
                  requireConsensus
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {
            "validityInDays": validity_in_days,
            "permanent": permanent,
            "validityInDays1": validity_in_days_1,
            "permanent1": permanent_1,
            "limit": limit,
            "page": page,
            "limit1": limit_1,
            "page1": page_1,
            "query": query,
            "limit2": limit_2,
            "page2": page_2,
            "limit3": limit_3,
            "page3": page_3,
            "limit4": limit_4,
            "page4": page_4,
            "limit5": limit_5,
            "page5": page_5,
            "query1": query_1,
            "limit6": limit_6,
            "page6": page_6,
            "limit7": limit_7,
            "page7": page_7,
            "limit8": limit_8,
            "page8": page_8,
            "input": input,
        }
        response = self.execute(
            query=_query,
            operation_name="removeAssetLicense",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return RemoveAssetLicense.model_validate(data)

    def remove_asset_preview_image(
        self,
        input: RemoveAssetPreviewImageInput,
        validity_in_days: Union[Optional[int], UnsetType] = UNSET,
        permanent: Union[Optional[bool], UnsetType] = UNSET,
        validity_in_days_1: Union[Optional[int], UnsetType] = UNSET,
        permanent_1: Union[Optional[bool], UnsetType] = UNSET,
        limit: Union[Optional[int], UnsetType] = UNSET,
        page: Union[Optional[int], UnsetType] = UNSET,
        limit_1: Union[Optional[int], UnsetType] = UNSET,
        page_1: Union[Optional[int], UnsetType] = UNSET,
        query: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_2: Union[Optional[int], UnsetType] = UNSET,
        page_2: Union[Optional[int], UnsetType] = UNSET,
        limit_3: Union[Optional[int], UnsetType] = UNSET,
        page_3: Union[Optional[int], UnsetType] = UNSET,
        limit_4: Union[Optional[int], UnsetType] = UNSET,
        page_4: Union[Optional[int], UnsetType] = UNSET,
        limit_5: Union[Optional[int], UnsetType] = UNSET,
        page_5: Union[Optional[int], UnsetType] = UNSET,
        query_1: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_6: Union[Optional[int], UnsetType] = UNSET,
        page_6: Union[Optional[int], UnsetType] = UNSET,
        limit_7: Union[Optional[int], UnsetType] = UNSET,
        page_7: Union[Optional[int], UnsetType] = UNSET,
        limit_8: Union[Optional[int], UnsetType] = UNSET,
        page_8: Union[Optional[int], UnsetType] = UNSET,
        **kwargs: Any
    ) -> RemoveAssetPreviewImage:
        _query = gql(
            """
            mutation removeAssetPreviewImage($validityInDays: Int, $permanent: Boolean, $validityInDays1: Int, $permanent1: Boolean, $limit: Int, $page: Int, $limit1: Int, $page1: Int, $query: AssetCommentQueryInput, $limit2: Int, $page2: Int, $limit3: Int, $page3: Int, $limit4: Int, $page4: Int, $limit5: Int, $page5: Int, $query1: AssetCommentQueryInput, $limit6: Int, $page6: Int, $limit7: Int, $page7: Int, $limit8: Int, $page8: Int, $input: RemoveAssetPreviewImageInput!) {
              removeAssetPreviewImage(input: $input) {
                asset {
                  __typename
                  id
                  creator {
                    __typename
                    id
                    name
                  }
                  createdAt
                  modifier {
                    __typename
                    id
                    name
                  }
                  modifiedAt
                  title
                  description
                  attachments {
                    id
                    creator {
                      __typename
                      id
                      name
                    }
                    createdAt
                    modifier {
                      __typename
                      id
                      name
                    }
                    modifiedAt
                    name
                    filename
                    type
                    externalId
                    extension
                    size
                    downloadUrl(validityInDays: $validityInDays, permanent: $permanent)
                  }
                  externalId
                  tags {
                    value
                    source
                  }
                  copyright {
                    status
                    notice
                  }
                  availability {
                    from
                    to
                  }
                  expiresAt
                  licenses {
                    id
                    title
                    license
                    addByDefault
                    requireConsensus
                  }
                  status
                  relatedAssets(limit: $limit3, page: $page3) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      __typename
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      title
                      description
                      attachments {
                        id
                        createdAt
                        modifiedAt
                        name
                        filename
                        type
                        externalId
                        extension
                        size
                        downloadUrl(validityInDays: $validityInDays1, permanent: $permanent1)
                      }
                      externalId
                      tags {
                        value
                        source
                      }
                      copyright {
                        status
                        notice
                      }
                      availability {
                        from
                        to
                      }
                      expiresAt
                      licenses {
                        id
                        title
                        license
                        addByDefault
                        requireConsensus
                      }
                      status
                      relatedAssets(limit: $limit, page: $page) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      comments(limit: $limit1, page: $page1, query: $query) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      currentUserPermissions {
                        canEdit
                        canDelete
                        canDownload
                        canComment
                      }
                      workflowTask {
                        id
                        title
                        description
                      }
                      variants(limit: $limit2, page: $page2) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      previewBackgroundColor {
                        red
                        green
                        blue
                        alpha
                      }
                    }
                  }
                  comments(limit: $limit5, page: $page5, query: $query1) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      id
                      createdAt
                      modifiedAt
                      content
                      mentionedUsers {
                        __typename
                        id
                        name
                      }
                      isResolved
                      replies(limit: $limit4, page: $page4) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                    }
                  }
                  currentUserPermissions {
                    canEdit
                    canDelete
                    canDownload
                    canComment
                  }
                  customMetadata {
                    __typename
                    property {
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      name
                      type {
                        __typename
                        name
                      }
                      helpText
                      isRequired
                      defaultValue
                    }
                  }
                  workflowTask {
                    id
                    assignedUsers {
                      __typename
                      id
                      name
                    }
                    asset {
                      __typename
                      id
                      createdAt
                      modifiedAt
                      title
                      description
                      externalId
                      expiresAt
                      status
                      variants(limit: $limit6, page: $page6) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      previewBackgroundColor {
                        red
                        green
                        blue
                        alpha
                      }
                    }
                    title
                    description
                    status {
                      id
                      name
                      color {
                        red
                        green
                        blue
                        alpha
                      }
                      assignedUsers {
                        __typename
                        id
                        name
                      }
                      checklistPresets {
                        id
                        content
                      }
                      tasks(limit: $limit7, page: $page7) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      enterRules
                    }
                    checklistItem(limit: $limit8, page: $page8) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        id
                        content
                      }
                    }
                  }
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {
            "validityInDays": validity_in_days,
            "permanent": permanent,
            "validityInDays1": validity_in_days_1,
            "permanent1": permanent_1,
            "limit": limit,
            "page": page,
            "limit1": limit_1,
            "page1": page_1,
            "query": query,
            "limit2": limit_2,
            "page2": page_2,
            "limit3": limit_3,
            "page3": page_3,
            "limit4": limit_4,
            "page4": page_4,
            "limit5": limit_5,
            "page5": page_5,
            "query1": query_1,
            "limit6": limit_6,
            "page6": page_6,
            "limit7": limit_7,
            "page7": page_7,
            "limit8": limit_8,
            "page8": page_8,
            "input": input,
        }
        response = self.execute(
            query=_query,
            operation_name="removeAssetPreviewImage",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return RemoveAssetPreviewImage.model_validate(data)

    def remove_asset_relations(
        self,
        input: RemoveAssetRelationsInput,
        validity_in_days: Union[Optional[int], UnsetType] = UNSET,
        permanent: Union[Optional[bool], UnsetType] = UNSET,
        validity_in_days_1: Union[Optional[int], UnsetType] = UNSET,
        permanent_1: Union[Optional[bool], UnsetType] = UNSET,
        limit: Union[Optional[int], UnsetType] = UNSET,
        page: Union[Optional[int], UnsetType] = UNSET,
        limit_1: Union[Optional[int], UnsetType] = UNSET,
        page_1: Union[Optional[int], UnsetType] = UNSET,
        query: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_2: Union[Optional[int], UnsetType] = UNSET,
        page_2: Union[Optional[int], UnsetType] = UNSET,
        limit_3: Union[Optional[int], UnsetType] = UNSET,
        page_3: Union[Optional[int], UnsetType] = UNSET,
        limit_4: Union[Optional[int], UnsetType] = UNSET,
        page_4: Union[Optional[int], UnsetType] = UNSET,
        limit_5: Union[Optional[int], UnsetType] = UNSET,
        page_5: Union[Optional[int], UnsetType] = UNSET,
        query_1: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_6: Union[Optional[int], UnsetType] = UNSET,
        page_6: Union[Optional[int], UnsetType] = UNSET,
        limit_7: Union[Optional[int], UnsetType] = UNSET,
        page_7: Union[Optional[int], UnsetType] = UNSET,
        limit_8: Union[Optional[int], UnsetType] = UNSET,
        page_8: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_2: Union[Optional[int], UnsetType] = UNSET,
        permanent_2: Union[Optional[bool], UnsetType] = UNSET,
        limit_9: Union[Optional[int], UnsetType] = UNSET,
        page_9: Union[Optional[int], UnsetType] = UNSET,
        limit_10: Union[Optional[int], UnsetType] = UNSET,
        page_10: Union[Optional[int], UnsetType] = UNSET,
        query_2: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        validity_in_days_3: Union[Optional[int], UnsetType] = UNSET,
        permanent_3: Union[Optional[bool], UnsetType] = UNSET,
        limit_11: Union[Optional[int], UnsetType] = UNSET,
        page_11: Union[Optional[int], UnsetType] = UNSET,
        **kwargs: Any
    ) -> RemoveAssetRelations:
        _query = gql(
            """
            mutation removeAssetRelations($validityInDays: Int, $permanent: Boolean, $validityInDays1: Int, $permanent1: Boolean, $limit: Int, $page: Int, $limit1: Int, $page1: Int, $query: AssetCommentQueryInput, $limit2: Int, $page2: Int, $limit3: Int, $page3: Int, $limit4: Int, $page4: Int, $limit5: Int, $page5: Int, $query1: AssetCommentQueryInput, $limit6: Int, $page6: Int, $limit7: Int, $page7: Int, $limit8: Int, $page8: Int, $validityInDays2: Int, $permanent2: Boolean, $limit9: Int, $page9: Int, $limit10: Int, $page10: Int, $query2: AssetCommentQueryInput, $validityInDays3: Int, $permanent3: Boolean, $limit11: Int, $page11: Int, $input: RemoveAssetRelationsInput!) {
              removeAssetRelations(input: $input) {
                asset {
                  __typename
                  id
                  creator {
                    __typename
                    id
                    name
                  }
                  createdAt
                  modifier {
                    __typename
                    id
                    name
                  }
                  modifiedAt
                  title
                  description
                  attachments {
                    id
                    creator {
                      __typename
                      id
                      name
                    }
                    createdAt
                    modifier {
                      __typename
                      id
                      name
                    }
                    modifiedAt
                    name
                    filename
                    type
                    externalId
                    extension
                    size
                    downloadUrl(validityInDays: $validityInDays, permanent: $permanent)
                  }
                  externalId
                  tags {
                    value
                    source
                  }
                  copyright {
                    status
                    notice
                  }
                  availability {
                    from
                    to
                  }
                  expiresAt
                  licenses {
                    id
                    title
                    license
                    addByDefault
                    requireConsensus
                  }
                  status
                  relatedAssets(limit: $limit3, page: $page3) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      __typename
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      title
                      description
                      attachments {
                        id
                        createdAt
                        modifiedAt
                        name
                        filename
                        type
                        externalId
                        extension
                        size
                        downloadUrl(validityInDays: $validityInDays1, permanent: $permanent1)
                      }
                      externalId
                      tags {
                        value
                        source
                      }
                      copyright {
                        status
                        notice
                      }
                      availability {
                        from
                        to
                      }
                      expiresAt
                      licenses {
                        id
                        title
                        license
                        addByDefault
                        requireConsensus
                      }
                      status
                      relatedAssets(limit: $limit, page: $page) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      comments(limit: $limit1, page: $page1, query: $query) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      currentUserPermissions {
                        canEdit
                        canDelete
                        canDownload
                        canComment
                      }
                      workflowTask {
                        id
                        title
                        description
                      }
                      variants(limit: $limit2, page: $page2) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      previewBackgroundColor {
                        red
                        green
                        blue
                        alpha
                      }
                    }
                  }
                  comments(limit: $limit5, page: $page5, query: $query1) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      id
                      createdAt
                      modifiedAt
                      content
                      mentionedUsers {
                        __typename
                        id
                        name
                      }
                      isResolved
                      replies(limit: $limit4, page: $page4) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                    }
                  }
                  currentUserPermissions {
                    canEdit
                    canDelete
                    canDownload
                    canComment
                  }
                  customMetadata {
                    __typename
                    property {
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      name
                      type {
                        __typename
                        name
                      }
                      helpText
                      isRequired
                      defaultValue
                    }
                  }
                  workflowTask {
                    id
                    assignedUsers {
                      __typename
                      id
                      name
                    }
                    asset {
                      __typename
                      id
                      createdAt
                      modifiedAt
                      title
                      description
                      externalId
                      expiresAt
                      status
                      variants(limit: $limit6, page: $page6) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      previewBackgroundColor {
                        red
                        green
                        blue
                        alpha
                      }
                    }
                    title
                    description
                    status {
                      id
                      name
                      color {
                        red
                        green
                        blue
                        alpha
                      }
                      assignedUsers {
                        __typename
                        id
                        name
                      }
                      checklistPresets {
                        id
                        content
                      }
                      tasks(limit: $limit7, page: $page7) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      enterRules
                    }
                    checklistItem(limit: $limit8, page: $page8) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        id
                        content
                      }
                    }
                  }
                }
                relatedAssets {
                  __typename
                  id
                  creator {
                    __typename
                    id
                    name
                  }
                  createdAt
                  modifier {
                    __typename
                    id
                    name
                  }
                  modifiedAt
                  title
                  description
                  attachments {
                    id
                    createdAt
                    modifiedAt
                    name
                    filename
                    type
                    externalId
                    extension
                    size
                    downloadUrl(validityInDays: $validityInDays2, permanent: $permanent2)
                  }
                  externalId
                  tags {
                    value
                    source
                  }
                  copyright {
                    status
                    notice
                  }
                  availability {
                    from
                    to
                  }
                  expiresAt
                  licenses {
                    id
                    title
                    license
                    addByDefault
                    requireConsensus
                  }
                  status
                  relatedAssets(limit: $limit9, page: $page9) {
                    total
                    page
                    limit
                    hasNextPage
                  }
                  comments(limit: $limit10, page: $page10, query: $query2) {
                    total
                    page
                    limit
                    hasNextPage
                  }
                  currentUserPermissions {
                    canEdit
                    canDelete
                    canDownload
                    canComment
                  }
                  workflowTask {
                    id
                    title
                    description
                  }
                  variants(limit: $limit11, page: $page11) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      key
                      filename
                      downloadUrl(validityInDays: $validityInDays3, permanent: $permanent3)
                    }
                  }
                  location {
                    brand {
                      id
                      name
                    }
                    library {
                      id
                      name
                    }
                    workspaceProject {
                      id
                      name
                    }
                    folder {
                      id
                      name
                      breadcrumbs {
                        id
                        name
                      }
                    }
                  }
                  previewBackgroundColor {
                    red
                    green
                    blue
                    alpha
                  }
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {
            "validityInDays": validity_in_days,
            "permanent": permanent,
            "validityInDays1": validity_in_days_1,
            "permanent1": permanent_1,
            "limit": limit,
            "page": page,
            "limit1": limit_1,
            "page1": page_1,
            "query": query,
            "limit2": limit_2,
            "page2": page_2,
            "limit3": limit_3,
            "page3": page_3,
            "limit4": limit_4,
            "page4": page_4,
            "limit5": limit_5,
            "page5": page_5,
            "query1": query_1,
            "limit6": limit_6,
            "page6": page_6,
            "limit7": limit_7,
            "page7": page_7,
            "limit8": limit_8,
            "page8": page_8,
            "validityInDays2": validity_in_days_2,
            "permanent2": permanent_2,
            "limit9": limit_9,
            "page9": page_9,
            "limit10": limit_10,
            "page10": page_10,
            "query2": query_2,
            "validityInDays3": validity_in_days_3,
            "permanent3": permanent_3,
            "limit11": limit_11,
            "page11": page_11,
            "input": input,
        }
        response = self.execute(
            query=_query,
            operation_name="removeAssetRelations",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return RemoveAssetRelations.model_validate(data)

    def remove_asset_tags(
        self,
        input: RemoveAssetTagsInput,
        validity_in_days: Union[Optional[int], UnsetType] = UNSET,
        permanent: Union[Optional[bool], UnsetType] = UNSET,
        validity_in_days_1: Union[Optional[int], UnsetType] = UNSET,
        permanent_1: Union[Optional[bool], UnsetType] = UNSET,
        limit: Union[Optional[int], UnsetType] = UNSET,
        page: Union[Optional[int], UnsetType] = UNSET,
        limit_1: Union[Optional[int], UnsetType] = UNSET,
        page_1: Union[Optional[int], UnsetType] = UNSET,
        query: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_2: Union[Optional[int], UnsetType] = UNSET,
        page_2: Union[Optional[int], UnsetType] = UNSET,
        limit_3: Union[Optional[int], UnsetType] = UNSET,
        page_3: Union[Optional[int], UnsetType] = UNSET,
        limit_4: Union[Optional[int], UnsetType] = UNSET,
        page_4: Union[Optional[int], UnsetType] = UNSET,
        limit_5: Union[Optional[int], UnsetType] = UNSET,
        page_5: Union[Optional[int], UnsetType] = UNSET,
        query_1: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_6: Union[Optional[int], UnsetType] = UNSET,
        page_6: Union[Optional[int], UnsetType] = UNSET,
        limit_7: Union[Optional[int], UnsetType] = UNSET,
        page_7: Union[Optional[int], UnsetType] = UNSET,
        limit_8: Union[Optional[int], UnsetType] = UNSET,
        page_8: Union[Optional[int], UnsetType] = UNSET,
        **kwargs: Any
    ) -> RemoveAssetTags:
        _query = gql(
            """
            mutation removeAssetTags($validityInDays: Int, $permanent: Boolean, $validityInDays1: Int, $permanent1: Boolean, $limit: Int, $page: Int, $limit1: Int, $page1: Int, $query: AssetCommentQueryInput, $limit2: Int, $page2: Int, $limit3: Int, $page3: Int, $limit4: Int, $page4: Int, $limit5: Int, $page5: Int, $query1: AssetCommentQueryInput, $limit6: Int, $page6: Int, $limit7: Int, $page7: Int, $limit8: Int, $page8: Int, $input: RemoveAssetTagsInput!) {
              removeAssetTags(input: $input) {
                asset {
                  __typename
                  id
                  creator {
                    __typename
                    id
                    name
                  }
                  createdAt
                  modifier {
                    __typename
                    id
                    name
                  }
                  modifiedAt
                  title
                  description
                  attachments {
                    id
                    creator {
                      __typename
                      id
                      name
                    }
                    createdAt
                    modifier {
                      __typename
                      id
                      name
                    }
                    modifiedAt
                    name
                    filename
                    type
                    externalId
                    extension
                    size
                    downloadUrl(validityInDays: $validityInDays, permanent: $permanent)
                  }
                  externalId
                  tags {
                    value
                    source
                  }
                  copyright {
                    status
                    notice
                  }
                  availability {
                    from
                    to
                  }
                  expiresAt
                  licenses {
                    id
                    title
                    license
                    addByDefault
                    requireConsensus
                  }
                  status
                  relatedAssets(limit: $limit3, page: $page3) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      __typename
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      title
                      description
                      attachments {
                        id
                        createdAt
                        modifiedAt
                        name
                        filename
                        type
                        externalId
                        extension
                        size
                        downloadUrl(validityInDays: $validityInDays1, permanent: $permanent1)
                      }
                      externalId
                      tags {
                        value
                        source
                      }
                      copyright {
                        status
                        notice
                      }
                      availability {
                        from
                        to
                      }
                      expiresAt
                      licenses {
                        id
                        title
                        license
                        addByDefault
                        requireConsensus
                      }
                      status
                      relatedAssets(limit: $limit, page: $page) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      comments(limit: $limit1, page: $page1, query: $query) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      currentUserPermissions {
                        canEdit
                        canDelete
                        canDownload
                        canComment
                      }
                      workflowTask {
                        id
                        title
                        description
                      }
                      variants(limit: $limit2, page: $page2) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      previewBackgroundColor {
                        red
                        green
                        blue
                        alpha
                      }
                    }
                  }
                  comments(limit: $limit5, page: $page5, query: $query1) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      id
                      createdAt
                      modifiedAt
                      content
                      mentionedUsers {
                        __typename
                        id
                        name
                      }
                      isResolved
                      replies(limit: $limit4, page: $page4) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                    }
                  }
                  currentUserPermissions {
                    canEdit
                    canDelete
                    canDownload
                    canComment
                  }
                  customMetadata {
                    __typename
                    property {
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      name
                      type {
                        __typename
                        name
                      }
                      helpText
                      isRequired
                      defaultValue
                    }
                  }
                  workflowTask {
                    id
                    assignedUsers {
                      __typename
                      id
                      name
                    }
                    asset {
                      __typename
                      id
                      createdAt
                      modifiedAt
                      title
                      description
                      externalId
                      expiresAt
                      status
                      variants(limit: $limit6, page: $page6) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      previewBackgroundColor {
                        red
                        green
                        blue
                        alpha
                      }
                    }
                    title
                    description
                    status {
                      id
                      name
                      color {
                        red
                        green
                        blue
                        alpha
                      }
                      assignedUsers {
                        __typename
                        id
                        name
                      }
                      checklistPresets {
                        id
                        content
                      }
                      tasks(limit: $limit7, page: $page7) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      enterRules
                    }
                    checklistItem(limit: $limit8, page: $page8) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        id
                        content
                      }
                    }
                  }
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {
            "validityInDays": validity_in_days,
            "permanent": permanent,
            "validityInDays1": validity_in_days_1,
            "permanent1": permanent_1,
            "limit": limit,
            "page": page,
            "limit1": limit_1,
            "page1": page_1,
            "query": query,
            "limit2": limit_2,
            "page2": page_2,
            "limit3": limit_3,
            "page3": page_3,
            "limit4": limit_4,
            "page4": page_4,
            "limit5": limit_5,
            "page5": page_5,
            "query1": query_1,
            "limit6": limit_6,
            "page6": page_6,
            "limit7": limit_7,
            "page7": page_7,
            "limit8": limit_8,
            "page8": page_8,
            "input": input,
        }
        response = self.execute(
            query=_query,
            operation_name="removeAssetTags",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return RemoveAssetTags.model_validate(data)

    def remove_collection_assets(
        self,
        input: RemoveCollectionAssetsInput,
        validity_in_days: Union[Optional[int], UnsetType] = UNSET,
        permanent: Union[Optional[bool], UnsetType] = UNSET,
        limit: Union[Optional[int], UnsetType] = UNSET,
        page: Union[Optional[int], UnsetType] = UNSET,
        limit_1: Union[Optional[int], UnsetType] = UNSET,
        page_1: Union[Optional[int], UnsetType] = UNSET,
        query: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_2: Union[Optional[int], UnsetType] = UNSET,
        page_2: Union[Optional[int], UnsetType] = UNSET,
        limit_3: Union[Optional[int], UnsetType] = UNSET,
        page_3: Union[Optional[int], UnsetType] = UNSET,
        **kwargs: Any
    ) -> RemoveCollectionAssets:
        _query = gql(
            """
            mutation removeCollectionAssets($validityInDays: Int, $permanent: Boolean, $limit: Int, $page: Int, $limit1: Int, $page1: Int, $query: AssetCommentQueryInput, $limit2: Int, $page2: Int, $limit3: Int, $page3: Int, $input: RemoveCollectionAssetsInput!) {
              removeCollectionAssets(input: $input) {
                collection {
                  id
                  name
                  assets(limit: $limit3, page: $page3) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      __typename
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      title
                      description
                      attachments {
                        id
                        createdAt
                        modifiedAt
                        name
                        filename
                        type
                        externalId
                        extension
                        size
                        downloadUrl(validityInDays: $validityInDays, permanent: $permanent)
                      }
                      externalId
                      tags {
                        value
                        source
                      }
                      copyright {
                        status
                        notice
                      }
                      availability {
                        from
                        to
                      }
                      expiresAt
                      licenses {
                        id
                        title
                        license
                        addByDefault
                        requireConsensus
                      }
                      status
                      relatedAssets(limit: $limit, page: $page) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      comments(limit: $limit1, page: $page1, query: $query) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      currentUserPermissions {
                        canEdit
                        canDelete
                        canDownload
                        canComment
                      }
                      workflowTask {
                        id
                        title
                        description
                      }
                      variants(limit: $limit2, page: $page2) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      previewBackgroundColor {
                        red
                        green
                        blue
                        alpha
                      }
                    }
                  }
                  currentUserPermissions {
                    canAddAssets
                    canRemoveAssets
                  }
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {
            "validityInDays": validity_in_days,
            "permanent": permanent,
            "limit": limit,
            "page": page,
            "limit1": limit_1,
            "page1": page_1,
            "query": query,
            "limit2": limit_2,
            "page2": page_2,
            "limit3": limit_3,
            "page3": page_3,
            "input": input,
        }
        response = self.execute(
            query=_query,
            operation_name="removeCollectionAssets",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return RemoveCollectionAssets.model_validate(data)

    def remove_custom_metadata(
        self, input: RemoveCustomMetadataInput, **kwargs: Any
    ) -> RemoveCustomMetadata:
        query = gql(
            """
            mutation removeCustomMetadata($input: RemoveCustomMetadataInput!) {
              removeCustomMetadata(input: $input) {
                parentIds
              }
            }
            """
        )
        variables: Dict[str, object] = {"input": input}
        response = self.execute(
            query=query,
            operation_name="removeCustomMetadata",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return RemoveCustomMetadata.model_validate(data)

    def remove_custom_metadata_property_options(
        self, input: RemoveCustomMetadataPropertyOptionsInput, **kwargs: Any
    ) -> RemoveCustomMetadataPropertyOptions:
        query = gql(
            """
            mutation removeCustomMetadataPropertyOptions($input: RemoveCustomMetadataPropertyOptionsInput!) {
              removeCustomMetadataPropertyOptions(input: $input) {
                customMetadataProperty {
                  id
                  creator {
                    __typename
                    id
                    name
                  }
                  createdAt
                  modifier {
                    __typename
                    id
                    name
                  }
                  modifiedAt
                  name
                  type {
                    __typename
                    name
                  }
                  helpText
                  isRequired
                  defaultValue
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {"input": input}
        response = self.execute(
            query=query,
            operation_name="removeCustomMetadataPropertyOptions",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return RemoveCustomMetadataPropertyOptions.model_validate(data)

    def remove_workflow_checklist_item(
        self, input: RemoveWorkflowChecklistItemInput, **kwargs: Any
    ) -> RemoveWorkflowChecklistItem:
        query = gql(
            """
            mutation removeWorkflowChecklistItem($input: RemoveWorkflowChecklistItemInput!) {
              removeWorkflowChecklistItem(input: $input) {
                checklistItem {
                  id
                  content
                  assignedUser {
                    __typename
                    id
                    name
                  }
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {"input": input}
        response = self.execute(
            query=query,
            operation_name="removeWorkflowChecklistItem",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return RemoveWorkflowChecklistItem.model_validate(data)

    def remove_workflow_checklist_preset(
        self, input: RemoveWorkflowChecklistPresetInput, **kwargs: Any
    ) -> RemoveWorkflowChecklistPreset:
        query = gql(
            """
            mutation removeWorkflowChecklistPreset($input: RemoveWorkflowChecklistPresetInput!) {
              removeWorkflowChecklistPreset(input: $input) {
                checklistPreset {
                  id
                  content
                  assignedUser {
                    __typename
                    id
                    name
                  }
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {"input": input}
        response = self.execute(
            query=query,
            operation_name="removeWorkflowChecklistPreset",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return RemoveWorkflowChecklistPreset.model_validate(data)

    def remove_workflow_status_assignees(
        self,
        input: RemoveWorkflowStatusAssigneesInput,
        limit: Union[Optional[int], UnsetType] = UNSET,
        page: Union[Optional[int], UnsetType] = UNSET,
        limit_1: Union[Optional[int], UnsetType] = UNSET,
        page_1: Union[Optional[int], UnsetType] = UNSET,
        **kwargs: Any
    ) -> RemoveWorkflowStatusAssignees:
        query = gql(
            """
            mutation removeWorkflowStatusAssignees($limit: Int, $page: Int, $limit1: Int, $page1: Int, $input: RemoveWorkflowStatusAssigneesInput!) {
              removeWorkflowStatusAssignees(input: $input) {
                workflowStatus {
                  id
                  name
                  color {
                    red
                    green
                    blue
                    alpha
                  }
                  assignedUsers {
                    __typename
                    id
                    name
                  }
                  checklistPresets {
                    id
                    content
                    assignedUser {
                      __typename
                      id
                      name
                    }
                  }
                  tasks(limit: $limit1, page: $page1) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      id
                      assignedUsers {
                        __typename
                        id
                        name
                      }
                      asset {
                        __typename
                        id
                        createdAt
                        modifiedAt
                        title
                        description
                        externalId
                        expiresAt
                        status
                      }
                      title
                      description
                      status {
                        id
                        name
                        enterRules
                      }
                      checklistItem(limit: $limit, page: $page) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                    }
                  }
                  enterRules
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {
            "limit": limit,
            "page": page,
            "limit1": limit_1,
            "page1": page_1,
            "input": input,
        }
        response = self.execute(
            query=query,
            operation_name="removeWorkflowStatusAssignees",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return RemoveWorkflowStatusAssignees.model_validate(data)

    def remove_workflow_task_assignees(
        self,
        input: RemoveWorkflowTaskAssigneesInput,
        validity_in_days: Union[Optional[int], UnsetType] = UNSET,
        permanent: Union[Optional[bool], UnsetType] = UNSET,
        limit: Union[Optional[int], UnsetType] = UNSET,
        page: Union[Optional[int], UnsetType] = UNSET,
        limit_1: Union[Optional[int], UnsetType] = UNSET,
        page_1: Union[Optional[int], UnsetType] = UNSET,
        query: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_2: Union[Optional[int], UnsetType] = UNSET,
        page_2: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_1: Union[Optional[int], UnsetType] = UNSET,
        permanent_1: Union[Optional[bool], UnsetType] = UNSET,
        limit_3: Union[Optional[int], UnsetType] = UNSET,
        page_3: Union[Optional[int], UnsetType] = UNSET,
        **kwargs: Any
    ) -> RemoveWorkflowTaskAssignees:
        _query = gql(
            """
            mutation removeWorkflowTaskAssignees($validityInDays: Int, $permanent: Boolean, $limit: Int, $page: Int, $limit1: Int, $page1: Int, $query: AssetCommentQueryInput, $limit2: Int, $page2: Int, $validityInDays1: Int, $permanent1: Boolean, $limit3: Int, $page3: Int, $input: RemoveWorkflowTaskAssigneesInput!) {
              removeWorkflowTaskAssignees(input: $input) {
                workflowTask {
                  id
                  assignedUsers {
                    __typename
                    id
                    name
                  }
                  asset {
                    __typename
                    id
                    creator {
                      __typename
                      id
                      name
                    }
                    createdAt
                    modifier {
                      __typename
                      id
                      name
                    }
                    modifiedAt
                    title
                    description
                    attachments {
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      name
                      filename
                      type
                      externalId
                      extension
                      size
                      downloadUrl(validityInDays: $validityInDays, permanent: $permanent)
                    }
                    externalId
                    tags {
                      value
                      source
                    }
                    copyright {
                      status
                      notice
                    }
                    availability {
                      from
                      to
                    }
                    expiresAt
                    licenses {
                      id
                      title
                      license
                      addByDefault
                      requireConsensus
                    }
                    status
                    relatedAssets(limit: $limit, page: $page) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        __typename
                        id
                        createdAt
                        modifiedAt
                        title
                        description
                        externalId
                        expiresAt
                        status
                      }
                    }
                    comments(limit: $limit1, page: $page1, query: $query) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        id
                        createdAt
                        modifiedAt
                        content
                        isResolved
                      }
                    }
                    currentUserPermissions {
                      canEdit
                      canDelete
                      canDownload
                      canComment
                    }
                    customMetadata {
                      __typename
                      property {
                        id
                        createdAt
                        modifiedAt
                        name
                        helpText
                        isRequired
                        defaultValue
                      }
                    }
                    workflowTask {
                      id
                      title
                      description
                      status {
                        id
                        name
                        enterRules
                      }
                      checklistItem(limit: $limit2, page: $page2) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                    }
                    variants(limit: $limit3, page: $page3) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        key
                        filename
                        downloadUrl(validityInDays: $validityInDays1, permanent: $permanent1)
                      }
                    }
                    location {
                      brand {
                        id
                        name
                      }
                      library {
                        id
                        name
                      }
                      workspaceProject {
                        id
                        name
                      }
                      folder {
                        id
                        name
                      }
                    }
                    previewBackgroundColor {
                      red
                      green
                      blue
                      alpha
                    }
                  }
                  title
                  description
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {
            "validityInDays": validity_in_days,
            "permanent": permanent,
            "limit": limit,
            "page": page,
            "limit1": limit_1,
            "page1": page_1,
            "query": query,
            "limit2": limit_2,
            "page2": page_2,
            "validityInDays1": validity_in_days_1,
            "permanent1": permanent_1,
            "limit3": limit_3,
            "page3": page_3,
            "input": input,
        }
        response = self.execute(
            query=_query,
            operation_name="removeWorkflowTaskAssignees",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return RemoveWorkflowTaskAssignees.model_validate(data)

    def reopen_asset_comment(
        self,
        input: ReopenAssetCommentInput,
        limit: Union[Optional[int], UnsetType] = UNSET,
        page: Union[Optional[int], UnsetType] = UNSET,
        **kwargs: Any
    ) -> ReopenAssetComment:
        query = gql(
            """
            mutation reopenAssetComment($limit: Int, $page: Int, $input: ReopenAssetCommentInput!) {
              reopenAssetComment(input: $input) {
                comment {
                  id
                  creator {
                    __typename
                    id
                    name
                  }
                  createdAt
                  modifier {
                    __typename
                    id
                    name
                  }
                  modifiedAt
                  content
                  mentionedUsers {
                    __typename
                    id
                    name
                  }
                  isResolved
                  replies(limit: $limit, page: $page) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      content
                      mentionedUsers {
                        __typename
                        id
                        name
                      }
                    }
                  }
                  marking {
                    __typename
                    position {
                      x
                      y
                    }
                    dimensions {
                      width
                      height
                    }
                  }
                  currentUserPermissions {
                    canEdit
                    canDelete
                    canReply
                  }
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {"limit": limit, "page": page, "input": input}
        response = self.execute(
            query=query,
            operation_name="reopenAssetComment",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return ReopenAssetComment.model_validate(data)

    def replace_asset(self, input: ReplaceAssetInput, **kwargs: Any) -> ReplaceAsset:
        query = gql(
            """
            mutation replaceAsset($input: ReplaceAssetInput!) {
              replaceAsset(input: $input) {
                job {
                  assetId
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {"input": input}
        response = self.execute(
            query=query, operation_name="replaceAsset", variables=variables, **kwargs
        )
        data = self.get_data(response)
        return ReplaceAsset.model_validate(data)

    def replace_asset_variant(
        self, input: ReplaceAssetVariantInput, **kwargs: Any
    ) -> ReplaceAssetVariant:
        query = gql(
            """
            mutation replaceAssetVariant($input: ReplaceAssetVariantInput!) {
              replaceAssetVariant(input: $input) {
                job {
                  variantId
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {"input": input}
        response = self.execute(
            query=query,
            operation_name="replaceAssetVariant",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return ReplaceAssetVariant.model_validate(data)

    def replace_external_data_source_file(
        self, input: ReplaceExternalDataSourceFileInput, **kwargs: Any
    ) -> ReplaceExternalDataSourceFile:
        query = gql(
            """
            mutation replaceExternalDataSourceFile($input: ReplaceExternalDataSourceFileInput!) {
              replaceExternalDataSourceFile(input: $input) {
                externalDataSourceId
              }
            }
            """
        )
        variables: Dict[str, object] = {"input": input}
        response = self.execute(
            query=query,
            operation_name="replaceExternalDataSourceFile",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return ReplaceExternalDataSourceFile.model_validate(data)

    def reply_to_comment(
        self, input: ReplyToCommentInput, **kwargs: Any
    ) -> ReplyToComment:
        query = gql(
            """
            mutation replyToComment($input: ReplyToCommentInput!) {
              replyToComment(input: $input) {
                reply {
                  id
                  creator {
                    __typename
                    id
                    name
                  }
                  createdAt
                  modifier {
                    __typename
                    id
                    name
                  }
                  modifiedAt
                  content
                  mentionedUsers {
                    __typename
                    id
                    name
                  }
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {"input": input}
        response = self.execute(
            query=query, operation_name="replyToComment", variables=variables, **kwargs
        )
        data = self.get_data(response)
        return ReplyToComment.model_validate(data)

    def resolve_asset_comment(
        self,
        input: ResolveAssetCommentInput,
        limit: Union[Optional[int], UnsetType] = UNSET,
        page: Union[Optional[int], UnsetType] = UNSET,
        **kwargs: Any
    ) -> ResolveAssetComment:
        query = gql(
            """
            mutation resolveAssetComment($limit: Int, $page: Int, $input: ResolveAssetCommentInput!) {
              resolveAssetComment(input: $input) {
                comment {
                  id
                  creator {
                    __typename
                    id
                    name
                  }
                  createdAt
                  modifier {
                    __typename
                    id
                    name
                  }
                  modifiedAt
                  content
                  mentionedUsers {
                    __typename
                    id
                    name
                  }
                  isResolved
                  replies(limit: $limit, page: $page) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      content
                      mentionedUsers {
                        __typename
                        id
                        name
                      }
                    }
                  }
                  marking {
                    __typename
                    position {
                      x
                      y
                    }
                    dimensions {
                      width
                      height
                    }
                  }
                  currentUserPermissions {
                    canEdit
                    canDelete
                    canReply
                  }
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {"limit": limit, "page": page, "input": input}
        response = self.execute(
            query=query,
            operation_name="resolveAssetComment",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return ResolveAssetComment.model_validate(data)

    def set_collection_assets(
        self,
        input: SetCollectionAssetsInput,
        validity_in_days: Union[Optional[int], UnsetType] = UNSET,
        permanent: Union[Optional[bool], UnsetType] = UNSET,
        limit: Union[Optional[int], UnsetType] = UNSET,
        page: Union[Optional[int], UnsetType] = UNSET,
        limit_1: Union[Optional[int], UnsetType] = UNSET,
        page_1: Union[Optional[int], UnsetType] = UNSET,
        query: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_2: Union[Optional[int], UnsetType] = UNSET,
        page_2: Union[Optional[int], UnsetType] = UNSET,
        limit_3: Union[Optional[int], UnsetType] = UNSET,
        page_3: Union[Optional[int], UnsetType] = UNSET,
        **kwargs: Any
    ) -> SetCollectionAssets:
        _query = gql(
            """
            mutation setCollectionAssets($validityInDays: Int, $permanent: Boolean, $limit: Int, $page: Int, $limit1: Int, $page1: Int, $query: AssetCommentQueryInput, $limit2: Int, $page2: Int, $limit3: Int, $page3: Int, $input: SetCollectionAssetsInput!) {
              setCollectionAssets(input: $input) {
                collection {
                  id
                  name
                  assets(limit: $limit3, page: $page3) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      __typename
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      title
                      description
                      attachments {
                        id
                        createdAt
                        modifiedAt
                        name
                        filename
                        type
                        externalId
                        extension
                        size
                        downloadUrl(validityInDays: $validityInDays, permanent: $permanent)
                      }
                      externalId
                      tags {
                        value
                        source
                      }
                      copyright {
                        status
                        notice
                      }
                      availability {
                        from
                        to
                      }
                      expiresAt
                      licenses {
                        id
                        title
                        license
                        addByDefault
                        requireConsensus
                      }
                      status
                      relatedAssets(limit: $limit, page: $page) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      comments(limit: $limit1, page: $page1, query: $query) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      currentUserPermissions {
                        canEdit
                        canDelete
                        canDownload
                        canComment
                      }
                      workflowTask {
                        id
                        title
                        description
                      }
                      variants(limit: $limit2, page: $page2) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      previewBackgroundColor {
                        red
                        green
                        blue
                        alpha
                      }
                    }
                  }
                  currentUserPermissions {
                    canAddAssets
                    canRemoveAssets
                  }
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {
            "validityInDays": validity_in_days,
            "permanent": permanent,
            "limit": limit,
            "page": page,
            "limit1": limit_1,
            "page1": page_1,
            "query": query,
            "limit2": limit_2,
            "page2": page_2,
            "limit3": limit_3,
            "page3": page_3,
            "input": input,
        }
        response = self.execute(
            query=_query,
            operation_name="setCollectionAssets",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return SetCollectionAssets.model_validate(data)

    def set_custom_metadata(
        self, input: SetCustomMetadataInput, **kwargs: Any
    ) -> SetCustomMetadata:
        query = gql(
            """
            mutation setCustomMetadata($input: SetCustomMetadataInput!) {
              setCustomMetadata(input: $input) {
                parentIds
              }
            }
            """
        )
        variables: Dict[str, object] = {"input": input}
        response = self.execute(
            query=query,
            operation_name="setCustomMetadata",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return SetCustomMetadata.model_validate(data)

    def sync_asset_tags(
        self,
        input: SyncAssetTagsInput,
        validity_in_days: Union[Optional[int], UnsetType] = UNSET,
        permanent: Union[Optional[bool], UnsetType] = UNSET,
        validity_in_days_1: Union[Optional[int], UnsetType] = UNSET,
        permanent_1: Union[Optional[bool], UnsetType] = UNSET,
        limit: Union[Optional[int], UnsetType] = UNSET,
        page: Union[Optional[int], UnsetType] = UNSET,
        limit_1: Union[Optional[int], UnsetType] = UNSET,
        page_1: Union[Optional[int], UnsetType] = UNSET,
        query: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_2: Union[Optional[int], UnsetType] = UNSET,
        page_2: Union[Optional[int], UnsetType] = UNSET,
        limit_3: Union[Optional[int], UnsetType] = UNSET,
        page_3: Union[Optional[int], UnsetType] = UNSET,
        limit_4: Union[Optional[int], UnsetType] = UNSET,
        page_4: Union[Optional[int], UnsetType] = UNSET,
        limit_5: Union[Optional[int], UnsetType] = UNSET,
        page_5: Union[Optional[int], UnsetType] = UNSET,
        query_1: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_6: Union[Optional[int], UnsetType] = UNSET,
        page_6: Union[Optional[int], UnsetType] = UNSET,
        limit_7: Union[Optional[int], UnsetType] = UNSET,
        page_7: Union[Optional[int], UnsetType] = UNSET,
        limit_8: Union[Optional[int], UnsetType] = UNSET,
        page_8: Union[Optional[int], UnsetType] = UNSET,
        **kwargs: Any
    ) -> SyncAssetTags:
        _query = gql(
            """
            mutation syncAssetTags($validityInDays: Int, $permanent: Boolean, $validityInDays1: Int, $permanent1: Boolean, $limit: Int, $page: Int, $limit1: Int, $page1: Int, $query: AssetCommentQueryInput, $limit2: Int, $page2: Int, $limit3: Int, $page3: Int, $limit4: Int, $page4: Int, $limit5: Int, $page5: Int, $query1: AssetCommentQueryInput, $limit6: Int, $page6: Int, $limit7: Int, $page7: Int, $limit8: Int, $page8: Int, $input: SyncAssetTagsInput!) {
              syncAssetTags(input: $input) {
                asset {
                  __typename
                  id
                  creator {
                    __typename
                    id
                    name
                  }
                  createdAt
                  modifier {
                    __typename
                    id
                    name
                  }
                  modifiedAt
                  title
                  description
                  attachments {
                    id
                    creator {
                      __typename
                      id
                      name
                    }
                    createdAt
                    modifier {
                      __typename
                      id
                      name
                    }
                    modifiedAt
                    name
                    filename
                    type
                    externalId
                    extension
                    size
                    downloadUrl(validityInDays: $validityInDays, permanent: $permanent)
                  }
                  externalId
                  tags {
                    value
                    source
                  }
                  copyright {
                    status
                    notice
                  }
                  availability {
                    from
                    to
                  }
                  expiresAt
                  licenses {
                    id
                    title
                    license
                    addByDefault
                    requireConsensus
                  }
                  status
                  relatedAssets(limit: $limit3, page: $page3) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      __typename
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      title
                      description
                      attachments {
                        id
                        createdAt
                        modifiedAt
                        name
                        filename
                        type
                        externalId
                        extension
                        size
                        downloadUrl(validityInDays: $validityInDays1, permanent: $permanent1)
                      }
                      externalId
                      tags {
                        value
                        source
                      }
                      copyright {
                        status
                        notice
                      }
                      availability {
                        from
                        to
                      }
                      expiresAt
                      licenses {
                        id
                        title
                        license
                        addByDefault
                        requireConsensus
                      }
                      status
                      relatedAssets(limit: $limit, page: $page) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      comments(limit: $limit1, page: $page1, query: $query) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      currentUserPermissions {
                        canEdit
                        canDelete
                        canDownload
                        canComment
                      }
                      workflowTask {
                        id
                        title
                        description
                      }
                      variants(limit: $limit2, page: $page2) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      previewBackgroundColor {
                        red
                        green
                        blue
                        alpha
                      }
                    }
                  }
                  comments(limit: $limit5, page: $page5, query: $query1) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      id
                      createdAt
                      modifiedAt
                      content
                      mentionedUsers {
                        __typename
                        id
                        name
                      }
                      isResolved
                      replies(limit: $limit4, page: $page4) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                    }
                  }
                  currentUserPermissions {
                    canEdit
                    canDelete
                    canDownload
                    canComment
                  }
                  customMetadata {
                    __typename
                    property {
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      name
                      type {
                        __typename
                        name
                      }
                      helpText
                      isRequired
                      defaultValue
                    }
                  }
                  workflowTask {
                    id
                    assignedUsers {
                      __typename
                      id
                      name
                    }
                    asset {
                      __typename
                      id
                      createdAt
                      modifiedAt
                      title
                      description
                      externalId
                      expiresAt
                      status
                      variants(limit: $limit6, page: $page6) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      previewBackgroundColor {
                        red
                        green
                        blue
                        alpha
                      }
                    }
                    title
                    description
                    status {
                      id
                      name
                      color {
                        red
                        green
                        blue
                        alpha
                      }
                      assignedUsers {
                        __typename
                        id
                        name
                      }
                      checklistPresets {
                        id
                        content
                      }
                      tasks(limit: $limit7, page: $page7) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      enterRules
                    }
                    checklistItem(limit: $limit8, page: $page8) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        id
                        content
                      }
                    }
                  }
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {
            "validityInDays": validity_in_days,
            "permanent": permanent,
            "validityInDays1": validity_in_days_1,
            "permanent1": permanent_1,
            "limit": limit,
            "page": page,
            "limit1": limit_1,
            "page1": page_1,
            "query": query,
            "limit2": limit_2,
            "page2": page_2,
            "limit3": limit_3,
            "page3": page_3,
            "limit4": limit_4,
            "page4": page_4,
            "limit5": limit_5,
            "page5": page_5,
            "query1": query_1,
            "limit6": limit_6,
            "page6": page_6,
            "limit7": limit_7,
            "page7": page_7,
            "limit8": limit_8,
            "page8": page_8,
            "input": input,
        }
        response = self.execute(
            query=_query, operation_name="syncAssetTags", variables=variables, **kwargs
        )
        data = self.get_data(response)
        return SyncAssetTags.model_validate(data)

    def uninstall_webhook(
        self, input: UninstallWebhookInput, **kwargs: Any
    ) -> UninstallWebhook:
        query = gql(
            """
            mutation uninstallWebhook($input: UninstallWebhookInput!) {
              uninstallWebhook(input: $input) {
                webhook {
                  __typename
                  id
                  creator {
                    __typename
                    id
                    name
                  }
                  createdAt
                  name
                  notificationUrl
                  secret
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {"input": input}
        response = self.execute(
            query=query,
            operation_name="uninstallWebhook",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return UninstallWebhook.model_validate(data)

    def update_asset(
        self,
        input: UpdateAssetInput,
        validity_in_days: Union[Optional[int], UnsetType] = UNSET,
        permanent: Union[Optional[bool], UnsetType] = UNSET,
        validity_in_days_1: Union[Optional[int], UnsetType] = UNSET,
        permanent_1: Union[Optional[bool], UnsetType] = UNSET,
        limit: Union[Optional[int], UnsetType] = UNSET,
        page: Union[Optional[int], UnsetType] = UNSET,
        limit_1: Union[Optional[int], UnsetType] = UNSET,
        page_1: Union[Optional[int], UnsetType] = UNSET,
        query: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_2: Union[Optional[int], UnsetType] = UNSET,
        page_2: Union[Optional[int], UnsetType] = UNSET,
        limit_3: Union[Optional[int], UnsetType] = UNSET,
        page_3: Union[Optional[int], UnsetType] = UNSET,
        limit_4: Union[Optional[int], UnsetType] = UNSET,
        page_4: Union[Optional[int], UnsetType] = UNSET,
        limit_5: Union[Optional[int], UnsetType] = UNSET,
        page_5: Union[Optional[int], UnsetType] = UNSET,
        query_1: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_6: Union[Optional[int], UnsetType] = UNSET,
        page_6: Union[Optional[int], UnsetType] = UNSET,
        limit_7: Union[Optional[int], UnsetType] = UNSET,
        page_7: Union[Optional[int], UnsetType] = UNSET,
        limit_8: Union[Optional[int], UnsetType] = UNSET,
        page_8: Union[Optional[int], UnsetType] = UNSET,
        **kwargs: Any
    ) -> UpdateAsset:
        _query = gql(
            """
            mutation updateAsset($validityInDays: Int, $permanent: Boolean, $validityInDays1: Int, $permanent1: Boolean, $limit: Int, $page: Int, $limit1: Int, $page1: Int, $query: AssetCommentQueryInput, $limit2: Int, $page2: Int, $limit3: Int, $page3: Int, $limit4: Int, $page4: Int, $limit5: Int, $page5: Int, $query1: AssetCommentQueryInput, $limit6: Int, $page6: Int, $limit7: Int, $page7: Int, $limit8: Int, $page8: Int, $input: UpdateAssetInput!) {
              updateAsset(input: $input) {
                asset {
                  __typename
                  id
                  creator {
                    __typename
                    id
                    name
                  }
                  createdAt
                  modifier {
                    __typename
                    id
                    name
                  }
                  modifiedAt
                  title
                  description
                  attachments {
                    id
                    creator {
                      __typename
                      id
                      name
                    }
                    createdAt
                    modifier {
                      __typename
                      id
                      name
                    }
                    modifiedAt
                    name
                    filename
                    type
                    externalId
                    extension
                    size
                    downloadUrl(validityInDays: $validityInDays, permanent: $permanent)
                  }
                  externalId
                  tags {
                    value
                    source
                  }
                  copyright {
                    status
                    notice
                  }
                  availability {
                    from
                    to
                  }
                  expiresAt
                  licenses {
                    id
                    title
                    license
                    addByDefault
                    requireConsensus
                  }
                  status
                  relatedAssets(limit: $limit3, page: $page3) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      __typename
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      title
                      description
                      attachments {
                        id
                        createdAt
                        modifiedAt
                        name
                        filename
                        type
                        externalId
                        extension
                        size
                        downloadUrl(validityInDays: $validityInDays1, permanent: $permanent1)
                      }
                      externalId
                      tags {
                        value
                        source
                      }
                      copyright {
                        status
                        notice
                      }
                      availability {
                        from
                        to
                      }
                      expiresAt
                      licenses {
                        id
                        title
                        license
                        addByDefault
                        requireConsensus
                      }
                      status
                      relatedAssets(limit: $limit, page: $page) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      comments(limit: $limit1, page: $page1, query: $query) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      currentUserPermissions {
                        canEdit
                        canDelete
                        canDownload
                        canComment
                      }
                      workflowTask {
                        id
                        title
                        description
                      }
                      variants(limit: $limit2, page: $page2) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      previewBackgroundColor {
                        red
                        green
                        blue
                        alpha
                      }
                    }
                  }
                  comments(limit: $limit5, page: $page5, query: $query1) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      id
                      createdAt
                      modifiedAt
                      content
                      mentionedUsers {
                        __typename
                        id
                        name
                      }
                      isResolved
                      replies(limit: $limit4, page: $page4) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                    }
                  }
                  currentUserPermissions {
                    canEdit
                    canDelete
                    canDownload
                    canComment
                  }
                  customMetadata {
                    __typename
                    property {
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      name
                      type {
                        __typename
                        name
                      }
                      helpText
                      isRequired
                      defaultValue
                    }
                  }
                  workflowTask {
                    id
                    assignedUsers {
                      __typename
                      id
                      name
                    }
                    asset {
                      __typename
                      id
                      createdAt
                      modifiedAt
                      title
                      description
                      externalId
                      expiresAt
                      status
                      variants(limit: $limit6, page: $page6) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      previewBackgroundColor {
                        red
                        green
                        blue
                        alpha
                      }
                    }
                    title
                    description
                    status {
                      id
                      name
                      color {
                        red
                        green
                        blue
                        alpha
                      }
                      assignedUsers {
                        __typename
                        id
                        name
                      }
                      checklistPresets {
                        id
                        content
                      }
                      tasks(limit: $limit7, page: $page7) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      enterRules
                    }
                    checklistItem(limit: $limit8, page: $page8) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        id
                        content
                      }
                    }
                  }
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {
            "validityInDays": validity_in_days,
            "permanent": permanent,
            "validityInDays1": validity_in_days_1,
            "permanent1": permanent_1,
            "limit": limit,
            "page": page,
            "limit1": limit_1,
            "page1": page_1,
            "query": query,
            "limit2": limit_2,
            "page2": page_2,
            "limit3": limit_3,
            "page3": page_3,
            "limit4": limit_4,
            "page4": page_4,
            "limit5": limit_5,
            "page5": page_5,
            "query1": query_1,
            "limit6": limit_6,
            "page6": page_6,
            "limit7": limit_7,
            "page7": page_7,
            "limit8": limit_8,
            "page8": page_8,
            "input": input,
        }
        response = self.execute(
            query=_query, operation_name="updateAsset", variables=variables, **kwargs
        )
        data = self.get_data(response)
        return UpdateAsset.model_validate(data)

    def update_brand(
        self,
        key: str,
        input: UpdateBrandInput,
        validity_in_days: Union[Optional[int], UnsetType] = UNSET,
        permanent: Union[Optional[bool], UnsetType] = UNSET,
        limit: Union[Optional[int], UnsetType] = UNSET,
        page: Union[Optional[int], UnsetType] = UNSET,
        limit_1: Union[Optional[int], UnsetType] = UNSET,
        page_1: Union[Optional[int], UnsetType] = UNSET,
        query: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_2: Union[Optional[int], UnsetType] = UNSET,
        page_2: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_1: Union[Optional[int], UnsetType] = UNSET,
        permanent_1: Union[Optional[bool], UnsetType] = UNSET,
        limit_3: Union[Optional[int], UnsetType] = UNSET,
        page_3: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_2: Union[Optional[int], UnsetType] = UNSET,
        permanent_2: Union[Optional[bool], UnsetType] = UNSET,
        width: Union[Optional[int], UnsetType] = UNSET,
        height: Union[Optional[int], UnsetType] = UNSET,
        width_1: Union[Optional[int], UnsetType] = UNSET,
        height_1: Union[Optional[int], UnsetType] = UNSET,
        page_4: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_3: Union[Optional[int], UnsetType] = UNSET,
        permanent_3: Union[Optional[bool], UnsetType] = UNSET,
        validity_in_days_4: Union[Optional[int], UnsetType] = UNSET,
        permanent_4: Union[Optional[bool], UnsetType] = UNSET,
        width_2: Union[Optional[int], UnsetType] = UNSET,
        height_2: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_5: Union[Optional[int], UnsetType] = UNSET,
        permanent_5: Union[Optional[bool], UnsetType] = UNSET,
        width_3: Union[Optional[int], UnsetType] = UNSET,
        height_3: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_6: Union[Optional[int], UnsetType] = UNSET,
        permanent_6: Union[Optional[bool], UnsetType] = UNSET,
        validity_in_days_7: Union[Optional[int], UnsetType] = UNSET,
        permanent_7: Union[Optional[bool], UnsetType] = UNSET,
        limit_4: Union[Optional[int], UnsetType] = UNSET,
        page_5: Union[Optional[int], UnsetType] = UNSET,
        limit_5: Union[Optional[int], UnsetType] = UNSET,
        page_6: Union[Optional[int], UnsetType] = UNSET,
        query_1: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_6: Union[Optional[int], UnsetType] = UNSET,
        page_7: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_8: Union[Optional[int], UnsetType] = UNSET,
        permanent_8: Union[Optional[bool], UnsetType] = UNSET,
        width_4: Union[Optional[int], UnsetType] = UNSET,
        height_4: Union[Optional[int], UnsetType] = UNSET,
        width_5: Union[Optional[int], UnsetType] = UNSET,
        height_5: Union[Optional[int], UnsetType] = UNSET,
        page_8: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_9: Union[Optional[int], UnsetType] = UNSET,
        permanent_9: Union[Optional[bool], UnsetType] = UNSET,
        validity_in_days_10: Union[Optional[int], UnsetType] = UNSET,
        permanent_10: Union[Optional[bool], UnsetType] = UNSET,
        width_6: Union[Optional[int], UnsetType] = UNSET,
        height_6: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_11: Union[Optional[int], UnsetType] = UNSET,
        permanent_11: Union[Optional[bool], UnsetType] = UNSET,
        width_7: Union[Optional[int], UnsetType] = UNSET,
        height_7: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_12: Union[Optional[int], UnsetType] = UNSET,
        permanent_12: Union[Optional[bool], UnsetType] = UNSET,
        limit_7: Union[Optional[int], UnsetType] = UNSET,
        page_9: Union[Optional[int], UnsetType] = UNSET,
        query_2: Union[Optional[BrandQueryInput], UnsetType] = UNSET,
        limit_8: Union[Optional[int], UnsetType] = UNSET,
        page_10: Union[Optional[int], UnsetType] = UNSET,
        query_3: Union[Optional[AssetQueryInput], UnsetType] = UNSET,
        limit_9: Union[Optional[int], UnsetType] = UNSET,
        page_11: Union[Optional[int], UnsetType] = UNSET,
        limit_10: Union[Optional[int], UnsetType] = UNSET,
        page_12: Union[Optional[int], UnsetType] = UNSET,
        query_4: Union[Optional[LibraryQueryInput], UnsetType] = UNSET,
        limit_11: Union[Optional[int], UnsetType] = UNSET,
        page_13: Union[Optional[int], UnsetType] = UNSET,
        query_5: Union[Optional[WorkspaceProjectQueryInput], UnsetType] = UNSET,
        limit_12: Union[Optional[int], UnsetType] = UNSET,
        page_14: Union[Optional[int], UnsetType] = UNSET,
        limit_13: Union[Optional[int], UnsetType] = UNSET,
        page_15: Union[Optional[int], UnsetType] = UNSET,
        language: Union[Optional[LanguageCode], UnsetType] = UNSET,
        limit_14: Union[Optional[int], UnsetType] = UNSET,
        page_16: Union[Optional[int], UnsetType] = UNSET,
        limit_15: Union[Optional[int], UnsetType] = UNSET,
        page_17: Union[Optional[int], UnsetType] = UNSET,
        query_6: Union[Optional[CreativeTemplateQueryInput], UnsetType] = UNSET,
        **kwargs: Any
    ) -> UpdateBrand:
        _query = gql(
            """
            mutation updateBrand($validityInDays: Int, $permanent: Boolean, $limit: Int, $page: Int, $limit1: Int, $page1: Int, $query: AssetCommentQueryInput, $limit2: Int, $page2: Int, $validityInDays1: Int, $permanent1: Boolean, $limit3: Int, $page3: Int, $validityInDays2: Int, $permanent2: Boolean, $width: Int, $height: Int, $width1: Int, $height1: Int, $page4: Int, $validityInDays3: Int, $permanent3: Boolean, $validityInDays4: Int, $permanent4: Boolean, $width2: Int, $height2: Int, $validityInDays5: Int, $permanent5: Boolean, $width3: Int, $height3: Int, $validityInDays6: Int, $permanent6: Boolean, $validityInDays7: Int, $permanent7: Boolean, $limit4: Int, $page5: Int, $limit5: Int, $page6: Int, $query1: AssetCommentQueryInput, $limit6: Int, $page7: Int, $validityInDays8: Int, $permanent8: Boolean, $width4: Int, $height4: Int, $width5: Int, $height5: Int, $page8: Int, $validityInDays9: Int, $permanent9: Boolean, $validityInDays10: Int, $permanent10: Boolean, $width6: Int, $height6: Int, $validityInDays11: Int, $permanent11: Boolean, $width7: Int, $height7: Int, $validityInDays12: Int, $permanent12: Boolean, $limit7: Int, $page9: Int, $query2: BrandQueryInput, $limit8: Int, $page10: Int, $query3: AssetQueryInput, $limit9: Int, $page11: Int, $limit10: Int, $page12: Int, $query4: LibraryQueryInput, $limit11: Int, $page13: Int, $query5: WorkspaceProjectQueryInput, $limit12: Int, $page14: Int, $limit13: Int, $page15: Int, $language: LanguageCode, $limit14: Int, $page16: Int, $key: String!, $limit15: Int, $page17: Int, $query6: CreativeTemplateQueryInput, $input: UpdateBrandInput!) {
              updateBrand(input: $input) {
                brand {
                  id
                  name
                  rgbaColor {
                    red
                    green
                    blue
                    alpha
                  }
                  avatar
                  slug
                  search(limit: $limit7, page: $page9, query: $query2) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      __typename
                      ... on Audio {
                        id
                        creator {
                          __typename
                          id
                          name
                        }
                        createdAt
                        modifier {
                          __typename
                          id
                          name
                        }
                        modifiedAt
                        title
                        description
                        alternativeText
                        isDecorative
                        attachments {
                          id
                          creator {
                            __typename
                            id
                            name
                          }
                          createdAt
                          modifier {
                            __typename
                            id
                            name
                          }
                          modifiedAt
                          name
                          filename
                          type
                          externalId
                          extension
                          size
                          downloadUrl(validityInDays: $validityInDays, permanent: $permanent)
                        }
                        externalId
                        tags {
                          value
                          source
                        }
                        externalProducts {
                          id
                          name
                          externalId
                          title
                        }
                        copyright {
                          status
                          notice
                        }
                        availability {
                          from
                          to
                        }
                        expiresAt
                        licenses {
                          id
                          title
                          license
                          addByDefault
                          requireConsensus
                        }
                        author
                        status
                        relatedAssets(limit: $limit, page: $page) {
                          total
                          page
                          limit
                          hasNextPage
                          items {
                            __typename
                            id
                            createdAt
                            modifiedAt
                            title
                            description
                            externalId
                            expiresAt
                            status
                          }
                        }
                        comments(limit: $limit1, page: $page1, query: $query) {
                          total
                          page
                          limit
                          hasNextPage
                          items {
                            id
                            createdAt
                            modifiedAt
                            content
                            isResolved
                          }
                        }
                        currentUserPermissions {
                          canEdit
                          canDelete
                          canDownload
                          canComment
                        }
                        customMetadata {
                          __typename
                          property {
                            id
                            createdAt
                            modifiedAt
                            name
                            helpText
                            isRequired
                            defaultValue
                          }
                        }
                        workflowTask {
                          id
                          assignedUsers {
                            __typename
                            id
                            name
                          }
                          asset {
                            __typename
                            id
                            createdAt
                            modifiedAt
                            title
                            description
                            externalId
                            expiresAt
                            status
                          }
                          title
                          description
                          status {
                            id
                            name
                            enterRules
                          }
                          checklistItem(limit: $limit2, page: $page2) {
                            total
                            page
                            limit
                            hasNextPage
                          }
                        }
                        variants(limit: $limit3, page: $page3) {
                          total
                          page
                          limit
                          hasNextPage
                          items {
                            key
                            filename
                            downloadUrl(validityInDays: $validityInDays1, permanent: $permanent1)
                          }
                        }
                        location {
                          brand {
                            id
                            name
                          }
                          library {
                            id
                            name
                          }
                          workspaceProject {
                            id
                            name
                          }
                          folder {
                            id
                            name
                          }
                        }
                        previewBackgroundColor {
                          red
                          green
                          blue
                          alpha
                        }
                        filename
                        size
                        extension
                        downloadUrl(validityInDays: $validityInDays2, permanent: $permanent2)
                        previewUrl(width: $width, height: $height)
                        thumbnailUrl
                        dynamicPreviewUrl
                      }
                      ... on Document {
                        id
                        createdAt
                        modifiedAt
                        title
                        description
                        alternativeText
                        isDecorative
                        externalId
                        expiresAt
                        author
                        status
                        filename
                        size
                        extension
                        previewUrl(width: $width1, height: $height1, page: $page4)
                        thumbnailUrl
                        dynamicPreviewUrl
                        downloadUrl(validityInDays: $validityInDays3, permanent: $permanent3)
                        focalPoint
                        width
                        height
                        pageCount
                      }
                      ... on EmbeddedContent {
                        id
                        createdAt
                        modifiedAt
                        title
                        description
                        alternativeText
                        isDecorative
                        externalId
                        expiresAt
                        author
                        status
                        previewUrl
                        thumbnailUrl
                      }
                      ... on File {
                        id
                        createdAt
                        modifiedAt
                        title
                        description
                        alternativeText
                        isDecorative
                        externalId
                        expiresAt
                        author
                        status
                        filename
                        size
                        extension
                        previewUrl
                        thumbnailUrl
                        dynamicPreviewUrl
                        downloadUrl(validityInDays: $validityInDays4, permanent: $permanent4)
                      }
                      ... on Image {
                        id
                        createdAt
                        modifiedAt
                        title
                        description
                        alternativeText
                        isDecorative
                        externalId
                        expiresAt
                        author
                        status
                        filename
                        size
                        extension
                        previewUrl(width: $width2, height: $height2)
                        thumbnailUrl
                        dynamicPreviewUrl
                        downloadUrl(validityInDays: $validityInDays5, permanent: $permanent5)
                        focalPoint
                        width
                        height
                      }
                      ... on Video {
                        id
                        createdAt
                        modifiedAt
                        title
                        description
                        alternativeText
                        isDecorative
                        externalId
                        expiresAt
                        author
                        status
                        filename
                        size
                        extension
                        previewUrl(width: $width3, height: $height3)
                        thumbnailUrl
                        dynamicPreviewUrl
                        downloadUrl(validityInDays: $validityInDays6, permanent: $permanent6)
                        width
                        height
                        duration
                        bitrate
                      }
                    }
                    edges {
                      title
                      node {
                        __typename
                        ... on Audio {
                          id
                          creator {
                            __typename
                            id
                            name
                          }
                          createdAt
                          modifier {
                            __typename
                            id
                            name
                          }
                          modifiedAt
                          title
                          description
                          alternativeText
                          isDecorative
                          attachments {
                            id
                            createdAt
                            modifiedAt
                            name
                            filename
                            type
                            externalId
                            extension
                            size
                            downloadUrl(validityInDays: $validityInDays7, permanent: $permanent7)
                          }
                          externalId
                          tags {
                            value
                            source
                          }
                          externalProducts {
                            id
                            name
                            externalId
                            title
                          }
                          copyright {
                            status
                            notice
                          }
                          availability {
                            from
                            to
                          }
                          expiresAt
                          licenses {
                            id
                            title
                            license
                            addByDefault
                            requireConsensus
                          }
                          author
                          status
                          relatedAssets(limit: $limit4, page: $page5) {
                            total
                            page
                            limit
                            hasNextPage
                          }
                          comments(limit: $limit5, page: $page6, query: $query1) {
                            total
                            page
                            limit
                            hasNextPage
                          }
                          currentUserPermissions {
                            canEdit
                            canDelete
                            canDownload
                            canComment
                          }
                          workflowTask {
                            id
                            title
                            description
                          }
                          variants(limit: $limit6, page: $page7) {
                            total
                            page
                            limit
                            hasNextPage
                          }
                          previewBackgroundColor {
                            red
                            green
                            blue
                            alpha
                          }
                          filename
                          size
                          extension
                          downloadUrl(validityInDays: $validityInDays8, permanent: $permanent8)
                          previewUrl(width: $width4, height: $height4)
                          thumbnailUrl
                          dynamicPreviewUrl
                        }
                        ... on Document {
                          id
                          createdAt
                          modifiedAt
                          title
                          description
                          alternativeText
                          isDecorative
                          externalId
                          expiresAt
                          author
                          status
                          filename
                          size
                          extension
                          previewUrl(width: $width5, height: $height5, page: $page8)
                          thumbnailUrl
                          dynamicPreviewUrl
                          downloadUrl(validityInDays: $validityInDays9, permanent: $permanent9)
                          focalPoint
                          width
                          height
                          pageCount
                        }
                        ... on EmbeddedContent {
                          id
                          createdAt
                          modifiedAt
                          title
                          description
                          alternativeText
                          isDecorative
                          externalId
                          expiresAt
                          author
                          status
                          previewUrl
                          thumbnailUrl
                        }
                        ... on File {
                          id
                          createdAt
                          modifiedAt
                          title
                          description
                          alternativeText
                          isDecorative
                          externalId
                          expiresAt
                          author
                          status
                          filename
                          size
                          extension
                          previewUrl
                          thumbnailUrl
                          dynamicPreviewUrl
                          downloadUrl(validityInDays: $validityInDays10, permanent: $permanent10)
                        }
                        ... on Image {
                          id
                          createdAt
                          modifiedAt
                          title
                          description
                          alternativeText
                          isDecorative
                          externalId
                          expiresAt
                          author
                          status
                          filename
                          size
                          extension
                          previewUrl(width: $width6, height: $height6)
                          thumbnailUrl
                          dynamicPreviewUrl
                          downloadUrl(validityInDays: $validityInDays11, permanent: $permanent11)
                          focalPoint
                          width
                          height
                        }
                        ... on Video {
                          id
                          createdAt
                          modifiedAt
                          title
                          description
                          alternativeText
                          isDecorative
                          externalId
                          expiresAt
                          author
                          status
                          filename
                          size
                          extension
                          previewUrl(width: $width7, height: $height7)
                          thumbnailUrl
                          dynamicPreviewUrl
                          downloadUrl(validityInDays: $validityInDays12, permanent: $permanent12)
                          width
                          height
                          duration
                          bitrate
                        }
                      }
                    }
                  }
                  libraries(limit: $limit10, page: $page12, query: $query4) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      __typename
                      id
                      name
                      color {
                        red
                        green
                        blue
                        alpha
                      }
                      assets(limit: $limit8, page: $page10, query: $query3) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      collections(limit: $limit9, page: $page11) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      workflow {
                        id
                      }
                      customMetadataProperties {
                        id
                        createdAt
                        modifiedAt
                        name
                        helpText
                        isRequired
                        defaultValue
                      }
                      assetSubmissionRequests {
                        id
                        createdAt
                        modifiedAt
                        projectId
                        title
                        description
                        configuration
                      }
                    }
                  }
                  workspaceProjects(limit: $limit11, page: $page13, query: $query5) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      id
                      name
                      isArchived
                    }
                  }
                  guidelines(language: $language, limit: $limit14, page: $page16) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      id
                      name
                      url
                      defaultLanguage {
                        code
                        name
                      }
                      translationLanguages {
                        code
                        name
                      }
                      libraryPages(limit: $limit12, page: $page14) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      pages(limit: $limit13, page: $page15) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                    }
                  }
                  customMetadataProperties {
                    id
                    creator {
                      __typename
                      id
                      name
                    }
                    createdAt
                    modifier {
                      __typename
                      id
                      name
                    }
                    modifiedAt
                    name
                    type {
                      __typename
                      name
                    }
                    helpText
                    isRequired
                    defaultValue
                  }
                  creativeTemplates(limit: $limit15, page: $page17, query: $query6) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      id
                      brandId
                      name
                      description
                      variable(key: $key) {
                        key
                        name
                        description
                        type
                        value
                        connectionCount
                      }
                      variables {
                        key
                        name
                        description
                        type
                        value
                        connectionCount
                      }
                      assetId
                    }
                  }
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {
            "validityInDays": validity_in_days,
            "permanent": permanent,
            "limit": limit,
            "page": page,
            "limit1": limit_1,
            "page1": page_1,
            "query": query,
            "limit2": limit_2,
            "page2": page_2,
            "validityInDays1": validity_in_days_1,
            "permanent1": permanent_1,
            "limit3": limit_3,
            "page3": page_3,
            "validityInDays2": validity_in_days_2,
            "permanent2": permanent_2,
            "width": width,
            "height": height,
            "width1": width_1,
            "height1": height_1,
            "page4": page_4,
            "validityInDays3": validity_in_days_3,
            "permanent3": permanent_3,
            "validityInDays4": validity_in_days_4,
            "permanent4": permanent_4,
            "width2": width_2,
            "height2": height_2,
            "validityInDays5": validity_in_days_5,
            "permanent5": permanent_5,
            "width3": width_3,
            "height3": height_3,
            "validityInDays6": validity_in_days_6,
            "permanent6": permanent_6,
            "validityInDays7": validity_in_days_7,
            "permanent7": permanent_7,
            "limit4": limit_4,
            "page5": page_5,
            "limit5": limit_5,
            "page6": page_6,
            "query1": query_1,
            "limit6": limit_6,
            "page7": page_7,
            "validityInDays8": validity_in_days_8,
            "permanent8": permanent_8,
            "width4": width_4,
            "height4": height_4,
            "width5": width_5,
            "height5": height_5,
            "page8": page_8,
            "validityInDays9": validity_in_days_9,
            "permanent9": permanent_9,
            "validityInDays10": validity_in_days_10,
            "permanent10": permanent_10,
            "width6": width_6,
            "height6": height_6,
            "validityInDays11": validity_in_days_11,
            "permanent11": permanent_11,
            "width7": width_7,
            "height7": height_7,
            "validityInDays12": validity_in_days_12,
            "permanent12": permanent_12,
            "limit7": limit_7,
            "page9": page_9,
            "query2": query_2,
            "limit8": limit_8,
            "page10": page_10,
            "query3": query_3,
            "limit9": limit_9,
            "page11": page_11,
            "limit10": limit_10,
            "page12": page_12,
            "query4": query_4,
            "limit11": limit_11,
            "page13": page_13,
            "query5": query_5,
            "limit12": limit_12,
            "page14": page_14,
            "limit13": limit_13,
            "page15": page_15,
            "language": language,
            "limit14": limit_14,
            "page16": page_16,
            "key": key,
            "limit15": limit_15,
            "page17": page_17,
            "query6": query_6,
            "input": input,
        }
        response = self.execute(
            query=_query, operation_name="updateBrand", variables=variables, **kwargs
        )
        data = self.get_data(response)
        return UpdateBrand.model_validate(data)

    def update_collection(
        self,
        input: UpdateCollectionInput,
        validity_in_days: Union[Optional[int], UnsetType] = UNSET,
        permanent: Union[Optional[bool], UnsetType] = UNSET,
        limit: Union[Optional[int], UnsetType] = UNSET,
        page: Union[Optional[int], UnsetType] = UNSET,
        limit_1: Union[Optional[int], UnsetType] = UNSET,
        page_1: Union[Optional[int], UnsetType] = UNSET,
        query: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_2: Union[Optional[int], UnsetType] = UNSET,
        page_2: Union[Optional[int], UnsetType] = UNSET,
        limit_3: Union[Optional[int], UnsetType] = UNSET,
        page_3: Union[Optional[int], UnsetType] = UNSET,
        **kwargs: Any
    ) -> UpdateCollection:
        _query = gql(
            """
            mutation updateCollection($validityInDays: Int, $permanent: Boolean, $limit: Int, $page: Int, $limit1: Int, $page1: Int, $query: AssetCommentQueryInput, $limit2: Int, $page2: Int, $limit3: Int, $page3: Int, $input: UpdateCollectionInput!) {
              updateCollection(input: $input) {
                collection {
                  id
                  name
                  assets(limit: $limit3, page: $page3) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      __typename
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      title
                      description
                      attachments {
                        id
                        createdAt
                        modifiedAt
                        name
                        filename
                        type
                        externalId
                        extension
                        size
                        downloadUrl(validityInDays: $validityInDays, permanent: $permanent)
                      }
                      externalId
                      tags {
                        value
                        source
                      }
                      copyright {
                        status
                        notice
                      }
                      availability {
                        from
                        to
                      }
                      expiresAt
                      licenses {
                        id
                        title
                        license
                        addByDefault
                        requireConsensus
                      }
                      status
                      relatedAssets(limit: $limit, page: $page) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      comments(limit: $limit1, page: $page1, query: $query) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      currentUserPermissions {
                        canEdit
                        canDelete
                        canDownload
                        canComment
                      }
                      workflowTask {
                        id
                        title
                        description
                      }
                      variants(limit: $limit2, page: $page2) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      previewBackgroundColor {
                        red
                        green
                        blue
                        alpha
                      }
                    }
                  }
                  currentUserPermissions {
                    canAddAssets
                    canRemoveAssets
                  }
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {
            "validityInDays": validity_in_days,
            "permanent": permanent,
            "limit": limit,
            "page": page,
            "limit1": limit_1,
            "page1": page_1,
            "query": query,
            "limit2": limit_2,
            "page2": page_2,
            "limit3": limit_3,
            "page3": page_3,
            "input": input,
        }
        response = self.execute(
            query=_query,
            operation_name="updateCollection",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return UpdateCollection.model_validate(data)

    def update_custom_metadata_property(
        self, input: UpdateCustomMetadataPropertyInput, **kwargs: Any
    ) -> UpdateCustomMetadataProperty:
        query = gql(
            """
            mutation updateCustomMetadataProperty($input: UpdateCustomMetadataPropertyInput!) {
              updateCustomMetadataProperty(input: $input) {
                property {
                  id
                  creator {
                    __typename
                    id
                    name
                  }
                  createdAt
                  modifier {
                    __typename
                    id
                    name
                  }
                  modifiedAt
                  name
                  type {
                    __typename
                    name
                  }
                  helpText
                  isRequired
                  defaultValue
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {"input": input}
        response = self.execute(
            query=query,
            operation_name="updateCustomMetadataProperty",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return UpdateCustomMetadataProperty.model_validate(data)

    def update_folder(
        self,
        input: UpdateFolderInput,
        limit: Union[Optional[int], UnsetType] = UNSET,
        page: Union[Optional[int], UnsetType] = UNSET,
        limit_1: Union[Optional[int], UnsetType] = UNSET,
        page_1: Union[Optional[int], UnsetType] = UNSET,
        query: Union[Optional[FolderAssetQueryInput], UnsetType] = UNSET,
        limit_2: Union[Optional[int], UnsetType] = UNSET,
        page_2: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days: Union[Optional[int], UnsetType] = UNSET,
        permanent: Union[Optional[bool], UnsetType] = UNSET,
        limit_3: Union[Optional[int], UnsetType] = UNSET,
        page_3: Union[Optional[int], UnsetType] = UNSET,
        limit_4: Union[Optional[int], UnsetType] = UNSET,
        page_4: Union[Optional[int], UnsetType] = UNSET,
        query_1: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_5: Union[Optional[int], UnsetType] = UNSET,
        page_5: Union[Optional[int], UnsetType] = UNSET,
        limit_6: Union[Optional[int], UnsetType] = UNSET,
        page_6: Union[Optional[int], UnsetType] = UNSET,
        query_2: Union[Optional[FolderAssetQueryInput], UnsetType] = UNSET,
        **kwargs: Any
    ) -> UpdateFolder:
        _query = gql(
            """
            mutation updateFolder($limit: Int, $page: Int, $limit1: Int, $page1: Int, $query: FolderAssetQueryInput, $limit2: Int, $page2: Int, $validityInDays: Int, $permanent: Boolean, $limit3: Int, $page3: Int, $limit4: Int, $page4: Int, $query1: AssetCommentQueryInput, $limit5: Int, $page5: Int, $limit6: Int, $page6: Int, $query2: FolderAssetQueryInput, $input: UpdateFolderInput!) {
              updateFolder(input: $input) {
                folder {
                  __typename
                  id
                  name
                  creator {
                    __typename
                    id
                    name
                  }
                  createdAt
                  modifier {
                    __typename
                    id
                    name
                  }
                  modifiedAt
                  breadcrumbs {
                    id
                    name
                  }
                  folders(limit: $limit2, page: $page2) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      __typename
                      id
                      name
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      breadcrumbs {
                        id
                        name
                      }
                      folders(limit: $limit, page: $page) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      assets(limit: $limit1, page: $page1, query: $query) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                    }
                  }
                  assets(limit: $limit6, page: $page6, query: $query2) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      __typename
                      id
                      createdAt
                      modifiedAt
                      title
                      description
                      attachments {
                        id
                        createdAt
                        modifiedAt
                        name
                        filename
                        type
                        externalId
                        extension
                        size
                        downloadUrl(validityInDays: $validityInDays, permanent: $permanent)
                      }
                      externalId
                      tags {
                        value
                        source
                      }
                      copyright {
                        status
                        notice
                      }
                      availability {
                        from
                        to
                      }
                      expiresAt
                      licenses {
                        id
                        title
                        license
                        addByDefault
                        requireConsensus
                      }
                      status
                      relatedAssets(limit: $limit3, page: $page3) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      comments(limit: $limit4, page: $page4, query: $query1) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      currentUserPermissions {
                        canEdit
                        canDelete
                        canDownload
                        canComment
                      }
                      workflowTask {
                        id
                        title
                        description
                      }
                      variants(limit: $limit5, page: $page5) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      previewBackgroundColor {
                        red
                        green
                        blue
                        alpha
                      }
                    }
                  }
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {
            "limit": limit,
            "page": page,
            "limit1": limit_1,
            "page1": page_1,
            "query": query,
            "limit2": limit_2,
            "page2": page_2,
            "validityInDays": validity_in_days,
            "permanent": permanent,
            "limit3": limit_3,
            "page3": page_3,
            "limit4": limit_4,
            "page4": page_4,
            "query1": query_1,
            "limit5": limit_5,
            "page5": page_5,
            "limit6": limit_6,
            "page6": page_6,
            "query2": query_2,
            "input": input,
        }
        response = self.execute(
            query=_query, operation_name="updateFolder", variables=variables, **kwargs
        )
        data = self.get_data(response)
        return UpdateFolder.model_validate(data)

    def update_workflow_checklist_item(
        self, input: UpdateWorkflowChecklistItemInput, **kwargs: Any
    ) -> UpdateWorkflowChecklistItem:
        query = gql(
            """
            mutation updateWorkflowChecklistItem($input: UpdateWorkflowChecklistItemInput!) {
              updateWorkflowChecklistItem(input: $input) {
                checklistItem {
                  id
                  content
                  assignedUser {
                    __typename
                    id
                    name
                  }
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {"input": input}
        response = self.execute(
            query=query,
            operation_name="updateWorkflowChecklistItem",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return UpdateWorkflowChecklistItem.model_validate(data)

    def update_workflow_checklist_preset(
        self, input: UpdateWorkflowChecklistPresetInput, **kwargs: Any
    ) -> UpdateWorkflowChecklistPreset:
        query = gql(
            """
            mutation updateWorkflowChecklistPreset($input: UpdateWorkflowChecklistPresetInput!) {
              updateWorkflowChecklistPreset(input: $input) {
                checklistPreset {
                  id
                  content
                  assignedUser {
                    __typename
                    id
                    name
                  }
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {"input": input}
        response = self.execute(
            query=query,
            operation_name="updateWorkflowChecklistPreset",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return UpdateWorkflowChecklistPreset.model_validate(data)

    def update_workflow_status(
        self,
        input: UpdateWorkflowStatusInput,
        limit: Union[Optional[int], UnsetType] = UNSET,
        page: Union[Optional[int], UnsetType] = UNSET,
        limit_1: Union[Optional[int], UnsetType] = UNSET,
        page_1: Union[Optional[int], UnsetType] = UNSET,
        **kwargs: Any
    ) -> UpdateWorkflowStatus:
        query = gql(
            """
            mutation updateWorkflowStatus($limit: Int, $page: Int, $limit1: Int, $page1: Int, $input: UpdateWorkflowStatusInput!) {
              updateWorkflowStatus(input: $input) {
                workflowStatus {
                  id
                  name
                  color {
                    red
                    green
                    blue
                    alpha
                  }
                  assignedUsers {
                    __typename
                    id
                    name
                  }
                  checklistPresets {
                    id
                    content
                    assignedUser {
                      __typename
                      id
                      name
                    }
                  }
                  tasks(limit: $limit1, page: $page1) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      id
                      assignedUsers {
                        __typename
                        id
                        name
                      }
                      asset {
                        __typename
                        id
                        createdAt
                        modifiedAt
                        title
                        description
                        externalId
                        expiresAt
                        status
                      }
                      title
                      description
                      status {
                        id
                        name
                        enterRules
                      }
                      checklistItem(limit: $limit, page: $page) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                    }
                  }
                  enterRules
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {
            "limit": limit,
            "page": page,
            "limit1": limit_1,
            "page1": page_1,
            "input": input,
        }
        response = self.execute(
            query=query,
            operation_name="updateWorkflowStatus",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return UpdateWorkflowStatus.model_validate(data)

    def update_workflow_task(
        self,
        input: UpdateWorkflowTaskInput,
        validity_in_days: Union[Optional[int], UnsetType] = UNSET,
        permanent: Union[Optional[bool], UnsetType] = UNSET,
        limit: Union[Optional[int], UnsetType] = UNSET,
        page: Union[Optional[int], UnsetType] = UNSET,
        limit_1: Union[Optional[int], UnsetType] = UNSET,
        page_1: Union[Optional[int], UnsetType] = UNSET,
        query: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_2: Union[Optional[int], UnsetType] = UNSET,
        page_2: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_1: Union[Optional[int], UnsetType] = UNSET,
        permanent_1: Union[Optional[bool], UnsetType] = UNSET,
        limit_3: Union[Optional[int], UnsetType] = UNSET,
        page_3: Union[Optional[int], UnsetType] = UNSET,
        **kwargs: Any
    ) -> UpdateWorkflowTask:
        _query = gql(
            """
            mutation updateWorkflowTask($validityInDays: Int, $permanent: Boolean, $limit: Int, $page: Int, $limit1: Int, $page1: Int, $query: AssetCommentQueryInput, $limit2: Int, $page2: Int, $validityInDays1: Int, $permanent1: Boolean, $limit3: Int, $page3: Int, $input: UpdateWorkflowTaskInput!) {
              updateWorkflowTask(input: $input) {
                workflowTask {
                  id
                  assignedUsers {
                    __typename
                    id
                    name
                  }
                  asset {
                    __typename
                    id
                    creator {
                      __typename
                      id
                      name
                    }
                    createdAt
                    modifier {
                      __typename
                      id
                      name
                    }
                    modifiedAt
                    title
                    description
                    attachments {
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      name
                      filename
                      type
                      externalId
                      extension
                      size
                      downloadUrl(validityInDays: $validityInDays, permanent: $permanent)
                    }
                    externalId
                    tags {
                      value
                      source
                    }
                    copyright {
                      status
                      notice
                    }
                    availability {
                      from
                      to
                    }
                    expiresAt
                    licenses {
                      id
                      title
                      license
                      addByDefault
                      requireConsensus
                    }
                    status
                    relatedAssets(limit: $limit, page: $page) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        __typename
                        id
                        createdAt
                        modifiedAt
                        title
                        description
                        externalId
                        expiresAt
                        status
                      }
                    }
                    comments(limit: $limit1, page: $page1, query: $query) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        id
                        createdAt
                        modifiedAt
                        content
                        isResolved
                      }
                    }
                    currentUserPermissions {
                      canEdit
                      canDelete
                      canDownload
                      canComment
                    }
                    customMetadata {
                      __typename
                      property {
                        id
                        createdAt
                        modifiedAt
                        name
                        helpText
                        isRequired
                        defaultValue
                      }
                    }
                    workflowTask {
                      id
                      title
                      description
                      status {
                        id
                        name
                        enterRules
                      }
                      checklistItem(limit: $limit2, page: $page2) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                    }
                    variants(limit: $limit3, page: $page3) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        key
                        filename
                        downloadUrl(validityInDays: $validityInDays1, permanent: $permanent1)
                      }
                    }
                    location {
                      brand {
                        id
                        name
                      }
                      library {
                        id
                        name
                      }
                      workspaceProject {
                        id
                        name
                      }
                      folder {
                        id
                        name
                      }
                    }
                    previewBackgroundColor {
                      red
                      green
                      blue
                      alpha
                    }
                  }
                  title
                  description
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {
            "validityInDays": validity_in_days,
            "permanent": permanent,
            "limit": limit,
            "page": page,
            "limit1": limit_1,
            "page1": page_1,
            "query": query,
            "limit2": limit_2,
            "page2": page_2,
            "validityInDays1": validity_in_days_1,
            "permanent1": permanent_1,
            "limit3": limit_3,
            "page3": page_3,
            "input": input,
        }
        response = self.execute(
            query=_query,
            operation_name="updateWorkflowTask",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return UpdateWorkflowTask.model_validate(data)

    def upload_file(self, input: UploadFileInput, **kwargs: Any) -> UploadFile:
        query = gql(
            """
            mutation uploadFile($input: UploadFileInput!) {
              uploadFile(input: $input) {
                id
                urls
              }
            }
            """
        )
        variables: Dict[str, object] = {"input": input}
        response = self.execute(
            query=query, operation_name="uploadFile", variables=variables, **kwargs
        )
        data = self.get_data(response)
        return UploadFile.model_validate(data)

    def account(
        self,
        limit: Union[Optional[int], UnsetType] = UNSET,
        page: Union[Optional[int], UnsetType] = UNSET,
        limit_1: Union[Optional[int], UnsetType] = UNSET,
        page_1: Union[Optional[int], UnsetType] = UNSET,
        limit_2: Union[Optional[int], UnsetType] = UNSET,
        page_2: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days: Union[Optional[int], UnsetType] = UNSET,
        permanent: Union[Optional[bool], UnsetType] = UNSET,
        limit_3: Union[Optional[int], UnsetType] = UNSET,
        page_3: Union[Optional[int], UnsetType] = UNSET,
        query: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_4: Union[Optional[int], UnsetType] = UNSET,
        page_4: Union[Optional[int], UnsetType] = UNSET,
        limit_5: Union[Optional[int], UnsetType] = UNSET,
        page_5: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_1: Union[Optional[int], UnsetType] = UNSET,
        permanent_1: Union[Optional[bool], UnsetType] = UNSET,
        width: Union[Optional[int], UnsetType] = UNSET,
        height: Union[Optional[int], UnsetType] = UNSET,
        width_1: Union[Optional[int], UnsetType] = UNSET,
        height_1: Union[Optional[int], UnsetType] = UNSET,
        page_6: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_2: Union[Optional[int], UnsetType] = UNSET,
        permanent_2: Union[Optional[bool], UnsetType] = UNSET,
        validity_in_days_3: Union[Optional[int], UnsetType] = UNSET,
        permanent_3: Union[Optional[bool], UnsetType] = UNSET,
        width_2: Union[Optional[int], UnsetType] = UNSET,
        height_2: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_4: Union[Optional[int], UnsetType] = UNSET,
        permanent_4: Union[Optional[bool], UnsetType] = UNSET,
        width_3: Union[Optional[int], UnsetType] = UNSET,
        height_3: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_5: Union[Optional[int], UnsetType] = UNSET,
        permanent_5: Union[Optional[bool], UnsetType] = UNSET,
        limit_6: Union[Optional[int], UnsetType] = UNSET,
        page_7: Union[Optional[int], UnsetType] = UNSET,
        query_1: Union[Optional[AccountQueryInput], UnsetType] = UNSET,
        **kwargs: Any
    ) -> Account:
        _query = gql(
            """
            query account($limit: Int, $page: Int, $limit1: Int, $page1: Int, $limit2: Int, $page2: Int, $validityInDays: Int, $permanent: Boolean, $limit3: Int, $page3: Int, $query: AssetCommentQueryInput, $limit4: Int, $page4: Int, $limit5: Int, $page5: Int, $validityInDays1: Int, $permanent1: Boolean, $width: Int, $height: Int, $width1: Int, $height1: Int, $page6: Int, $validityInDays2: Int, $permanent2: Boolean, $validityInDays3: Int, $permanent3: Boolean, $width2: Int, $height2: Int, $validityInDays4: Int, $permanent4: Boolean, $width3: Int, $height3: Int, $validityInDays5: Int, $permanent5: Boolean, $limit6: Int, $page7: Int, $query1: AccountQueryInput) {
              account {
                id
                users(limit: $limit, page: $page) {
                  total
                  page
                  limit
                  hasNextPage
                  items {
                    __typename
                    id
                    name
                  }
                }
                userGroups(limit: $limit2, page: $page2) {
                  total
                  page
                  limit
                  hasNextPage
                  items {
                    id
                    name
                    users(limit: $limit1, page: $page1) {
                      total
                      page
                      limit
                      hasNextPage
                    }
                  }
                }
                search(limit: $limit6, page: $page7, query: $query1) {
                  total
                  page
                  limit
                  hasNextPage
                  items {
                    __typename
                    ... on Audio {
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      title
                      description
                      alternativeText
                      isDecorative
                      attachments {
                        id
                        creator {
                          __typename
                          id
                          name
                        }
                        createdAt
                        modifier {
                          __typename
                          id
                          name
                        }
                        modifiedAt
                        name
                        filename
                        type
                        externalId
                        extension
                        size
                        downloadUrl(validityInDays: $validityInDays, permanent: $permanent)
                      }
                      externalId
                      tags {
                        value
                        source
                      }
                      externalProducts {
                        id
                        name
                        externalId
                        title
                      }
                      copyright {
                        status
                        notice
                      }
                      availability {
                        from
                        to
                      }
                      expiresAt
                      licenses {
                        id
                        title
                        license
                        addByDefault
                        requireConsensus
                      }
                      author
                      status
                      relatedAssets(limit: $limit5, page: $page5) {
                        total
                        page
                        limit
                        hasNextPage
                        items {
                          __typename
                          id
                          createdAt
                          modifiedAt
                          title
                          description
                          externalId
                          expiresAt
                          status
                          comments(limit: $limit3, page: $page3, query: $query) {
                            total
                            page
                            limit
                            hasNextPage
                          }
                          currentUserPermissions {
                            canEdit
                            canDelete
                            canDownload
                            canComment
                          }
                          workflowTask {
                            id
                            title
                            description
                          }
                          variants(limit: $limit4, page: $page4) {
                            total
                            page
                            limit
                            hasNextPage
                          }
                          previewBackgroundColor {
                            red
                            green
                            blue
                            alpha
                          }
                        }
                      }
                      filename
                      size
                      extension
                      downloadUrl(validityInDays: $validityInDays1, permanent: $permanent1)
                      previewUrl(width: $width, height: $height)
                      thumbnailUrl
                      dynamicPreviewUrl
                    }
                    ... on Document {
                      id
                      createdAt
                      modifiedAt
                      title
                      description
                      alternativeText
                      isDecorative
                      externalId
                      expiresAt
                      author
                      status
                      filename
                      size
                      extension
                      previewUrl(width: $width1, height: $height1, page: $page6)
                      thumbnailUrl
                      dynamicPreviewUrl
                      downloadUrl(validityInDays: $validityInDays2, permanent: $permanent2)
                      focalPoint
                      width
                      height
                      pageCount
                    }
                    ... on EmbeddedContent {
                      id
                      createdAt
                      modifiedAt
                      title
                      description
                      alternativeText
                      isDecorative
                      externalId
                      expiresAt
                      author
                      status
                      previewUrl
                      thumbnailUrl
                    }
                    ... on File {
                      id
                      createdAt
                      modifiedAt
                      title
                      description
                      alternativeText
                      isDecorative
                      externalId
                      expiresAt
                      author
                      status
                      filename
                      size
                      extension
                      previewUrl
                      thumbnailUrl
                      dynamicPreviewUrl
                      downloadUrl(validityInDays: $validityInDays3, permanent: $permanent3)
                    }
                    ... on Image {
                      id
                      createdAt
                      modifiedAt
                      title
                      description
                      alternativeText
                      isDecorative
                      externalId
                      expiresAt
                      author
                      status
                      filename
                      size
                      extension
                      previewUrl(width: $width2, height: $height2)
                      thumbnailUrl
                      dynamicPreviewUrl
                      downloadUrl(validityInDays: $validityInDays4, permanent: $permanent4)
                      focalPoint
                      width
                      height
                    }
                    ... on Video {
                      id
                      createdAt
                      modifiedAt
                      title
                      description
                      alternativeText
                      isDecorative
                      externalId
                      expiresAt
                      author
                      status
                      filename
                      size
                      extension
                      previewUrl(width: $width3, height: $height3)
                      thumbnailUrl
                      dynamicPreviewUrl
                      downloadUrl(validityInDays: $validityInDays5, permanent: $permanent5)
                      width
                      height
                      duration
                      bitrate
                    }
                  }
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {
            "limit": limit,
            "page": page,
            "limit1": limit_1,
            "page1": page_1,
            "limit2": limit_2,
            "page2": page_2,
            "validityInDays": validity_in_days,
            "permanent": permanent,
            "limit3": limit_3,
            "page3": page_3,
            "query": query,
            "limit4": limit_4,
            "page4": page_4,
            "limit5": limit_5,
            "page5": page_5,
            "validityInDays1": validity_in_days_1,
            "permanent1": permanent_1,
            "width": width,
            "height": height,
            "width1": width_1,
            "height1": height_1,
            "page6": page_6,
            "validityInDays2": validity_in_days_2,
            "permanent2": permanent_2,
            "validityInDays3": validity_in_days_3,
            "permanent3": permanent_3,
            "width2": width_2,
            "height2": height_2,
            "validityInDays4": validity_in_days_4,
            "permanent4": permanent_4,
            "width3": width_3,
            "height3": height_3,
            "validityInDays5": validity_in_days_5,
            "permanent5": permanent_5,
            "limit6": limit_6,
            "page7": page_7,
            "query1": query_1,
        }
        response = self.execute(
            query=_query, operation_name="account", variables=variables, **kwargs
        )
        data = self.get_data(response)
        return Account.model_validate(data)

    def asset(
        self,
        id: str,
        validity_in_days: Union[Optional[int], UnsetType] = UNSET,
        permanent: Union[Optional[bool], UnsetType] = UNSET,
        validity_in_days_1: Union[Optional[int], UnsetType] = UNSET,
        permanent_1: Union[Optional[bool], UnsetType] = UNSET,
        limit: Union[Optional[int], UnsetType] = UNSET,
        page: Union[Optional[int], UnsetType] = UNSET,
        limit_1: Union[Optional[int], UnsetType] = UNSET,
        page_1: Union[Optional[int], UnsetType] = UNSET,
        query: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_2: Union[Optional[int], UnsetType] = UNSET,
        page_2: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_2: Union[Optional[int], UnsetType] = UNSET,
        permanent_2: Union[Optional[bool], UnsetType] = UNSET,
        limit_3: Union[Optional[int], UnsetType] = UNSET,
        page_3: Union[Optional[int], UnsetType] = UNSET,
        limit_4: Union[Optional[int], UnsetType] = UNSET,
        page_4: Union[Optional[int], UnsetType] = UNSET,
        limit_5: Union[Optional[int], UnsetType] = UNSET,
        page_5: Union[Optional[int], UnsetType] = UNSET,
        query_1: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_6: Union[Optional[int], UnsetType] = UNSET,
        page_6: Union[Optional[int], UnsetType] = UNSET,
        **kwargs: Any
    ) -> Asset:
        _query = gql(
            """
            query asset($validityInDays: Int, $permanent: Boolean, $validityInDays1: Int, $permanent1: Boolean, $limit: Int, $page: Int, $limit1: Int, $page1: Int, $query: AssetCommentQueryInput, $limit2: Int, $page2: Int, $validityInDays2: Int, $permanent2: Boolean, $limit3: Int, $page3: Int, $limit4: Int, $page4: Int, $limit5: Int, $page5: Int, $query1: AssetCommentQueryInput, $limit6: Int, $page6: Int, $id: ID!) {
              asset(id: $id) {
                __typename
                id
                creator {
                  __typename
                  id
                  name
                }
                createdAt
                modifier {
                  __typename
                  id
                  name
                }
                modifiedAt
                title
                description
                attachments {
                  id
                  creator {
                    __typename
                    id
                    name
                  }
                  createdAt
                  modifier {
                    __typename
                    id
                    name
                  }
                  modifiedAt
                  name
                  filename
                  type
                  externalId
                  extension
                  size
                  downloadUrl(validityInDays: $validityInDays, permanent: $permanent)
                }
                externalId
                tags {
                  value
                  source
                }
                copyright {
                  status
                  notice
                }
                availability {
                  from
                  to
                }
                expiresAt
                licenses {
                  id
                  title
                  license
                  addByDefault
                  requireConsensus
                }
                status
                relatedAssets(limit: $limit4, page: $page4) {
                  total
                  page
                  limit
                  hasNextPage
                  items {
                    __typename
                    id
                    creator {
                      __typename
                      id
                      name
                    }
                    createdAt
                    modifier {
                      __typename
                      id
                      name
                    }
                    modifiedAt
                    title
                    description
                    attachments {
                      id
                      createdAt
                      modifiedAt
                      name
                      filename
                      type
                      externalId
                      extension
                      size
                      downloadUrl(validityInDays: $validityInDays1, permanent: $permanent1)
                    }
                    externalId
                    tags {
                      value
                      source
                    }
                    copyright {
                      status
                      notice
                    }
                    availability {
                      from
                      to
                    }
                    expiresAt
                    licenses {
                      id
                      title
                      license
                      addByDefault
                      requireConsensus
                    }
                    status
                    relatedAssets(limit: $limit, page: $page) {
                      total
                      page
                      limit
                      hasNextPage
                    }
                    comments(limit: $limit1, page: $page1, query: $query) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        id
                        createdAt
                        modifiedAt
                        content
                        isResolved
                      }
                    }
                    currentUserPermissions {
                      canEdit
                      canDelete
                      canDownload
                      canComment
                    }
                    customMetadata {
                      __typename
                      property {
                        id
                        createdAt
                        modifiedAt
                        name
                        helpText
                        isRequired
                        defaultValue
                      }
                    }
                    workflowTask {
                      id
                      assignedUsers {
                        __typename
                        id
                        name
                      }
                      asset {
                        __typename
                        id
                        createdAt
                        modifiedAt
                        title
                        description
                        externalId
                        expiresAt
                        status
                      }
                      title
                      description
                      status {
                        id
                        name
                        enterRules
                      }
                      checklistItem(limit: $limit2, page: $page2) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                    }
                    variants(limit: $limit3, page: $page3) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        key
                        filename
                        downloadUrl(validityInDays: $validityInDays2, permanent: $permanent2)
                      }
                    }
                    location {
                      brand {
                        id
                        name
                      }
                      library {
                        id
                        name
                      }
                      workspaceProject {
                        id
                        name
                      }
                      folder {
                        id
                        name
                      }
                    }
                    previewBackgroundColor {
                      red
                      green
                      blue
                      alpha
                    }
                  }
                }
                comments(limit: $limit5, page: $page5, query: $query1) {
                  total
                  page
                  limit
                  hasNextPage
                }
                currentUserPermissions {
                  canEdit
                  canDelete
                  canDownload
                  canComment
                }
                workflowTask {
                  id
                  title
                  description
                }
                variants(limit: $limit6, page: $page6) {
                  total
                  page
                  limit
                  hasNextPage
                }
                previewBackgroundColor {
                  red
                  green
                  blue
                  alpha
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {
            "validityInDays": validity_in_days,
            "permanent": permanent,
            "validityInDays1": validity_in_days_1,
            "permanent1": permanent_1,
            "limit": limit,
            "page": page,
            "limit1": limit_1,
            "page1": page_1,
            "query": query,
            "limit2": limit_2,
            "page2": page_2,
            "validityInDays2": validity_in_days_2,
            "permanent2": permanent_2,
            "limit3": limit_3,
            "page3": page_3,
            "limit4": limit_4,
            "page4": page_4,
            "limit5": limit_5,
            "page5": page_5,
            "query1": query_1,
            "limit6": limit_6,
            "page6": page_6,
            "id": id,
        }
        response = self.execute(
            query=_query, operation_name="asset", variables=variables, **kwargs
        )
        data = self.get_data(response)
        return Asset.model_validate(data)

    def assets(
        self,
        ids: List[str],
        validity_in_days: Union[Optional[int], UnsetType] = UNSET,
        permanent: Union[Optional[bool], UnsetType] = UNSET,
        validity_in_days_1: Union[Optional[int], UnsetType] = UNSET,
        permanent_1: Union[Optional[bool], UnsetType] = UNSET,
        limit: Union[Optional[int], UnsetType] = UNSET,
        page: Union[Optional[int], UnsetType] = UNSET,
        limit_1: Union[Optional[int], UnsetType] = UNSET,
        page_1: Union[Optional[int], UnsetType] = UNSET,
        query: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_2: Union[Optional[int], UnsetType] = UNSET,
        page_2: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_2: Union[Optional[int], UnsetType] = UNSET,
        permanent_2: Union[Optional[bool], UnsetType] = UNSET,
        limit_3: Union[Optional[int], UnsetType] = UNSET,
        page_3: Union[Optional[int], UnsetType] = UNSET,
        limit_4: Union[Optional[int], UnsetType] = UNSET,
        page_4: Union[Optional[int], UnsetType] = UNSET,
        limit_5: Union[Optional[int], UnsetType] = UNSET,
        page_5: Union[Optional[int], UnsetType] = UNSET,
        query_1: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_6: Union[Optional[int], UnsetType] = UNSET,
        page_6: Union[Optional[int], UnsetType] = UNSET,
        **kwargs: Any
    ) -> Assets:
        _query = gql(
            """
            query assets($validityInDays: Int, $permanent: Boolean, $validityInDays1: Int, $permanent1: Boolean, $limit: Int, $page: Int, $limit1: Int, $page1: Int, $query: AssetCommentQueryInput, $limit2: Int, $page2: Int, $validityInDays2: Int, $permanent2: Boolean, $limit3: Int, $page3: Int, $limit4: Int, $page4: Int, $limit5: Int, $page5: Int, $query1: AssetCommentQueryInput, $limit6: Int, $page6: Int, $ids: [ID!]!) {
              assets(ids: $ids) {
                __typename
                id
                creator {
                  __typename
                  id
                  name
                }
                createdAt
                modifier {
                  __typename
                  id
                  name
                }
                modifiedAt
                title
                description
                attachments {
                  id
                  creator {
                    __typename
                    id
                    name
                  }
                  createdAt
                  modifier {
                    __typename
                    id
                    name
                  }
                  modifiedAt
                  name
                  filename
                  type
                  externalId
                  extension
                  size
                  downloadUrl(validityInDays: $validityInDays, permanent: $permanent)
                }
                externalId
                tags {
                  value
                  source
                }
                copyright {
                  status
                  notice
                }
                availability {
                  from
                  to
                }
                expiresAt
                licenses {
                  id
                  title
                  license
                  addByDefault
                  requireConsensus
                }
                status
                relatedAssets(limit: $limit4, page: $page4) {
                  total
                  page
                  limit
                  hasNextPage
                  items {
                    __typename
                    id
                    creator {
                      __typename
                      id
                      name
                    }
                    createdAt
                    modifier {
                      __typename
                      id
                      name
                    }
                    modifiedAt
                    title
                    description
                    attachments {
                      id
                      createdAt
                      modifiedAt
                      name
                      filename
                      type
                      externalId
                      extension
                      size
                      downloadUrl(validityInDays: $validityInDays1, permanent: $permanent1)
                    }
                    externalId
                    tags {
                      value
                      source
                    }
                    copyright {
                      status
                      notice
                    }
                    availability {
                      from
                      to
                    }
                    expiresAt
                    licenses {
                      id
                      title
                      license
                      addByDefault
                      requireConsensus
                    }
                    status
                    relatedAssets(limit: $limit, page: $page) {
                      total
                      page
                      limit
                      hasNextPage
                    }
                    comments(limit: $limit1, page: $page1, query: $query) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        id
                        createdAt
                        modifiedAt
                        content
                        isResolved
                      }
                    }
                    currentUserPermissions {
                      canEdit
                      canDelete
                      canDownload
                      canComment
                    }
                    customMetadata {
                      __typename
                      property {
                        id
                        createdAt
                        modifiedAt
                        name
                        helpText
                        isRequired
                        defaultValue
                      }
                    }
                    workflowTask {
                      id
                      assignedUsers {
                        __typename
                        id
                        name
                      }
                      asset {
                        __typename
                        id
                        createdAt
                        modifiedAt
                        title
                        description
                        externalId
                        expiresAt
                        status
                      }
                      title
                      description
                      status {
                        id
                        name
                        enterRules
                      }
                      checklistItem(limit: $limit2, page: $page2) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                    }
                    variants(limit: $limit3, page: $page3) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        key
                        filename
                        downloadUrl(validityInDays: $validityInDays2, permanent: $permanent2)
                      }
                    }
                    location {
                      brand {
                        id
                        name
                      }
                      library {
                        id
                        name
                      }
                      workspaceProject {
                        id
                        name
                      }
                      folder {
                        id
                        name
                      }
                    }
                    previewBackgroundColor {
                      red
                      green
                      blue
                      alpha
                    }
                  }
                }
                comments(limit: $limit5, page: $page5, query: $query1) {
                  total
                  page
                  limit
                  hasNextPage
                }
                currentUserPermissions {
                  canEdit
                  canDelete
                  canDownload
                  canComment
                }
                workflowTask {
                  id
                  title
                  description
                }
                variants(limit: $limit6, page: $page6) {
                  total
                  page
                  limit
                  hasNextPage
                }
                previewBackgroundColor {
                  red
                  green
                  blue
                  alpha
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {
            "validityInDays": validity_in_days,
            "permanent": permanent,
            "validityInDays1": validity_in_days_1,
            "permanent1": permanent_1,
            "limit": limit,
            "page": page,
            "limit1": limit_1,
            "page1": page_1,
            "query": query,
            "limit2": limit_2,
            "page2": page_2,
            "validityInDays2": validity_in_days_2,
            "permanent2": permanent_2,
            "limit3": limit_3,
            "page3": page_3,
            "limit4": limit_4,
            "page4": page_4,
            "limit5": limit_5,
            "page5": page_5,
            "query1": query_1,
            "limit6": limit_6,
            "page6": page_6,
            "ids": ids,
        }
        response = self.execute(
            query=_query, operation_name="assets", variables=variables, **kwargs
        )
        data = self.get_data(response)
        return Assets.model_validate(data)

    def brand(
        self,
        key: str,
        id: str,
        validity_in_days: Union[Optional[int], UnsetType] = UNSET,
        permanent: Union[Optional[bool], UnsetType] = UNSET,
        limit: Union[Optional[int], UnsetType] = UNSET,
        page: Union[Optional[int], UnsetType] = UNSET,
        query: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_1: Union[Optional[int], UnsetType] = UNSET,
        page_1: Union[Optional[int], UnsetType] = UNSET,
        limit_2: Union[Optional[int], UnsetType] = UNSET,
        page_2: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_1: Union[Optional[int], UnsetType] = UNSET,
        permanent_1: Union[Optional[bool], UnsetType] = UNSET,
        width: Union[Optional[int], UnsetType] = UNSET,
        height: Union[Optional[int], UnsetType] = UNSET,
        width_1: Union[Optional[int], UnsetType] = UNSET,
        height_1: Union[Optional[int], UnsetType] = UNSET,
        page_3: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_2: Union[Optional[int], UnsetType] = UNSET,
        permanent_2: Union[Optional[bool], UnsetType] = UNSET,
        validity_in_days_3: Union[Optional[int], UnsetType] = UNSET,
        permanent_3: Union[Optional[bool], UnsetType] = UNSET,
        width_2: Union[Optional[int], UnsetType] = UNSET,
        height_2: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_4: Union[Optional[int], UnsetType] = UNSET,
        permanent_4: Union[Optional[bool], UnsetType] = UNSET,
        width_3: Union[Optional[int], UnsetType] = UNSET,
        height_3: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_5: Union[Optional[int], UnsetType] = UNSET,
        permanent_5: Union[Optional[bool], UnsetType] = UNSET,
        validity_in_days_6: Union[Optional[int], UnsetType] = UNSET,
        permanent_6: Union[Optional[bool], UnsetType] = UNSET,
        limit_3: Union[Optional[int], UnsetType] = UNSET,
        page_4: Union[Optional[int], UnsetType] = UNSET,
        limit_4: Union[Optional[int], UnsetType] = UNSET,
        page_5: Union[Optional[int], UnsetType] = UNSET,
        query_1: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_5: Union[Optional[int], UnsetType] = UNSET,
        page_6: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_7: Union[Optional[int], UnsetType] = UNSET,
        permanent_7: Union[Optional[bool], UnsetType] = UNSET,
        limit_6: Union[Optional[int], UnsetType] = UNSET,
        page_7: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_8: Union[Optional[int], UnsetType] = UNSET,
        permanent_8: Union[Optional[bool], UnsetType] = UNSET,
        width_4: Union[Optional[int], UnsetType] = UNSET,
        height_4: Union[Optional[int], UnsetType] = UNSET,
        width_5: Union[Optional[int], UnsetType] = UNSET,
        height_5: Union[Optional[int], UnsetType] = UNSET,
        page_8: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_9: Union[Optional[int], UnsetType] = UNSET,
        permanent_9: Union[Optional[bool], UnsetType] = UNSET,
        validity_in_days_10: Union[Optional[int], UnsetType] = UNSET,
        permanent_10: Union[Optional[bool], UnsetType] = UNSET,
        width_6: Union[Optional[int], UnsetType] = UNSET,
        height_6: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_11: Union[Optional[int], UnsetType] = UNSET,
        permanent_11: Union[Optional[bool], UnsetType] = UNSET,
        width_7: Union[Optional[int], UnsetType] = UNSET,
        height_7: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_12: Union[Optional[int], UnsetType] = UNSET,
        permanent_12: Union[Optional[bool], UnsetType] = UNSET,
        limit_7: Union[Optional[int], UnsetType] = UNSET,
        page_9: Union[Optional[int], UnsetType] = UNSET,
        query_2: Union[Optional[BrandQueryInput], UnsetType] = UNSET,
        limit_8: Union[Optional[int], UnsetType] = UNSET,
        page_10: Union[Optional[int], UnsetType] = UNSET,
        query_3: Union[Optional[AssetQueryInput], UnsetType] = UNSET,
        limit_9: Union[Optional[int], UnsetType] = UNSET,
        page_11: Union[Optional[int], UnsetType] = UNSET,
        limit_10: Union[Optional[int], UnsetType] = UNSET,
        page_12: Union[Optional[int], UnsetType] = UNSET,
        limit_11: Union[Optional[int], UnsetType] = UNSET,
        page_13: Union[Optional[int], UnsetType] = UNSET,
        query_4: Union[Optional[FolderAssetQueryInput], UnsetType] = UNSET,
        limit_12: Union[Optional[int], UnsetType] = UNSET,
        page_14: Union[Optional[int], UnsetType] = UNSET,
        limit_13: Union[Optional[int], UnsetType] = UNSET,
        page_15: Union[Optional[int], UnsetType] = UNSET,
        query_5: Union[Optional[LibraryQueryInput], UnsetType] = UNSET,
        limit_14: Union[Optional[int], UnsetType] = UNSET,
        page_16: Union[Optional[int], UnsetType] = UNSET,
        query_6: Union[Optional[WorkspaceProjectQueryInput], UnsetType] = UNSET,
        limit_15: Union[Optional[int], UnsetType] = UNSET,
        page_17: Union[Optional[int], UnsetType] = UNSET,
        limit_16: Union[Optional[int], UnsetType] = UNSET,
        page_18: Union[Optional[int], UnsetType] = UNSET,
        language: Union[Optional[LanguageCode], UnsetType] = UNSET,
        limit_17: Union[Optional[int], UnsetType] = UNSET,
        page_19: Union[Optional[int], UnsetType] = UNSET,
        limit_18: Union[Optional[int], UnsetType] = UNSET,
        page_20: Union[Optional[int], UnsetType] = UNSET,
        query_7: Union[Optional[CreativeTemplateQueryInput], UnsetType] = UNSET,
        **kwargs: Any
    ) -> Brand:
        _query = gql(
            """
            query brand($validityInDays: Int, $permanent: Boolean, $limit: Int, $page: Int, $query: AssetCommentQueryInput, $limit1: Int, $page1: Int, $limit2: Int, $page2: Int, $validityInDays1: Int, $permanent1: Boolean, $width: Int, $height: Int, $width1: Int, $height1: Int, $page3: Int, $validityInDays2: Int, $permanent2: Boolean, $validityInDays3: Int, $permanent3: Boolean, $width2: Int, $height2: Int, $validityInDays4: Int, $permanent4: Boolean, $width3: Int, $height3: Int, $validityInDays5: Int, $permanent5: Boolean, $validityInDays6: Int, $permanent6: Boolean, $limit3: Int, $page4: Int, $limit4: Int, $page5: Int, $query1: AssetCommentQueryInput, $limit5: Int, $page6: Int, $validityInDays7: Int, $permanent7: Boolean, $limit6: Int, $page7: Int, $validityInDays8: Int, $permanent8: Boolean, $width4: Int, $height4: Int, $width5: Int, $height5: Int, $page8: Int, $validityInDays9: Int, $permanent9: Boolean, $validityInDays10: Int, $permanent10: Boolean, $width6: Int, $height6: Int, $validityInDays11: Int, $permanent11: Boolean, $width7: Int, $height7: Int, $validityInDays12: Int, $permanent12: Boolean, $limit7: Int, $page9: Int, $query2: BrandQueryInput, $limit8: Int, $page10: Int, $query3: AssetQueryInput, $limit9: Int, $page11: Int, $limit10: Int, $page12: Int, $limit11: Int, $page13: Int, $query4: FolderAssetQueryInput, $limit12: Int, $page14: Int, $limit13: Int, $page15: Int, $query5: LibraryQueryInput, $limit14: Int, $page16: Int, $query6: WorkspaceProjectQueryInput, $limit15: Int, $page17: Int, $limit16: Int, $page18: Int, $language: LanguageCode, $limit17: Int, $page19: Int, $key: String!, $limit18: Int, $page20: Int, $query7: CreativeTemplateQueryInput, $id: ID!) {
              brand(id: $id) {
                id
                name
                rgbaColor {
                  red
                  green
                  blue
                  alpha
                }
                avatar
                slug
                search(limit: $limit7, page: $page9, query: $query2) {
                  total
                  page
                  limit
                  hasNextPage
                  items {
                    __typename
                    ... on Audio {
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      title
                      description
                      alternativeText
                      isDecorative
                      attachments {
                        id
                        creator {
                          __typename
                          id
                          name
                        }
                        createdAt
                        modifier {
                          __typename
                          id
                          name
                        }
                        modifiedAt
                        name
                        filename
                        type
                        externalId
                        extension
                        size
                        downloadUrl(validityInDays: $validityInDays, permanent: $permanent)
                      }
                      externalId
                      tags {
                        value
                        source
                      }
                      externalProducts {
                        id
                        name
                        externalId
                        title
                      }
                      copyright {
                        status
                        notice
                      }
                      availability {
                        from
                        to
                      }
                      expiresAt
                      licenses {
                        id
                        title
                        license
                        addByDefault
                        requireConsensus
                      }
                      author
                      status
                      relatedAssets(limit: $limit2, page: $page2) {
                        total
                        page
                        limit
                        hasNextPage
                        items {
                          __typename
                          id
                          createdAt
                          modifiedAt
                          title
                          description
                          externalId
                          expiresAt
                          status
                          comments(limit: $limit, page: $page, query: $query) {
                            total
                            page
                            limit
                            hasNextPage
                          }
                          currentUserPermissions {
                            canEdit
                            canDelete
                            canDownload
                            canComment
                          }
                          workflowTask {
                            id
                            title
                            description
                          }
                          variants(limit: $limit1, page: $page1) {
                            total
                            page
                            limit
                            hasNextPage
                          }
                          previewBackgroundColor {
                            red
                            green
                            blue
                            alpha
                          }
                        }
                      }
                      filename
                      size
                      extension
                      downloadUrl(validityInDays: $validityInDays1, permanent: $permanent1)
                      previewUrl(width: $width, height: $height)
                      thumbnailUrl
                      dynamicPreviewUrl
                    }
                    ... on Document {
                      id
                      createdAt
                      modifiedAt
                      title
                      description
                      alternativeText
                      isDecorative
                      externalId
                      expiresAt
                      author
                      status
                      filename
                      size
                      extension
                      previewUrl(width: $width1, height: $height1, page: $page3)
                      thumbnailUrl
                      dynamicPreviewUrl
                      downloadUrl(validityInDays: $validityInDays2, permanent: $permanent2)
                      focalPoint
                      width
                      height
                      pageCount
                    }
                    ... on EmbeddedContent {
                      id
                      createdAt
                      modifiedAt
                      title
                      description
                      alternativeText
                      isDecorative
                      externalId
                      expiresAt
                      author
                      status
                      previewUrl
                      thumbnailUrl
                    }
                    ... on File {
                      id
                      createdAt
                      modifiedAt
                      title
                      description
                      alternativeText
                      isDecorative
                      externalId
                      expiresAt
                      author
                      status
                      filename
                      size
                      extension
                      previewUrl
                      thumbnailUrl
                      dynamicPreviewUrl
                      downloadUrl(validityInDays: $validityInDays3, permanent: $permanent3)
                    }
                    ... on Image {
                      id
                      createdAt
                      modifiedAt
                      title
                      description
                      alternativeText
                      isDecorative
                      externalId
                      expiresAt
                      author
                      status
                      filename
                      size
                      extension
                      previewUrl(width: $width2, height: $height2)
                      thumbnailUrl
                      dynamicPreviewUrl
                      downloadUrl(validityInDays: $validityInDays4, permanent: $permanent4)
                      focalPoint
                      width
                      height
                    }
                    ... on Video {
                      id
                      createdAt
                      modifiedAt
                      title
                      description
                      alternativeText
                      isDecorative
                      externalId
                      expiresAt
                      author
                      status
                      filename
                      size
                      extension
                      previewUrl(width: $width3, height: $height3)
                      thumbnailUrl
                      dynamicPreviewUrl
                      downloadUrl(validityInDays: $validityInDays5, permanent: $permanent5)
                      width
                      height
                      duration
                      bitrate
                    }
                  }
                  edges {
                    title
                    node {
                      __typename
                      ... on Audio {
                        id
                        creator {
                          __typename
                          id
                          name
                        }
                        createdAt
                        modifier {
                          __typename
                          id
                          name
                        }
                        modifiedAt
                        title
                        description
                        alternativeText
                        isDecorative
                        attachments {
                          id
                          createdAt
                          modifiedAt
                          name
                          filename
                          type
                          externalId
                          extension
                          size
                          downloadUrl(validityInDays: $validityInDays6, permanent: $permanent6)
                        }
                        externalId
                        tags {
                          value
                          source
                        }
                        externalProducts {
                          id
                          name
                          externalId
                          title
                        }
                        copyright {
                          status
                          notice
                        }
                        availability {
                          from
                          to
                        }
                        expiresAt
                        licenses {
                          id
                          title
                          license
                          addByDefault
                          requireConsensus
                        }
                        author
                        status
                        relatedAssets(limit: $limit3, page: $page4) {
                          total
                          page
                          limit
                          hasNextPage
                        }
                        comments(limit: $limit4, page: $page5, query: $query1) {
                          total
                          page
                          limit
                          hasNextPage
                          items {
                            id
                            createdAt
                            modifiedAt
                            content
                            isResolved
                          }
                        }
                        currentUserPermissions {
                          canEdit
                          canDelete
                          canDownload
                          canComment
                        }
                        customMetadata {
                          __typename
                          property {
                            id
                            createdAt
                            modifiedAt
                            name
                            helpText
                            isRequired
                            defaultValue
                          }
                        }
                        workflowTask {
                          id
                          assignedUsers {
                            __typename
                            id
                            name
                          }
                          asset {
                            __typename
                            id
                            createdAt
                            modifiedAt
                            title
                            description
                            externalId
                            expiresAt
                            status
                          }
                          title
                          description
                          status {
                            id
                            name
                            enterRules
                          }
                          checklistItem(limit: $limit5, page: $page6) {
                            total
                            page
                            limit
                            hasNextPage
                          }
                        }
                        variants(limit: $limit6, page: $page7) {
                          total
                          page
                          limit
                          hasNextPage
                          items {
                            key
                            filename
                            downloadUrl(validityInDays: $validityInDays7, permanent: $permanent7)
                          }
                        }
                        location {
                          brand {
                            id
                            name
                          }
                          library {
                            id
                            name
                          }
                          workspaceProject {
                            id
                            name
                          }
                          folder {
                            id
                            name
                          }
                        }
                        previewBackgroundColor {
                          red
                          green
                          blue
                          alpha
                        }
                        filename
                        size
                        extension
                        downloadUrl(validityInDays: $validityInDays8, permanent: $permanent8)
                        previewUrl(width: $width4, height: $height4)
                        thumbnailUrl
                        dynamicPreviewUrl
                      }
                      ... on Document {
                        id
                        createdAt
                        modifiedAt
                        title
                        description
                        alternativeText
                        isDecorative
                        externalId
                        expiresAt
                        author
                        status
                        filename
                        size
                        extension
                        previewUrl(width: $width5, height: $height5, page: $page8)
                        thumbnailUrl
                        dynamicPreviewUrl
                        downloadUrl(validityInDays: $validityInDays9, permanent: $permanent9)
                        focalPoint
                        width
                        height
                        pageCount
                      }
                      ... on EmbeddedContent {
                        id
                        createdAt
                        modifiedAt
                        title
                        description
                        alternativeText
                        isDecorative
                        externalId
                        expiresAt
                        author
                        status
                        previewUrl
                        thumbnailUrl
                      }
                      ... on File {
                        id
                        createdAt
                        modifiedAt
                        title
                        description
                        alternativeText
                        isDecorative
                        externalId
                        expiresAt
                        author
                        status
                        filename
                        size
                        extension
                        previewUrl
                        thumbnailUrl
                        dynamicPreviewUrl
                        downloadUrl(validityInDays: $validityInDays10, permanent: $permanent10)
                      }
                      ... on Image {
                        id
                        createdAt
                        modifiedAt
                        title
                        description
                        alternativeText
                        isDecorative
                        externalId
                        expiresAt
                        author
                        status
                        filename
                        size
                        extension
                        previewUrl(width: $width6, height: $height6)
                        thumbnailUrl
                        dynamicPreviewUrl
                        downloadUrl(validityInDays: $validityInDays11, permanent: $permanent11)
                        focalPoint
                        width
                        height
                      }
                      ... on Video {
                        id
                        createdAt
                        modifiedAt
                        title
                        description
                        alternativeText
                        isDecorative
                        externalId
                        expiresAt
                        author
                        status
                        filename
                        size
                        extension
                        previewUrl(width: $width7, height: $height7)
                        thumbnailUrl
                        dynamicPreviewUrl
                        downloadUrl(validityInDays: $validityInDays12, permanent: $permanent12)
                        width
                        height
                        duration
                        bitrate
                      }
                    }
                  }
                }
                libraries(limit: $limit13, page: $page15, query: $query5) {
                  total
                  page
                  limit
                  hasNextPage
                  items {
                    __typename
                    id
                    name
                    color {
                      red
                      green
                      blue
                      alpha
                    }
                    assets(limit: $limit8, page: $page10, query: $query3) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        __typename
                        id
                        createdAt
                        modifiedAt
                        title
                        description
                        externalId
                        expiresAt
                        status
                      }
                    }
                    collections(limit: $limit9, page: $page11) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        id
                        name
                      }
                    }
                    browse {
                      folders(limit: $limit10, page: $page12) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      assets(limit: $limit11, page: $page13, query: $query4) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                    }
                    collaborators {
                      users(limit: $limit12, page: $page14) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                    }
                    workflow {
                      id
                      statuses {
                        id
                        name
                        enterRules
                      }
                    }
                    customMetadataProperties {
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      name
                      type {
                        __typename
                        name
                      }
                      helpText
                      isRequired
                      defaultValue
                    }
                    assetSubmissionRequests {
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      projectId
                      title
                      description
                      configuration
                    }
                  }
                }
                workspaceProjects(limit: $limit14, page: $page16, query: $query6) {
                  total
                  page
                  limit
                  hasNextPage
                  items {
                    id
                    name
                    isArchived
                  }
                }
                guidelines(language: $language, limit: $limit17, page: $page19) {
                  total
                  page
                  limit
                  hasNextPage
                  items {
                    id
                    name
                    url
                    defaultLanguage {
                      code
                      name
                    }
                    translationLanguages {
                      code
                      name
                    }
                    libraryPages(limit: $limit15, page: $page17) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        id
                        title
                        type
                      }
                    }
                    pages(limit: $limit16, page: $page18) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        id
                        title
                        url
                      }
                    }
                  }
                }
                customMetadataProperties {
                  id
                  createdAt
                  modifiedAt
                  name
                  helpText
                  isRequired
                  defaultValue
                }
                creativeTemplates(limit: $limit18, page: $page20, query: $query7) {
                  total
                  page
                  limit
                  hasNextPage
                  items {
                    id
                    brandId
                    name
                    description
                    variable(key: $key) {
                      key
                      name
                      description
                      type
                      value
                      connectionCount
                    }
                    variables {
                      key
                      name
                      description
                      type
                      value
                      connectionCount
                    }
                    assetId
                  }
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {
            "validityInDays": validity_in_days,
            "permanent": permanent,
            "limit": limit,
            "page": page,
            "query": query,
            "limit1": limit_1,
            "page1": page_1,
            "limit2": limit_2,
            "page2": page_2,
            "validityInDays1": validity_in_days_1,
            "permanent1": permanent_1,
            "width": width,
            "height": height,
            "width1": width_1,
            "height1": height_1,
            "page3": page_3,
            "validityInDays2": validity_in_days_2,
            "permanent2": permanent_2,
            "validityInDays3": validity_in_days_3,
            "permanent3": permanent_3,
            "width2": width_2,
            "height2": height_2,
            "validityInDays4": validity_in_days_4,
            "permanent4": permanent_4,
            "width3": width_3,
            "height3": height_3,
            "validityInDays5": validity_in_days_5,
            "permanent5": permanent_5,
            "validityInDays6": validity_in_days_6,
            "permanent6": permanent_6,
            "limit3": limit_3,
            "page4": page_4,
            "limit4": limit_4,
            "page5": page_5,
            "query1": query_1,
            "limit5": limit_5,
            "page6": page_6,
            "validityInDays7": validity_in_days_7,
            "permanent7": permanent_7,
            "limit6": limit_6,
            "page7": page_7,
            "validityInDays8": validity_in_days_8,
            "permanent8": permanent_8,
            "width4": width_4,
            "height4": height_4,
            "width5": width_5,
            "height5": height_5,
            "page8": page_8,
            "validityInDays9": validity_in_days_9,
            "permanent9": permanent_9,
            "validityInDays10": validity_in_days_10,
            "permanent10": permanent_10,
            "width6": width_6,
            "height6": height_6,
            "validityInDays11": validity_in_days_11,
            "permanent11": permanent_11,
            "width7": width_7,
            "height7": height_7,
            "validityInDays12": validity_in_days_12,
            "permanent12": permanent_12,
            "limit7": limit_7,
            "page9": page_9,
            "query2": query_2,
            "limit8": limit_8,
            "page10": page_10,
            "query3": query_3,
            "limit9": limit_9,
            "page11": page_11,
            "limit10": limit_10,
            "page12": page_12,
            "limit11": limit_11,
            "page13": page_13,
            "query4": query_4,
            "limit12": limit_12,
            "page14": page_14,
            "limit13": limit_13,
            "page15": page_15,
            "query5": query_5,
            "limit14": limit_14,
            "page16": page_16,
            "query6": query_6,
            "limit15": limit_15,
            "page17": page_17,
            "limit16": limit_16,
            "page18": page_18,
            "language": language,
            "limit17": limit_17,
            "page19": page_19,
            "key": key,
            "limit18": limit_18,
            "page20": page_20,
            "query7": query_7,
            "id": id,
        }
        response = self.execute(
            query=_query, operation_name="brand", variables=variables, **kwargs
        )
        data = self.get_data(response)
        return Brand.model_validate(data)

    def brands(
        self,
        key: str,
        validity_in_days: Union[Optional[int], UnsetType] = UNSET,
        permanent: Union[Optional[bool], UnsetType] = UNSET,
        limit: Union[Optional[int], UnsetType] = UNSET,
        page: Union[Optional[int], UnsetType] = UNSET,
        query: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_1: Union[Optional[int], UnsetType] = UNSET,
        page_1: Union[Optional[int], UnsetType] = UNSET,
        limit_2: Union[Optional[int], UnsetType] = UNSET,
        page_2: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_1: Union[Optional[int], UnsetType] = UNSET,
        permanent_1: Union[Optional[bool], UnsetType] = UNSET,
        width: Union[Optional[int], UnsetType] = UNSET,
        height: Union[Optional[int], UnsetType] = UNSET,
        width_1: Union[Optional[int], UnsetType] = UNSET,
        height_1: Union[Optional[int], UnsetType] = UNSET,
        page_3: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_2: Union[Optional[int], UnsetType] = UNSET,
        permanent_2: Union[Optional[bool], UnsetType] = UNSET,
        validity_in_days_3: Union[Optional[int], UnsetType] = UNSET,
        permanent_3: Union[Optional[bool], UnsetType] = UNSET,
        width_2: Union[Optional[int], UnsetType] = UNSET,
        height_2: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_4: Union[Optional[int], UnsetType] = UNSET,
        permanent_4: Union[Optional[bool], UnsetType] = UNSET,
        width_3: Union[Optional[int], UnsetType] = UNSET,
        height_3: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_5: Union[Optional[int], UnsetType] = UNSET,
        permanent_5: Union[Optional[bool], UnsetType] = UNSET,
        validity_in_days_6: Union[Optional[int], UnsetType] = UNSET,
        permanent_6: Union[Optional[bool], UnsetType] = UNSET,
        limit_3: Union[Optional[int], UnsetType] = UNSET,
        page_4: Union[Optional[int], UnsetType] = UNSET,
        limit_4: Union[Optional[int], UnsetType] = UNSET,
        page_5: Union[Optional[int], UnsetType] = UNSET,
        query_1: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_5: Union[Optional[int], UnsetType] = UNSET,
        page_6: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_7: Union[Optional[int], UnsetType] = UNSET,
        permanent_7: Union[Optional[bool], UnsetType] = UNSET,
        limit_6: Union[Optional[int], UnsetType] = UNSET,
        page_7: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_8: Union[Optional[int], UnsetType] = UNSET,
        permanent_8: Union[Optional[bool], UnsetType] = UNSET,
        width_4: Union[Optional[int], UnsetType] = UNSET,
        height_4: Union[Optional[int], UnsetType] = UNSET,
        width_5: Union[Optional[int], UnsetType] = UNSET,
        height_5: Union[Optional[int], UnsetType] = UNSET,
        page_8: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_9: Union[Optional[int], UnsetType] = UNSET,
        permanent_9: Union[Optional[bool], UnsetType] = UNSET,
        validity_in_days_10: Union[Optional[int], UnsetType] = UNSET,
        permanent_10: Union[Optional[bool], UnsetType] = UNSET,
        width_6: Union[Optional[int], UnsetType] = UNSET,
        height_6: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_11: Union[Optional[int], UnsetType] = UNSET,
        permanent_11: Union[Optional[bool], UnsetType] = UNSET,
        width_7: Union[Optional[int], UnsetType] = UNSET,
        height_7: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_12: Union[Optional[int], UnsetType] = UNSET,
        permanent_12: Union[Optional[bool], UnsetType] = UNSET,
        limit_7: Union[Optional[int], UnsetType] = UNSET,
        page_9: Union[Optional[int], UnsetType] = UNSET,
        query_2: Union[Optional[BrandQueryInput], UnsetType] = UNSET,
        limit_8: Union[Optional[int], UnsetType] = UNSET,
        page_10: Union[Optional[int], UnsetType] = UNSET,
        query_3: Union[Optional[AssetQueryInput], UnsetType] = UNSET,
        limit_9: Union[Optional[int], UnsetType] = UNSET,
        page_11: Union[Optional[int], UnsetType] = UNSET,
        limit_10: Union[Optional[int], UnsetType] = UNSET,
        page_12: Union[Optional[int], UnsetType] = UNSET,
        limit_11: Union[Optional[int], UnsetType] = UNSET,
        page_13: Union[Optional[int], UnsetType] = UNSET,
        query_4: Union[Optional[FolderAssetQueryInput], UnsetType] = UNSET,
        limit_12: Union[Optional[int], UnsetType] = UNSET,
        page_14: Union[Optional[int], UnsetType] = UNSET,
        limit_13: Union[Optional[int], UnsetType] = UNSET,
        page_15: Union[Optional[int], UnsetType] = UNSET,
        query_5: Union[Optional[LibraryQueryInput], UnsetType] = UNSET,
        limit_14: Union[Optional[int], UnsetType] = UNSET,
        page_16: Union[Optional[int], UnsetType] = UNSET,
        query_6: Union[Optional[WorkspaceProjectQueryInput], UnsetType] = UNSET,
        limit_15: Union[Optional[int], UnsetType] = UNSET,
        page_17: Union[Optional[int], UnsetType] = UNSET,
        limit_16: Union[Optional[int], UnsetType] = UNSET,
        page_18: Union[Optional[int], UnsetType] = UNSET,
        language: Union[Optional[LanguageCode], UnsetType] = UNSET,
        limit_17: Union[Optional[int], UnsetType] = UNSET,
        page_19: Union[Optional[int], UnsetType] = UNSET,
        limit_18: Union[Optional[int], UnsetType] = UNSET,
        page_20: Union[Optional[int], UnsetType] = UNSET,
        query_7: Union[Optional[CreativeTemplateQueryInput], UnsetType] = UNSET,
        **kwargs: Any
    ) -> Brands:
        _query = gql(
            """
            query brands($validityInDays: Int, $permanent: Boolean, $limit: Int, $page: Int, $query: AssetCommentQueryInput, $limit1: Int, $page1: Int, $limit2: Int, $page2: Int, $validityInDays1: Int, $permanent1: Boolean, $width: Int, $height: Int, $width1: Int, $height1: Int, $page3: Int, $validityInDays2: Int, $permanent2: Boolean, $validityInDays3: Int, $permanent3: Boolean, $width2: Int, $height2: Int, $validityInDays4: Int, $permanent4: Boolean, $width3: Int, $height3: Int, $validityInDays5: Int, $permanent5: Boolean, $validityInDays6: Int, $permanent6: Boolean, $limit3: Int, $page4: Int, $limit4: Int, $page5: Int, $query1: AssetCommentQueryInput, $limit5: Int, $page6: Int, $validityInDays7: Int, $permanent7: Boolean, $limit6: Int, $page7: Int, $validityInDays8: Int, $permanent8: Boolean, $width4: Int, $height4: Int, $width5: Int, $height5: Int, $page8: Int, $validityInDays9: Int, $permanent9: Boolean, $validityInDays10: Int, $permanent10: Boolean, $width6: Int, $height6: Int, $validityInDays11: Int, $permanent11: Boolean, $width7: Int, $height7: Int, $validityInDays12: Int, $permanent12: Boolean, $limit7: Int, $page9: Int, $query2: BrandQueryInput, $limit8: Int, $page10: Int, $query3: AssetQueryInput, $limit9: Int, $page11: Int, $limit10: Int, $page12: Int, $limit11: Int, $page13: Int, $query4: FolderAssetQueryInput, $limit12: Int, $page14: Int, $limit13: Int, $page15: Int, $query5: LibraryQueryInput, $limit14: Int, $page16: Int, $query6: WorkspaceProjectQueryInput, $limit15: Int, $page17: Int, $limit16: Int, $page18: Int, $language: LanguageCode, $limit17: Int, $page19: Int, $key: String!, $limit18: Int, $page20: Int, $query7: CreativeTemplateQueryInput) {
              brands {
                id
                name
                rgbaColor {
                  red
                  green
                  blue
                  alpha
                }
                avatar
                slug
                search(limit: $limit7, page: $page9, query: $query2) {
                  total
                  page
                  limit
                  hasNextPage
                  items {
                    __typename
                    ... on Audio {
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      title
                      description
                      alternativeText
                      isDecorative
                      attachments {
                        id
                        creator {
                          __typename
                          id
                          name
                        }
                        createdAt
                        modifier {
                          __typename
                          id
                          name
                        }
                        modifiedAt
                        name
                        filename
                        type
                        externalId
                        extension
                        size
                        downloadUrl(validityInDays: $validityInDays, permanent: $permanent)
                      }
                      externalId
                      tags {
                        value
                        source
                      }
                      externalProducts {
                        id
                        name
                        externalId
                        title
                      }
                      copyright {
                        status
                        notice
                      }
                      availability {
                        from
                        to
                      }
                      expiresAt
                      licenses {
                        id
                        title
                        license
                        addByDefault
                        requireConsensus
                      }
                      author
                      status
                      relatedAssets(limit: $limit2, page: $page2) {
                        total
                        page
                        limit
                        hasNextPage
                        items {
                          __typename
                          id
                          createdAt
                          modifiedAt
                          title
                          description
                          externalId
                          expiresAt
                          status
                          comments(limit: $limit, page: $page, query: $query) {
                            total
                            page
                            limit
                            hasNextPage
                          }
                          currentUserPermissions {
                            canEdit
                            canDelete
                            canDownload
                            canComment
                          }
                          workflowTask {
                            id
                            title
                            description
                          }
                          variants(limit: $limit1, page: $page1) {
                            total
                            page
                            limit
                            hasNextPage
                          }
                          previewBackgroundColor {
                            red
                            green
                            blue
                            alpha
                          }
                        }
                      }
                      filename
                      size
                      extension
                      downloadUrl(validityInDays: $validityInDays1, permanent: $permanent1)
                      previewUrl(width: $width, height: $height)
                      thumbnailUrl
                      dynamicPreviewUrl
                    }
                    ... on Document {
                      id
                      createdAt
                      modifiedAt
                      title
                      description
                      alternativeText
                      isDecorative
                      externalId
                      expiresAt
                      author
                      status
                      filename
                      size
                      extension
                      previewUrl(width: $width1, height: $height1, page: $page3)
                      thumbnailUrl
                      dynamicPreviewUrl
                      downloadUrl(validityInDays: $validityInDays2, permanent: $permanent2)
                      focalPoint
                      width
                      height
                      pageCount
                    }
                    ... on EmbeddedContent {
                      id
                      createdAt
                      modifiedAt
                      title
                      description
                      alternativeText
                      isDecorative
                      externalId
                      expiresAt
                      author
                      status
                      previewUrl
                      thumbnailUrl
                    }
                    ... on File {
                      id
                      createdAt
                      modifiedAt
                      title
                      description
                      alternativeText
                      isDecorative
                      externalId
                      expiresAt
                      author
                      status
                      filename
                      size
                      extension
                      previewUrl
                      thumbnailUrl
                      dynamicPreviewUrl
                      downloadUrl(validityInDays: $validityInDays3, permanent: $permanent3)
                    }
                    ... on Image {
                      id
                      createdAt
                      modifiedAt
                      title
                      description
                      alternativeText
                      isDecorative
                      externalId
                      expiresAt
                      author
                      status
                      filename
                      size
                      extension
                      previewUrl(width: $width2, height: $height2)
                      thumbnailUrl
                      dynamicPreviewUrl
                      downloadUrl(validityInDays: $validityInDays4, permanent: $permanent4)
                      focalPoint
                      width
                      height
                    }
                    ... on Video {
                      id
                      createdAt
                      modifiedAt
                      title
                      description
                      alternativeText
                      isDecorative
                      externalId
                      expiresAt
                      author
                      status
                      filename
                      size
                      extension
                      previewUrl(width: $width3, height: $height3)
                      thumbnailUrl
                      dynamicPreviewUrl
                      downloadUrl(validityInDays: $validityInDays5, permanent: $permanent5)
                      width
                      height
                      duration
                      bitrate
                    }
                  }
                  edges {
                    title
                    node {
                      __typename
                      ... on Audio {
                        id
                        creator {
                          __typename
                          id
                          name
                        }
                        createdAt
                        modifier {
                          __typename
                          id
                          name
                        }
                        modifiedAt
                        title
                        description
                        alternativeText
                        isDecorative
                        attachments {
                          id
                          createdAt
                          modifiedAt
                          name
                          filename
                          type
                          externalId
                          extension
                          size
                          downloadUrl(validityInDays: $validityInDays6, permanent: $permanent6)
                        }
                        externalId
                        tags {
                          value
                          source
                        }
                        externalProducts {
                          id
                          name
                          externalId
                          title
                        }
                        copyright {
                          status
                          notice
                        }
                        availability {
                          from
                          to
                        }
                        expiresAt
                        licenses {
                          id
                          title
                          license
                          addByDefault
                          requireConsensus
                        }
                        author
                        status
                        relatedAssets(limit: $limit3, page: $page4) {
                          total
                          page
                          limit
                          hasNextPage
                        }
                        comments(limit: $limit4, page: $page5, query: $query1) {
                          total
                          page
                          limit
                          hasNextPage
                          items {
                            id
                            createdAt
                            modifiedAt
                            content
                            isResolved
                          }
                        }
                        currentUserPermissions {
                          canEdit
                          canDelete
                          canDownload
                          canComment
                        }
                        customMetadata {
                          __typename
                          property {
                            id
                            createdAt
                            modifiedAt
                            name
                            helpText
                            isRequired
                            defaultValue
                          }
                        }
                        workflowTask {
                          id
                          assignedUsers {
                            __typename
                            id
                            name
                          }
                          asset {
                            __typename
                            id
                            createdAt
                            modifiedAt
                            title
                            description
                            externalId
                            expiresAt
                            status
                          }
                          title
                          description
                          status {
                            id
                            name
                            enterRules
                          }
                          checklistItem(limit: $limit5, page: $page6) {
                            total
                            page
                            limit
                            hasNextPage
                          }
                        }
                        variants(limit: $limit6, page: $page7) {
                          total
                          page
                          limit
                          hasNextPage
                          items {
                            key
                            filename
                            downloadUrl(validityInDays: $validityInDays7, permanent: $permanent7)
                          }
                        }
                        location {
                          brand {
                            id
                            name
                          }
                          library {
                            id
                            name
                          }
                          workspaceProject {
                            id
                            name
                          }
                          folder {
                            id
                            name
                          }
                        }
                        previewBackgroundColor {
                          red
                          green
                          blue
                          alpha
                        }
                        filename
                        size
                        extension
                        downloadUrl(validityInDays: $validityInDays8, permanent: $permanent8)
                        previewUrl(width: $width4, height: $height4)
                        thumbnailUrl
                        dynamicPreviewUrl
                      }
                      ... on Document {
                        id
                        createdAt
                        modifiedAt
                        title
                        description
                        alternativeText
                        isDecorative
                        externalId
                        expiresAt
                        author
                        status
                        filename
                        size
                        extension
                        previewUrl(width: $width5, height: $height5, page: $page8)
                        thumbnailUrl
                        dynamicPreviewUrl
                        downloadUrl(validityInDays: $validityInDays9, permanent: $permanent9)
                        focalPoint
                        width
                        height
                        pageCount
                      }
                      ... on EmbeddedContent {
                        id
                        createdAt
                        modifiedAt
                        title
                        description
                        alternativeText
                        isDecorative
                        externalId
                        expiresAt
                        author
                        status
                        previewUrl
                        thumbnailUrl
                      }
                      ... on File {
                        id
                        createdAt
                        modifiedAt
                        title
                        description
                        alternativeText
                        isDecorative
                        externalId
                        expiresAt
                        author
                        status
                        filename
                        size
                        extension
                        previewUrl
                        thumbnailUrl
                        dynamicPreviewUrl
                        downloadUrl(validityInDays: $validityInDays10, permanent: $permanent10)
                      }
                      ... on Image {
                        id
                        createdAt
                        modifiedAt
                        title
                        description
                        alternativeText
                        isDecorative
                        externalId
                        expiresAt
                        author
                        status
                        filename
                        size
                        extension
                        previewUrl(width: $width6, height: $height6)
                        thumbnailUrl
                        dynamicPreviewUrl
                        downloadUrl(validityInDays: $validityInDays11, permanent: $permanent11)
                        focalPoint
                        width
                        height
                      }
                      ... on Video {
                        id
                        createdAt
                        modifiedAt
                        title
                        description
                        alternativeText
                        isDecorative
                        externalId
                        expiresAt
                        author
                        status
                        filename
                        size
                        extension
                        previewUrl(width: $width7, height: $height7)
                        thumbnailUrl
                        dynamicPreviewUrl
                        downloadUrl(validityInDays: $validityInDays12, permanent: $permanent12)
                        width
                        height
                        duration
                        bitrate
                      }
                    }
                  }
                }
                libraries(limit: $limit13, page: $page15, query: $query5) {
                  total
                  page
                  limit
                  hasNextPage
                  items {
                    __typename
                    id
                    name
                    color {
                      red
                      green
                      blue
                      alpha
                    }
                    assets(limit: $limit8, page: $page10, query: $query3) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        __typename
                        id
                        createdAt
                        modifiedAt
                        title
                        description
                        externalId
                        expiresAt
                        status
                      }
                    }
                    collections(limit: $limit9, page: $page11) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        id
                        name
                      }
                    }
                    browse {
                      folders(limit: $limit10, page: $page12) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      assets(limit: $limit11, page: $page13, query: $query4) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                    }
                    collaborators {
                      users(limit: $limit12, page: $page14) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                    }
                    workflow {
                      id
                      statuses {
                        id
                        name
                        enterRules
                      }
                    }
                    customMetadataProperties {
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      name
                      type {
                        __typename
                        name
                      }
                      helpText
                      isRequired
                      defaultValue
                    }
                    assetSubmissionRequests {
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      projectId
                      title
                      description
                      configuration
                    }
                  }
                }
                workspaceProjects(limit: $limit14, page: $page16, query: $query6) {
                  total
                  page
                  limit
                  hasNextPage
                  items {
                    id
                    name
                    isArchived
                  }
                }
                guidelines(language: $language, limit: $limit17, page: $page19) {
                  total
                  page
                  limit
                  hasNextPage
                  items {
                    id
                    name
                    url
                    defaultLanguage {
                      code
                      name
                    }
                    translationLanguages {
                      code
                      name
                    }
                    libraryPages(limit: $limit15, page: $page17) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        id
                        title
                        type
                      }
                    }
                    pages(limit: $limit16, page: $page18) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        id
                        title
                        url
                      }
                    }
                  }
                }
                customMetadataProperties {
                  id
                  createdAt
                  modifiedAt
                  name
                  helpText
                  isRequired
                  defaultValue
                }
                creativeTemplates(limit: $limit18, page: $page20, query: $query7) {
                  total
                  page
                  limit
                  hasNextPage
                  items {
                    id
                    brandId
                    name
                    description
                    variable(key: $key) {
                      key
                      name
                      description
                      type
                      value
                      connectionCount
                    }
                    variables {
                      key
                      name
                      description
                      type
                      value
                      connectionCount
                    }
                    assetId
                  }
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {
            "validityInDays": validity_in_days,
            "permanent": permanent,
            "limit": limit,
            "page": page,
            "query": query,
            "limit1": limit_1,
            "page1": page_1,
            "limit2": limit_2,
            "page2": page_2,
            "validityInDays1": validity_in_days_1,
            "permanent1": permanent_1,
            "width": width,
            "height": height,
            "width1": width_1,
            "height1": height_1,
            "page3": page_3,
            "validityInDays2": validity_in_days_2,
            "permanent2": permanent_2,
            "validityInDays3": validity_in_days_3,
            "permanent3": permanent_3,
            "width2": width_2,
            "height2": height_2,
            "validityInDays4": validity_in_days_4,
            "permanent4": permanent_4,
            "width3": width_3,
            "height3": height_3,
            "validityInDays5": validity_in_days_5,
            "permanent5": permanent_5,
            "validityInDays6": validity_in_days_6,
            "permanent6": permanent_6,
            "limit3": limit_3,
            "page4": page_4,
            "limit4": limit_4,
            "page5": page_5,
            "query1": query_1,
            "limit5": limit_5,
            "page6": page_6,
            "validityInDays7": validity_in_days_7,
            "permanent7": permanent_7,
            "limit6": limit_6,
            "page7": page_7,
            "validityInDays8": validity_in_days_8,
            "permanent8": permanent_8,
            "width4": width_4,
            "height4": height_4,
            "width5": width_5,
            "height5": height_5,
            "page8": page_8,
            "validityInDays9": validity_in_days_9,
            "permanent9": permanent_9,
            "validityInDays10": validity_in_days_10,
            "permanent10": permanent_10,
            "width6": width_6,
            "height6": height_6,
            "validityInDays11": validity_in_days_11,
            "permanent11": permanent_11,
            "width7": width_7,
            "height7": height_7,
            "validityInDays12": validity_in_days_12,
            "permanent12": permanent_12,
            "limit7": limit_7,
            "page9": page_9,
            "query2": query_2,
            "limit8": limit_8,
            "page10": page_10,
            "query3": query_3,
            "limit9": limit_9,
            "page11": page_11,
            "limit10": limit_10,
            "page12": page_12,
            "limit11": limit_11,
            "page13": page_13,
            "query4": query_4,
            "limit12": limit_12,
            "page14": page_14,
            "limit13": limit_13,
            "page15": page_15,
            "query5": query_5,
            "limit14": limit_14,
            "page16": page_16,
            "query6": query_6,
            "limit15": limit_15,
            "page17": page_17,
            "limit16": limit_16,
            "page18": page_18,
            "language": language,
            "limit17": limit_17,
            "page19": page_19,
            "key": key,
            "limit18": limit_18,
            "page20": page_20,
            "query7": query_7,
        }
        response = self.execute(
            query=_query, operation_name="brands", variables=variables, **kwargs
        )
        data = self.get_data(response)
        return Brands.model_validate(data)

    def client_tracking_id(self, **kwargs: Any) -> ClientTrackingId:
        query = gql(
            """
            query clientTrackingId {
              clientTrackingId
            }
            """
        )
        variables: Dict[str, object] = {}
        response = self.execute(
            query=query,
            operation_name="clientTrackingId",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return ClientTrackingId.model_validate(data)

    def creative_export(
        self,
        id: str,
        validity_in_days: Union[Optional[int], UnsetType] = UNSET,
        permanent: Union[Optional[bool], UnsetType] = UNSET,
        limit: Union[Optional[int], UnsetType] = UNSET,
        page: Union[Optional[int], UnsetType] = UNSET,
        limit_1: Union[Optional[int], UnsetType] = UNSET,
        page_1: Union[Optional[int], UnsetType] = UNSET,
        query: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_2: Union[Optional[int], UnsetType] = UNSET,
        page_2: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_1: Union[Optional[int], UnsetType] = UNSET,
        permanent_1: Union[Optional[bool], UnsetType] = UNSET,
        limit_3: Union[Optional[int], UnsetType] = UNSET,
        page_3: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_2: Union[Optional[int], UnsetType] = UNSET,
        permanent_2: Union[Optional[bool], UnsetType] = UNSET,
        **kwargs: Any
    ) -> CreativeExport:
        _query = gql(
            """
            query creativeExport($validityInDays: Int, $permanent: Boolean, $limit: Int, $page: Int, $limit1: Int, $page1: Int, $query: AssetCommentQueryInput, $limit2: Int, $page2: Int, $validityInDays1: Int, $permanent1: Boolean, $limit3: Int, $page3: Int, $validityInDays2: Int, $permanent2: Boolean, $id: ID!) {
              creativeExport(id: $id) {
                id
                status
                result {
                  downloadUrl
                  pageDownloadUrls
                  asset {
                    id
                    creator {
                      __typename
                      id
                      name
                    }
                    createdAt
                    modifier {
                      __typename
                      id
                      name
                    }
                    modifiedAt
                    title
                    description
                    alternativeText
                    isDecorative
                    attachments {
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      name
                      filename
                      type
                      externalId
                      extension
                      size
                      downloadUrl(validityInDays: $validityInDays, permanent: $permanent)
                    }
                    externalId
                    tags {
                      value
                      source
                    }
                    copyright {
                      status
                      notice
                    }
                    availability {
                      from
                      to
                    }
                    expiresAt
                    licenses {
                      id
                      title
                      license
                      addByDefault
                      requireConsensus
                    }
                    author
                    status
                    relatedAssets(limit: $limit, page: $page) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        __typename
                        id
                        createdAt
                        modifiedAt
                        title
                        description
                        externalId
                        expiresAt
                        status
                      }
                    }
                    comments(limit: $limit1, page: $page1, query: $query) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        id
                        createdAt
                        modifiedAt
                        content
                        isResolved
                      }
                    }
                    currentUserPermissions {
                      canEdit
                      canDelete
                      canDownload
                      canComment
                    }
                    customMetadata {
                      __typename
                      property {
                        id
                        createdAt
                        modifiedAt
                        name
                        helpText
                        isRequired
                        defaultValue
                      }
                    }
                    workflowTask {
                      id
                      assignedUsers {
                        __typename
                        id
                        name
                      }
                      asset {
                        __typename
                        id
                        createdAt
                        modifiedAt
                        title
                        description
                        externalId
                        expiresAt
                        status
                      }
                      title
                      description
                      status {
                        id
                        name
                        enterRules
                      }
                      checklistItem(limit: $limit2, page: $page2) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                    }
                    variants(limit: $limit3, page: $page3) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        key
                        filename
                        downloadUrl(validityInDays: $validityInDays1, permanent: $permanent1)
                      }
                    }
                    location {
                      brand {
                        id
                        name
                      }
                      library {
                        id
                        name
                      }
                      workspaceProject {
                        id
                        name
                      }
                      folder {
                        id
                        name
                      }
                    }
                    previewBackgroundColor {
                      red
                      green
                      blue
                      alpha
                    }
                    filename
                    size
                    extension
                    previewUrl
                    thumbnailUrl
                    dynamicPreviewUrl
                    downloadUrl(validityInDays: $validityInDays2, permanent: $permanent2)
                  }
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {
            "validityInDays": validity_in_days,
            "permanent": permanent,
            "limit": limit,
            "page": page,
            "limit1": limit_1,
            "page1": page_1,
            "query": query,
            "limit2": limit_2,
            "page2": page_2,
            "validityInDays1": validity_in_days_1,
            "permanent1": permanent_1,
            "limit3": limit_3,
            "page3": page_3,
            "validityInDays2": validity_in_days_2,
            "permanent2": permanent_2,
            "id": id,
        }
        response = self.execute(
            query=_query, operation_name="creativeExport", variables=variables, **kwargs
        )
        data = self.get_data(response)
        return CreativeExport.model_validate(data)

    def creative_template(self, key: str, id: str, **kwargs: Any) -> CreativeTemplate:
        query = gql(
            """
            query creativeTemplate($key: String!, $id: ID!) {
              creativeTemplate(id: $id) {
                id
                brandId
                name
                description
                pages {
                  previewUrl
                  width
                  height
                  pageIndex
                  name
                }
                variable(key: $key) {
                  key
                  name
                  description
                  type
                  value
                  connectionCount
                }
                variables {
                  key
                  name
                  description
                  type
                  value
                  connectionCount
                }
                assetId
                tags {
                  value
                  source
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {"key": key, "id": id}
        response = self.execute(
            query=query,
            operation_name="creativeTemplate",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return CreativeTemplate.model_validate(data)

    def current_user(self, **kwargs: Any) -> CurrentUser:
        query = gql(
            """
            query currentUser {
              currentUser {
                __typename
                id
                name
              }
            }
            """
        )
        variables: Dict[str, object] = {}
        response = self.execute(
            query=query, operation_name="currentUser", variables=variables, **kwargs
        )
        data = self.get_data(response)
        return CurrentUser.model_validate(data)

    def guideline_page(
        self,
        id: str,
        page: Union[Optional[int], UnsetType] = UNSET,
        limit: Union[Optional[int], UnsetType] = UNSET,
        limit_1: Union[Optional[int], UnsetType] = UNSET,
        page_1: Union[Optional[int], UnsetType] = UNSET,
        language: Union[Optional[LanguageCode], UnsetType] = UNSET,
        **kwargs: Any
    ) -> GuidelinePage:
        query = gql(
            """
            query guidelinePage($page: Int, $limit: Int, $limit1: Int, $page1: Int, $id: ID!, $language: LanguageCode) {
              guidelinePage(id: $id, language: $language) {
                id
                title
                url
                sections(limit: $limit1, page: $page1) {
                  total
                  page
                  limit
                  hasNextPage
                  items {
                    id
                    elements(page: $page, limit: $limit) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        __typename
                        ... on GuidelinePageHeading {
                          id
                          title
                          lastModified
                        }
                        ... on GuidelinePageBlock {
                          id
                          content
                          url
                          lastModified
                        }
                        ... on GuidelinePageBlockReference {
                          id
                          block {
                            id
                            content
                            url
                            lastModified
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {
            "page": page,
            "limit": limit,
            "limit1": limit_1,
            "page1": page_1,
            "id": id,
            "language": language,
        }
        response = self.execute(
            query=query, operation_name="guidelinePage", variables=variables, **kwargs
        )
        data = self.get_data(response)
        return GuidelinePage.model_validate(data)

    def library(
        self,
        id: str,
        validity_in_days: Union[Optional[int], UnsetType] = UNSET,
        permanent: Union[Optional[bool], UnsetType] = UNSET,
        limit: Union[Optional[int], UnsetType] = UNSET,
        page: Union[Optional[int], UnsetType] = UNSET,
        limit_1: Union[Optional[int], UnsetType] = UNSET,
        page_1: Union[Optional[int], UnsetType] = UNSET,
        query: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_2: Union[Optional[int], UnsetType] = UNSET,
        page_2: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_1: Union[Optional[int], UnsetType] = UNSET,
        permanent_1: Union[Optional[bool], UnsetType] = UNSET,
        limit_3: Union[Optional[int], UnsetType] = UNSET,
        page_3: Union[Optional[int], UnsetType] = UNSET,
        limit_4: Union[Optional[int], UnsetType] = UNSET,
        page_4: Union[Optional[int], UnsetType] = UNSET,
        query_1: Union[Optional[AssetQueryInput], UnsetType] = UNSET,
        limit_5: Union[Optional[int], UnsetType] = UNSET,
        page_5: Union[Optional[int], UnsetType] = UNSET,
        limit_6: Union[Optional[int], UnsetType] = UNSET,
        page_6: Union[Optional[int], UnsetType] = UNSET,
        limit_7: Union[Optional[int], UnsetType] = UNSET,
        page_7: Union[Optional[int], UnsetType] = UNSET,
        limit_8: Union[Optional[int], UnsetType] = UNSET,
        page_8: Union[Optional[int], UnsetType] = UNSET,
        limit_9: Union[Optional[int], UnsetType] = UNSET,
        page_9: Union[Optional[int], UnsetType] = UNSET,
        query_2: Union[Optional[FolderAssetQueryInput], UnsetType] = UNSET,
        limit_10: Union[Optional[int], UnsetType] = UNSET,
        page_10: Union[Optional[int], UnsetType] = UNSET,
        limit_11: Union[Optional[int], UnsetType] = UNSET,
        page_11: Union[Optional[int], UnsetType] = UNSET,
        **kwargs: Any
    ) -> Library:
        _query = gql(
            """
            query library($validityInDays: Int, $permanent: Boolean, $limit: Int, $page: Int, $limit1: Int, $page1: Int, $query: AssetCommentQueryInput, $limit2: Int, $page2: Int, $validityInDays1: Int, $permanent1: Boolean, $limit3: Int, $page3: Int, $limit4: Int, $page4: Int, $query1: AssetQueryInput, $limit5: Int, $page5: Int, $limit6: Int, $page6: Int, $limit7: Int, $page7: Int, $limit8: Int, $page8: Int, $limit9: Int, $page9: Int, $query2: FolderAssetQueryInput, $limit10: Int, $page10: Int, $limit11: Int, $page11: Int, $id: ID!) {
              library(id: $id) {
                __typename
                id
                name
                color {
                  red
                  green
                  blue
                  alpha
                }
                assets(limit: $limit4, page: $page4, query: $query1) {
                  total
                  page
                  limit
                  hasNextPage
                  items {
                    __typename
                    id
                    creator {
                      __typename
                      id
                      name
                    }
                    createdAt
                    modifier {
                      __typename
                      id
                      name
                    }
                    modifiedAt
                    title
                    description
                    attachments {
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      name
                      filename
                      type
                      externalId
                      extension
                      size
                      downloadUrl(validityInDays: $validityInDays, permanent: $permanent)
                    }
                    externalId
                    tags {
                      value
                      source
                    }
                    copyright {
                      status
                      notice
                    }
                    availability {
                      from
                      to
                    }
                    expiresAt
                    licenses {
                      id
                      title
                      license
                      addByDefault
                      requireConsensus
                    }
                    status
                    relatedAssets(limit: $limit, page: $page) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        __typename
                        id
                        createdAt
                        modifiedAt
                        title
                        description
                        externalId
                        expiresAt
                        status
                      }
                    }
                    comments(limit: $limit1, page: $page1, query: $query) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        id
                        createdAt
                        modifiedAt
                        content
                        isResolved
                      }
                    }
                    currentUserPermissions {
                      canEdit
                      canDelete
                      canDownload
                      canComment
                    }
                    customMetadata {
                      __typename
                      property {
                        id
                        createdAt
                        modifiedAt
                        name
                        helpText
                        isRequired
                        defaultValue
                      }
                    }
                    workflowTask {
                      id
                      assignedUsers {
                        __typename
                        id
                        name
                      }
                      asset {
                        __typename
                        id
                        createdAt
                        modifiedAt
                        title
                        description
                        externalId
                        expiresAt
                        status
                      }
                      title
                      description
                      status {
                        id
                        name
                        enterRules
                      }
                      checklistItem(limit: $limit2, page: $page2) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                    }
                    variants(limit: $limit3, page: $page3) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        key
                        filename
                        downloadUrl(validityInDays: $validityInDays1, permanent: $permanent1)
                      }
                    }
                    location {
                      brand {
                        id
                        name
                      }
                      library {
                        id
                        name
                      }
                      workspaceProject {
                        id
                        name
                      }
                      folder {
                        id
                        name
                      }
                    }
                    previewBackgroundColor {
                      red
                      green
                      blue
                      alpha
                    }
                  }
                }
                licenses {
                  id
                  title
                  license
                  addByDefault
                  requireConsensus
                }
                collections(limit: $limit6, page: $page6) {
                  total
                  page
                  limit
                  hasNextPage
                  items {
                    id
                    name
                    assets(limit: $limit5, page: $page5) {
                      total
                      page
                      limit
                      hasNextPage
                    }
                  }
                }
                browse {
                  folders(limit: $limit8, page: $page8) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      __typename
                      id
                      name
                      createdAt
                      modifiedAt
                      breadcrumbs {
                        id
                        name
                      }
                      folders(limit: $limit7, page: $page7) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                    }
                  }
                  assets(limit: $limit9, page: $page9, query: $query2) {
                    total
                    page
                    limit
                    hasNextPage
                  }
                }
                collaborators {
                  users(limit: $limit10, page: $page10) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      __typename
                      id
                      name
                    }
                    edges {
                      node {
                        __typename
                        id
                        name
                      }
                      role
                    }
                  }
                }
                currentUserPermissions {
                  canCreateAssets
                  canViewCollaborators
                  canCreateCollections
                }
                workflow {
                  id
                  statuses {
                    id
                    name
                    color {
                      red
                      green
                      blue
                      alpha
                    }
                    assignedUsers {
                      __typename
                      id
                      name
                    }
                    checklistPresets {
                      id
                      content
                      assignedUser {
                        __typename
                        id
                        name
                      }
                    }
                    tasks(limit: $limit11, page: $page11) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        id
                        title
                        description
                      }
                    }
                    enterRules
                  }
                }
                customMetadataProperties {
                  id
                  creator {
                    __typename
                    id
                    name
                  }
                  createdAt
                  modifier {
                    __typename
                    id
                    name
                  }
                  modifiedAt
                  name
                  type {
                    __typename
                    name
                  }
                  helpText
                  isRequired
                  defaultValue
                }
                assetSubmissionRequests {
                  id
                  creator {
                    __typename
                    id
                    name
                  }
                  createdAt
                  modifier {
                    __typename
                    id
                    name
                  }
                  modifiedAt
                  projectId
                  title
                  description
                  configuration
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {
            "validityInDays": validity_in_days,
            "permanent": permanent,
            "limit": limit,
            "page": page,
            "limit1": limit_1,
            "page1": page_1,
            "query": query,
            "limit2": limit_2,
            "page2": page_2,
            "validityInDays1": validity_in_days_1,
            "permanent1": permanent_1,
            "limit3": limit_3,
            "page3": page_3,
            "limit4": limit_4,
            "page4": page_4,
            "query1": query_1,
            "limit5": limit_5,
            "page5": page_5,
            "limit6": limit_6,
            "page6": page_6,
            "limit7": limit_7,
            "page7": page_7,
            "limit8": limit_8,
            "page8": page_8,
            "limit9": limit_9,
            "page9": page_9,
            "query2": query_2,
            "limit10": limit_10,
            "page10": page_10,
            "limit11": limit_11,
            "page11": page_11,
            "id": id,
        }
        response = self.execute(
            query=_query, operation_name="library", variables=variables, **kwargs
        )
        data = self.get_data(response)
        return Library.model_validate(data)

    def node(self, id: str, **kwargs: Any) -> Node:
        query = gql(
            """
            query node($id: ID!) {
              node(id: $id) {
                __typename
                id
              }
            }
            """
        )
        variables: Dict[str, object] = {"id": id}
        response = self.execute(
            query=query, operation_name="node", variables=variables, **kwargs
        )
        data = self.get_data(response)
        return Node.model_validate(data)

    def webhooks(
        self,
        limit: Union[Optional[int], UnsetType] = UNSET,
        page: Union[Optional[int], UnsetType] = UNSET,
        **kwargs: Any
    ) -> Webhooks:
        query = gql(
            """
            query webhooks($limit: Int, $page: Int) {
              webhooks(limit: $limit, page: $page) {
                total
                page
                limit
                hasNextPage
                items {
                  __typename
                  id
                  creator {
                    __typename
                    id
                    name
                  }
                  createdAt
                  name
                  notificationUrl
                  secret
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {"limit": limit, "page": page}
        response = self.execute(
            query=query, operation_name="webhooks", variables=variables, **kwargs
        )
        data = self.get_data(response)
        return Webhooks.model_validate(data)

    def workspace_project(
        self,
        id: str,
        validity_in_days: Union[Optional[int], UnsetType] = UNSET,
        permanent: Union[Optional[bool], UnsetType] = UNSET,
        limit: Union[Optional[int], UnsetType] = UNSET,
        page: Union[Optional[int], UnsetType] = UNSET,
        limit_1: Union[Optional[int], UnsetType] = UNSET,
        page_1: Union[Optional[int], UnsetType] = UNSET,
        query: Union[Optional[AssetCommentQueryInput], UnsetType] = UNSET,
        limit_2: Union[Optional[int], UnsetType] = UNSET,
        page_2: Union[Optional[int], UnsetType] = UNSET,
        validity_in_days_1: Union[Optional[int], UnsetType] = UNSET,
        permanent_1: Union[Optional[bool], UnsetType] = UNSET,
        limit_3: Union[Optional[int], UnsetType] = UNSET,
        page_3: Union[Optional[int], UnsetType] = UNSET,
        limit_4: Union[Optional[int], UnsetType] = UNSET,
        page_4: Union[Optional[int], UnsetType] = UNSET,
        query_1: Union[Optional[AssetQueryInput], UnsetType] = UNSET,
        limit_5: Union[Optional[int], UnsetType] = UNSET,
        page_5: Union[Optional[int], UnsetType] = UNSET,
        limit_6: Union[Optional[int], UnsetType] = UNSET,
        page_6: Union[Optional[int], UnsetType] = UNSET,
        limit_7: Union[Optional[int], UnsetType] = UNSET,
        page_7: Union[Optional[int], UnsetType] = UNSET,
        query_2: Union[Optional[FolderAssetQueryInput], UnsetType] = UNSET,
        limit_8: Union[Optional[int], UnsetType] = UNSET,
        page_8: Union[Optional[int], UnsetType] = UNSET,
        limit_9: Union[Optional[int], UnsetType] = UNSET,
        page_9: Union[Optional[int], UnsetType] = UNSET,
        query_3: Union[Optional[FolderAssetQueryInput], UnsetType] = UNSET,
        limit_10: Union[Optional[int], UnsetType] = UNSET,
        page_10: Union[Optional[int], UnsetType] = UNSET,
        **kwargs: Any
    ) -> WorkspaceProject:
        _query = gql(
            """
            query workspaceProject($validityInDays: Int, $permanent: Boolean, $limit: Int, $page: Int, $limit1: Int, $page1: Int, $query: AssetCommentQueryInput, $limit2: Int, $page2: Int, $validityInDays1: Int, $permanent1: Boolean, $limit3: Int, $page3: Int, $limit4: Int, $page4: Int, $query1: AssetQueryInput, $limit5: Int, $page5: Int, $limit6: Int, $page6: Int, $limit7: Int, $page7: Int, $query2: FolderAssetQueryInput, $limit8: Int, $page8: Int, $limit9: Int, $page9: Int, $query3: FolderAssetQueryInput, $limit10: Int, $page10: Int, $id: ID!) {
              workspaceProject(id: $id) {
                id
                name
                color {
                  red
                  green
                  blue
                  alpha
                }
                assets(limit: $limit4, page: $page4, query: $query1) {
                  total
                  page
                  limit
                  hasNextPage
                  items {
                    __typename
                    id
                    creator {
                      __typename
                      id
                      name
                    }
                    createdAt
                    modifier {
                      __typename
                      id
                      name
                    }
                    modifiedAt
                    title
                    description
                    attachments {
                      id
                      creator {
                        __typename
                        id
                        name
                      }
                      createdAt
                      modifier {
                        __typename
                        id
                        name
                      }
                      modifiedAt
                      name
                      filename
                      type
                      externalId
                      extension
                      size
                      downloadUrl(validityInDays: $validityInDays, permanent: $permanent)
                    }
                    externalId
                    tags {
                      value
                      source
                    }
                    copyright {
                      status
                      notice
                    }
                    availability {
                      from
                      to
                    }
                    expiresAt
                    licenses {
                      id
                      title
                      license
                      addByDefault
                      requireConsensus
                    }
                    status
                    relatedAssets(limit: $limit, page: $page) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        __typename
                        id
                        createdAt
                        modifiedAt
                        title
                        description
                        externalId
                        expiresAt
                        status
                      }
                    }
                    comments(limit: $limit1, page: $page1, query: $query) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        id
                        createdAt
                        modifiedAt
                        content
                        isResolved
                      }
                    }
                    currentUserPermissions {
                      canEdit
                      canDelete
                      canDownload
                      canComment
                    }
                    customMetadata {
                      __typename
                      property {
                        id
                        createdAt
                        modifiedAt
                        name
                        helpText
                        isRequired
                        defaultValue
                      }
                    }
                    workflowTask {
                      id
                      assignedUsers {
                        __typename
                        id
                        name
                      }
                      asset {
                        __typename
                        id
                        createdAt
                        modifiedAt
                        title
                        description
                        externalId
                        expiresAt
                        status
                      }
                      title
                      description
                      status {
                        id
                        name
                        enterRules
                      }
                      checklistItem(limit: $limit2, page: $page2) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                    }
                    variants(limit: $limit3, page: $page3) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        key
                        filename
                        downloadUrl(validityInDays: $validityInDays1, permanent: $permanent1)
                      }
                    }
                    location {
                      brand {
                        id
                        name
                      }
                      library {
                        id
                        name
                      }
                      workspaceProject {
                        id
                        name
                      }
                      folder {
                        id
                        name
                      }
                    }
                    previewBackgroundColor {
                      red
                      green
                      blue
                      alpha
                    }
                  }
                }
                licenses {
                  id
                  title
                  license
                  addByDefault
                  requireConsensus
                }
                workflow {
                  id
                  statuses {
                    id
                    name
                    color {
                      red
                      green
                      blue
                      alpha
                    }
                    assignedUsers {
                      __typename
                      id
                      name
                    }
                    checklistPresets {
                      id
                      content
                      assignedUser {
                        __typename
                        id
                        name
                      }
                    }
                    tasks(limit: $limit5, page: $page5) {
                      total
                      page
                      limit
                      hasNextPage
                      items {
                        id
                        title
                        description
                      }
                    }
                    enterRules
                  }
                }
                browse {
                  folders(limit: $limit8, page: $page8) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      __typename
                      id
                      name
                      createdAt
                      modifiedAt
                      breadcrumbs {
                        id
                        name
                      }
                      folders(limit: $limit6, page: $page6) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                      assets(limit: $limit7, page: $page7, query: $query2) {
                        total
                        page
                        limit
                        hasNextPage
                      }
                    }
                  }
                  assets(limit: $limit9, page: $page9, query: $query3) {
                    total
                    page
                    limit
                    hasNextPage
                  }
                }
                collaborators {
                  users(limit: $limit10, page: $page10) {
                    total
                    page
                    limit
                    hasNextPage
                    items {
                      __typename
                      id
                      name
                    }
                    edges {
                      node {
                        __typename
                        id
                        name
                      }
                      role
                    }
                  }
                }
                currentUserPermissions {
                  canCreateAssets
                  canViewCollaborators
                }
                isArchived
              }
            }
            """
        )
        variables: Dict[str, object] = {
            "validityInDays": validity_in_days,
            "permanent": permanent,
            "limit": limit,
            "page": page,
            "limit1": limit_1,
            "page1": page_1,
            "query": query,
            "limit2": limit_2,
            "page2": page_2,
            "validityInDays1": validity_in_days_1,
            "permanent1": permanent_1,
            "limit3": limit_3,
            "page3": page_3,
            "limit4": limit_4,
            "page4": page_4,
            "query1": query_1,
            "limit5": limit_5,
            "page5": page_5,
            "limit6": limit_6,
            "page6": page_6,
            "limit7": limit_7,
            "page7": page_7,
            "query2": query_2,
            "limit8": limit_8,
            "page8": page_8,
            "limit9": limit_9,
            "page9": page_9,
            "query3": query_3,
            "limit10": limit_10,
            "page10": page_10,
            "id": id,
        }
        response = self.execute(
            query=_query,
            operation_name="workspaceProject",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return WorkspaceProject.model_validate(data)
