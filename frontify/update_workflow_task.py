# Generated by ariadne-codegen
# Source: queries-mutations

from typing import Any, List, Literal, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import AssetStatusType, CopyrightStatus, TagSource, WorkflowStatusEnterRule


class UpdateWorkflowTask(BaseModel):
    update_workflow_task: Optional["UpdateWorkflowTaskUpdateWorkflowTask"] = Field(
        alias="updateWorkflowTask"
    )


class UpdateWorkflowTaskUpdateWorkflowTask(BaseModel):
    workflow_task: Optional["UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTask"] = Field(
        alias="workflowTask"
    )


class UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTask(BaseModel):
    id: str
    assigned_users: List[
        Optional["UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssignedUsers"]
    ] = Field(alias="assignedUsers")
    asset: Optional["UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAsset"]
    title: Optional[str]
    description: Optional[str]


class UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssignedUsers(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAsset(BaseModel):
    typename__: Literal[
        "Asset", "Audio", "Document", "EmbeddedContent", "File", "Image", "Video"
    ] = Field(alias="__typename")
    id: str
    creator: "UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetCreator"
    created_at: Any = Field(alias="createdAt")
    modifier: Optional["UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetModifier"]
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    attachments: Optional[
        List[
            Optional["UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetAttachments"]
        ]
    ]
    external_id: Optional[str] = Field(alias="externalId")
    tags: Optional[
        List[Optional["UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetTags"]]
    ]
    copyright: Optional[
        "UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetCopyright"
    ]
    availability: "UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetAvailability"
    expires_at: Optional[Any] = Field(alias="expiresAt")
    licenses: Optional[
        List[Optional["UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetLicenses"]]
    ]
    status: AssetStatusType
    related_assets: (
        "UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetRelatedAssets"
    ) = Field(alias="relatedAssets")
    comments: Optional["UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetComments"]
    current_user_permissions: (
        "UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetCurrentUserPermissions"
    ) = Field(alias="currentUserPermissions")
    custom_metadata: List[
        "UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetCustomMetadata"
    ] = Field(alias="customMetadata")
    workflow_task: Optional[
        "UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetWorkflowTask"
    ] = Field(alias="workflowTask")
    variants: Optional["UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetVariants"]
    location: "UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetLocation"
    preview_background_color: Optional[
        "UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetPreviewBackgroundColor"
    ] = Field(alias="previewBackgroundColor")


class UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetCreator(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetModifier(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetAttachments(BaseModel):
    id: str
    creator: "UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetAttachmentsCreator"
    created_at: Any = Field(alias="createdAt")
    modifier: Optional[
        "UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetAttachmentsModifier"
    ]
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    name: Optional[str]
    filename: Optional[str]
    type: Optional[str]
    external_id: Optional[str] = Field(alias="externalId")
    extension: Optional[str]
    size: Optional[Any]
    download_url: Optional[Any] = Field(alias="downloadUrl")


class UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetAttachmentsCreator(
    BaseModel
):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetAttachmentsModifier(
    BaseModel
):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetTags(BaseModel):
    value: str
    source: Optional[TagSource]


class UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetCopyright(BaseModel):
    status: CopyrightStatus
    notice: Optional[str]


class UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetAvailability(BaseModel):
    from_: Optional[Any] = Field(alias="from")
    to: Optional[Any]


class UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetLicenses(BaseModel):
    id: str
    title: str
    license: str
    add_by_default: bool = Field(alias="addByDefault")
    require_consensus: bool = Field(alias="requireConsensus")


class UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetRelatedAssets(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")
    items: Optional[
        List[
            Optional[
                "UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetRelatedAssetsItems"
            ]
        ]
    ]


class UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetRelatedAssetsItems(
    BaseModel
):
    typename__: Literal[
        "Asset", "Audio", "Document", "EmbeddedContent", "File", "Image", "Video"
    ] = Field(alias="__typename")
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    external_id: Optional[str] = Field(alias="externalId")
    expires_at: Optional[Any] = Field(alias="expiresAt")
    status: AssetStatusType


class UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetComments(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")
    items: Optional[
        List[
            Optional[
                "UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetCommentsItems"
            ]
        ]
    ]


class UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetCommentsItems(BaseModel):
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    content: str
    is_resolved: bool = Field(alias="isResolved")


class UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetCurrentUserPermissions(
    BaseModel
):
    can_edit: bool = Field(alias="canEdit")
    can_delete: bool = Field(alias="canDelete")
    can_download: bool = Field(alias="canDownload")
    can_comment: bool = Field(alias="canComment")


class UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetCustomMetadata(BaseModel):
    typename__: Literal[
        "CustomMetadata", "CustomMetadataValue", "CustomMetadataValues"
    ] = Field(alias="__typename")
    property: (
        "UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetCustomMetadataProperty"
    )


class UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetCustomMetadataProperty(
    BaseModel
):
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    name: str
    help_text: Optional[str] = Field(alias="helpText")
    is_required: bool = Field(alias="isRequired")
    default_value: Optional[Any] = Field(alias="defaultValue")


class UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetWorkflowTask(BaseModel):
    id: str
    title: Optional[str]
    description: Optional[str]
    status: "UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetWorkflowTaskStatus"
    checklist_item: (
        "UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetWorkflowTaskChecklistItem"
    ) = Field(alias="checklistItem")


class UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetWorkflowTaskStatus(
    BaseModel
):
    id: str
    name: str
    enter_rules: List[Optional[WorkflowStatusEnterRule]] = Field(alias="enterRules")


class UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetWorkflowTaskChecklistItem(
    BaseModel
):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetVariants(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")
    items: List[
        Optional["UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetVariantsItems"]
    ]


class UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetVariantsItems(BaseModel):
    key: str
    filename: Optional[str]
    download_url: Optional[Any] = Field(alias="downloadUrl")


class UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetLocation(BaseModel):
    brand: Optional[
        "UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetLocationBrand"
    ]
    library: Optional[
        "UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetLocationLibrary"
    ]
    workspace_project: Optional[
        "UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetLocationWorkspaceProject"
    ] = Field(alias="workspaceProject")
    folder: Optional[
        "UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetLocationFolder"
    ]


class UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetLocationBrand(BaseModel):
    id: str
    name: str


class UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetLocationLibrary(BaseModel):
    id: str
    name: Optional[str]


class UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetLocationWorkspaceProject(
    BaseModel
):
    id: str
    name: Optional[str]


class UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetLocationFolder(BaseModel):
    id: str
    name: str


class UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetPreviewBackgroundColor(
    BaseModel
):
    red: Any
    green: Any
    blue: Any
    alpha: Any


UpdateWorkflowTask.model_rebuild()
UpdateWorkflowTaskUpdateWorkflowTask.model_rebuild()
UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTask.model_rebuild()
UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAsset.model_rebuild()
UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetAttachments.model_rebuild()
UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetRelatedAssets.model_rebuild()
UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetComments.model_rebuild()
UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetCustomMetadata.model_rebuild()
UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetWorkflowTask.model_rebuild()
UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetVariants.model_rebuild()
UpdateWorkflowTaskUpdateWorkflowTaskWorkflowTaskAssetLocation.model_rebuild()
