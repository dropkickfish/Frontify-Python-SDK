# Generated by ariadne-codegen
# Source: queries-mutations

from typing import Any, List, Literal, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import AssetStatusType, CopyrightStatus, TagSource


class AddCollectionAssets(BaseModel):
    add_collection_assets: Optional["AddCollectionAssetsAddCollectionAssets"] = Field(
        alias="addCollectionAssets"
    )


class AddCollectionAssetsAddCollectionAssets(BaseModel):
    collection: Optional["AddCollectionAssetsAddCollectionAssetsCollection"]


class AddCollectionAssetsAddCollectionAssetsCollection(BaseModel):
    id: str
    name: str
    assets: "AddCollectionAssetsAddCollectionAssetsCollectionAssets"
    current_user_permissions: (
        "AddCollectionAssetsAddCollectionAssetsCollectionCurrentUserPermissions"
    ) = Field(alias="currentUserPermissions")


class AddCollectionAssetsAddCollectionAssetsCollectionAssets(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")
    items: Optional[
        List[Optional["AddCollectionAssetsAddCollectionAssetsCollectionAssetsItems"]]
    ]


class AddCollectionAssetsAddCollectionAssetsCollectionAssetsItems(BaseModel):
    typename__: Literal[
        "Asset", "Audio", "Document", "EmbeddedContent", "File", "Image", "Video"
    ] = Field(alias="__typename")
    id: str
    creator: "AddCollectionAssetsAddCollectionAssetsCollectionAssetsItemsCreator"
    created_at: Any = Field(alias="createdAt")
    modifier: Optional[
        "AddCollectionAssetsAddCollectionAssetsCollectionAssetsItemsModifier"
    ]
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    attachments: Optional[
        List[
            Optional[
                "AddCollectionAssetsAddCollectionAssetsCollectionAssetsItemsAttachments"
            ]
        ]
    ]
    external_id: Optional[str] = Field(alias="externalId")
    tags: Optional[
        List[
            Optional["AddCollectionAssetsAddCollectionAssetsCollectionAssetsItemsTags"]
        ]
    ]
    copyright: Optional[
        "AddCollectionAssetsAddCollectionAssetsCollectionAssetsItemsCopyright"
    ]
    expires_at: Optional[Any] = Field(alias="expiresAt")
    licenses: Optional[
        List[
            Optional[
                "AddCollectionAssetsAddCollectionAssetsCollectionAssetsItemsLicenses"
            ]
        ]
    ]
    status: AssetStatusType
    related_assets: (
        "AddCollectionAssetsAddCollectionAssetsCollectionAssetsItemsRelatedAssets"
    ) = Field(alias="relatedAssets")
    comments: Optional[
        "AddCollectionAssetsAddCollectionAssetsCollectionAssetsItemsComments"
    ]
    current_user_permissions: (
        "AddCollectionAssetsAddCollectionAssetsCollectionAssetsItemsCurrentUserPermissions"
    ) = Field(alias="currentUserPermissions")


class AddCollectionAssetsAddCollectionAssetsCollectionAssetsItemsCreator(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    email: Any
    name: Optional[str]
    avatar: Optional[Any]


class AddCollectionAssetsAddCollectionAssetsCollectionAssetsItemsModifier(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    email: Any
    name: Optional[str]
    avatar: Optional[Any]


class AddCollectionAssetsAddCollectionAssetsCollectionAssetsItemsAttachments(BaseModel):
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    name: Optional[str]
    filename: Optional[str]
    type: Optional[str]
    external_id: Optional[str] = Field(alias="externalId")
    extension: Optional[str]
    size: Optional[Any]
    download_url: Optional[Any] = Field(alias="downloadUrl")


class AddCollectionAssetsAddCollectionAssetsCollectionAssetsItemsTags(BaseModel):
    value: str
    source: Optional[TagSource]


class AddCollectionAssetsAddCollectionAssetsCollectionAssetsItemsCopyright(BaseModel):
    status: CopyrightStatus
    notice: Optional[str]


class AddCollectionAssetsAddCollectionAssetsCollectionAssetsItemsLicenses(BaseModel):
    id: str
    title: str
    license: str
    add_by_default: bool = Field(alias="addByDefault")
    require_consensus: bool = Field(alias="requireConsensus")


class AddCollectionAssetsAddCollectionAssetsCollectionAssetsItemsRelatedAssets(
    BaseModel
):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class AddCollectionAssetsAddCollectionAssetsCollectionAssetsItemsComments(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class AddCollectionAssetsAddCollectionAssetsCollectionAssetsItemsCurrentUserPermissions(
    BaseModel
):
    can_edit: bool = Field(alias="canEdit")
    can_delete: bool = Field(alias="canDelete")
    can_download: bool = Field(alias="canDownload")
    can_comment: bool = Field(alias="canComment")


class AddCollectionAssetsAddCollectionAssetsCollectionCurrentUserPermissions(BaseModel):
    can_add_assets: bool = Field(alias="canAddAssets")
    can_remove_assets: bool = Field(alias="canRemoveAssets")


AddCollectionAssets.model_rebuild()
AddCollectionAssetsAddCollectionAssets.model_rebuild()
AddCollectionAssetsAddCollectionAssetsCollection.model_rebuild()
AddCollectionAssetsAddCollectionAssetsCollectionAssets.model_rebuild()
AddCollectionAssetsAddCollectionAssetsCollectionAssetsItems.model_rebuild()
