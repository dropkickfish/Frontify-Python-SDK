# Generated by ariadne-codegen
# Source: queries-mutations

from typing import Any, List, Literal, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import AssetStatusType, CopyrightStatus, TagSource


class Assets(BaseModel):
    assets: Optional[List[Optional["AssetsAssets"]]]


class AssetsAssets(BaseModel):
    typename__: Literal[
        "Asset", "Audio", "Document", "EmbeddedContent", "File", "Image", "Video"
    ] = Field(alias="__typename")
    id: str
    creator: "AssetsAssetsCreator"
    created_at: Any = Field(alias="createdAt")
    modifier: Optional["AssetsAssetsModifier"]
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    attachments: Optional[List[Optional["AssetsAssetsAttachments"]]]
    external_id: Optional[str] = Field(alias="externalId")
    tags: Optional[List[Optional["AssetsAssetsTags"]]]
    copyright: Optional["AssetsAssetsCopyright"]
    expires_at: Optional[Any] = Field(alias="expiresAt")
    licenses: Optional[List[Optional["AssetsAssetsLicenses"]]]
    status: AssetStatusType
    related_assets: "AssetsAssetsRelatedAssets" = Field(alias="relatedAssets")
    comments: Optional["AssetsAssetsComments"]
    current_user_permissions: "AssetsAssetsCurrentUserPermissions" = Field(
        alias="currentUserPermissions"
    )


class AssetsAssetsCreator(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    email: Any
    name: Optional[str]
    avatar: Optional[Any]


class AssetsAssetsModifier(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    email: Any
    name: Optional[str]
    avatar: Optional[Any]


class AssetsAssetsAttachments(BaseModel):
    id: str
    creator: "AssetsAssetsAttachmentsCreator"
    created_at: Any = Field(alias="createdAt")
    modifier: Optional["AssetsAssetsAttachmentsModifier"]
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    name: Optional[str]
    filename: Optional[str]
    type: Optional[str]
    external_id: Optional[str] = Field(alias="externalId")
    extension: Optional[str]
    size: Optional[Any]
    download_url: Optional[Any] = Field(alias="downloadUrl")


class AssetsAssetsAttachmentsCreator(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    email: Any
    name: Optional[str]
    avatar: Optional[Any]


class AssetsAssetsAttachmentsModifier(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    email: Any
    name: Optional[str]
    avatar: Optional[Any]


class AssetsAssetsTags(BaseModel):
    value: str
    source: Optional[TagSource]


class AssetsAssetsCopyright(BaseModel):
    status: CopyrightStatus
    notice: Optional[str]


class AssetsAssetsLicenses(BaseModel):
    id: str
    title: str
    license: str
    add_by_default: bool = Field(alias="addByDefault")
    require_consensus: bool = Field(alias="requireConsensus")


class AssetsAssetsRelatedAssets(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")
    items: Optional[List[Optional["AssetsAssetsRelatedAssetsItems"]]]


class AssetsAssetsRelatedAssetsItems(BaseModel):
    typename__: Literal[
        "Asset", "Audio", "Document", "EmbeddedContent", "File", "Image", "Video"
    ] = Field(alias="__typename")
    id: str
    creator: "AssetsAssetsRelatedAssetsItemsCreator"
    created_at: Any = Field(alias="createdAt")
    modifier: Optional["AssetsAssetsRelatedAssetsItemsModifier"]
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    attachments: Optional[List[Optional["AssetsAssetsRelatedAssetsItemsAttachments"]]]
    external_id: Optional[str] = Field(alias="externalId")
    tags: Optional[List[Optional["AssetsAssetsRelatedAssetsItemsTags"]]]
    copyright: Optional["AssetsAssetsRelatedAssetsItemsCopyright"]
    expires_at: Optional[Any] = Field(alias="expiresAt")
    licenses: Optional[List[Optional["AssetsAssetsRelatedAssetsItemsLicenses"]]]
    status: AssetStatusType
    related_assets: "AssetsAssetsRelatedAssetsItemsRelatedAssets" = Field(
        alias="relatedAssets"
    )
    comments: Optional["AssetsAssetsRelatedAssetsItemsComments"]
    current_user_permissions: "AssetsAssetsRelatedAssetsItemsCurrentUserPermissions" = (
        Field(alias="currentUserPermissions")
    )
    custom_metadata: List["AssetsAssetsRelatedAssetsItemsCustomMetadata"] = Field(
        alias="customMetadata"
    )
    location: "AssetsAssetsRelatedAssetsItemsLocation"


class AssetsAssetsRelatedAssetsItemsCreator(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    email: Any
    name: Optional[str]
    avatar: Optional[Any]


class AssetsAssetsRelatedAssetsItemsModifier(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    email: Any
    name: Optional[str]
    avatar: Optional[Any]


class AssetsAssetsRelatedAssetsItemsAttachments(BaseModel):
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    name: Optional[str]
    filename: Optional[str]
    type: Optional[str]
    external_id: Optional[str] = Field(alias="externalId")
    extension: Optional[str]
    size: Optional[Any]
    download_url: Optional[Any] = Field(alias="downloadUrl")


class AssetsAssetsRelatedAssetsItemsTags(BaseModel):
    value: str
    source: Optional[TagSource]


class AssetsAssetsRelatedAssetsItemsCopyright(BaseModel):
    status: CopyrightStatus
    notice: Optional[str]


class AssetsAssetsRelatedAssetsItemsLicenses(BaseModel):
    id: str
    title: str
    license: str
    add_by_default: bool = Field(alias="addByDefault")
    require_consensus: bool = Field(alias="requireConsensus")


class AssetsAssetsRelatedAssetsItemsRelatedAssets(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class AssetsAssetsRelatedAssetsItemsComments(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")
    items: Optional[List[Optional["AssetsAssetsRelatedAssetsItemsCommentsItems"]]]


class AssetsAssetsRelatedAssetsItemsCommentsItems(BaseModel):
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    content: str
    is_resolved: bool = Field(alias="isResolved")


class AssetsAssetsRelatedAssetsItemsCurrentUserPermissions(BaseModel):
    can_edit: bool = Field(alias="canEdit")
    can_delete: bool = Field(alias="canDelete")
    can_download: bool = Field(alias="canDownload")
    can_comment: bool = Field(alias="canComment")


class AssetsAssetsRelatedAssetsItemsCustomMetadata(BaseModel):
    typename__: Literal[
        "CustomMetadata", "CustomMetadataValue", "CustomMetadataValues"
    ] = Field(alias="__typename")
    property: "AssetsAssetsRelatedAssetsItemsCustomMetadataProperty"


class AssetsAssetsRelatedAssetsItemsCustomMetadataProperty(BaseModel):
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    name: str
    help_text: Optional[str] = Field(alias="helpText")
    is_required: bool = Field(alias="isRequired")
    default_value: Optional[Any] = Field(alias="defaultValue")


class AssetsAssetsRelatedAssetsItemsLocation(BaseModel):
    brand: Optional["AssetsAssetsRelatedAssetsItemsLocationBrand"]
    library: Optional["AssetsAssetsRelatedAssetsItemsLocationLibrary"]
    workspace_project: Optional[
        "AssetsAssetsRelatedAssetsItemsLocationWorkspaceProject"
    ] = Field(alias="workspaceProject")
    folder: Optional["AssetsAssetsRelatedAssetsItemsLocationFolder"]


class AssetsAssetsRelatedAssetsItemsLocationBrand(BaseModel):
    id: str
    name: str


class AssetsAssetsRelatedAssetsItemsLocationLibrary(BaseModel):
    id: str
    name: Optional[str]


class AssetsAssetsRelatedAssetsItemsLocationWorkspaceProject(BaseModel):
    id: str
    name: Optional[str]


class AssetsAssetsRelatedAssetsItemsLocationFolder(BaseModel):
    id: str
    name: str


class AssetsAssetsComments(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class AssetsAssetsCurrentUserPermissions(BaseModel):
    can_edit: bool = Field(alias="canEdit")
    can_delete: bool = Field(alias="canDelete")
    can_download: bool = Field(alias="canDownload")
    can_comment: bool = Field(alias="canComment")


Assets.model_rebuild()
AssetsAssets.model_rebuild()
AssetsAssetsAttachments.model_rebuild()
AssetsAssetsRelatedAssets.model_rebuild()
AssetsAssetsRelatedAssetsItems.model_rebuild()
AssetsAssetsRelatedAssetsItemsComments.model_rebuild()
AssetsAssetsRelatedAssetsItemsCustomMetadata.model_rebuild()
AssetsAssetsRelatedAssetsItemsLocation.model_rebuild()
