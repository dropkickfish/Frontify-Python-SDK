# Generated by ariadne-codegen
# Source: queries-mutations

from typing import Any, List, Literal, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import AssetStatusType, WorkflowStatusEnterRule


class RemoveWorkflowStatusAssignees(BaseModel):
    remove_workflow_status_assignees: Optional[
        "RemoveWorkflowStatusAssigneesRemoveWorkflowStatusAssignees"
    ] = Field(alias="removeWorkflowStatusAssignees")


class RemoveWorkflowStatusAssigneesRemoveWorkflowStatusAssignees(BaseModel):
    workflow_status: Optional[
        "RemoveWorkflowStatusAssigneesRemoveWorkflowStatusAssigneesWorkflowStatus"
    ] = Field(alias="workflowStatus")


class RemoveWorkflowStatusAssigneesRemoveWorkflowStatusAssigneesWorkflowStatus(
    BaseModel
):
    id: str
    name: str
    color: (
        "RemoveWorkflowStatusAssigneesRemoveWorkflowStatusAssigneesWorkflowStatusColor"
    )
    assigned_users: List[
        Optional[
            "RemoveWorkflowStatusAssigneesRemoveWorkflowStatusAssigneesWorkflowStatusAssignedUsers"
        ]
    ] = Field(alias="assignedUsers")
    checklist_presets: List[
        Optional[
            "RemoveWorkflowStatusAssigneesRemoveWorkflowStatusAssigneesWorkflowStatusChecklistPresets"
        ]
    ] = Field(alias="checklistPresets")
    tasks: (
        "RemoveWorkflowStatusAssigneesRemoveWorkflowStatusAssigneesWorkflowStatusTasks"
    )
    enter_rules: List[Optional[WorkflowStatusEnterRule]] = Field(alias="enterRules")


class RemoveWorkflowStatusAssigneesRemoveWorkflowStatusAssigneesWorkflowStatusColor(
    BaseModel
):
    red: Any
    green: Any
    blue: Any
    alpha: Any


class RemoveWorkflowStatusAssigneesRemoveWorkflowStatusAssigneesWorkflowStatusAssignedUsers(
    BaseModel
):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class RemoveWorkflowStatusAssigneesRemoveWorkflowStatusAssigneesWorkflowStatusChecklistPresets(
    BaseModel
):
    id: str
    content: str
    assigned_user: Optional[
        "RemoveWorkflowStatusAssigneesRemoveWorkflowStatusAssigneesWorkflowStatusChecklistPresetsAssignedUser"
    ] = Field(alias="assignedUser")


class RemoveWorkflowStatusAssigneesRemoveWorkflowStatusAssigneesWorkflowStatusChecklistPresetsAssignedUser(
    BaseModel
):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class RemoveWorkflowStatusAssigneesRemoveWorkflowStatusAssigneesWorkflowStatusTasks(
    BaseModel
):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")
    items: Optional[
        List[
            Optional[
                "RemoveWorkflowStatusAssigneesRemoveWorkflowStatusAssigneesWorkflowStatusTasksItems"
            ]
        ]
    ]


class RemoveWorkflowStatusAssigneesRemoveWorkflowStatusAssigneesWorkflowStatusTasksItems(
    BaseModel
):
    id: str
    assigned_users: List[
        Optional[
            "RemoveWorkflowStatusAssigneesRemoveWorkflowStatusAssigneesWorkflowStatusTasksItemsAssignedUsers"
        ]
    ] = Field(alias="assignedUsers")
    asset: Optional[
        "RemoveWorkflowStatusAssigneesRemoveWorkflowStatusAssigneesWorkflowStatusTasksItemsAsset"
    ]
    title: Optional[str]
    description: Optional[str]
    status: "RemoveWorkflowStatusAssigneesRemoveWorkflowStatusAssigneesWorkflowStatusTasksItemsStatus"
    checklist_item: (
        "RemoveWorkflowStatusAssigneesRemoveWorkflowStatusAssigneesWorkflowStatusTasksItemsChecklistItem"
    ) = Field(alias="checklistItem")


class RemoveWorkflowStatusAssigneesRemoveWorkflowStatusAssigneesWorkflowStatusTasksItemsAssignedUsers(
    BaseModel
):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class RemoveWorkflowStatusAssigneesRemoveWorkflowStatusAssigneesWorkflowStatusTasksItemsAsset(
    BaseModel
):
    typename__: Literal[
        "Asset", "Audio", "Document", "EmbeddedContent", "File", "Image", "Video"
    ] = Field(alias="__typename")
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    external_id: Optional[str] = Field(alias="externalId")
    expires_at: Optional[Any] = Field(alias="expiresAt")
    status: AssetStatusType


class RemoveWorkflowStatusAssigneesRemoveWorkflowStatusAssigneesWorkflowStatusTasksItemsStatus(
    BaseModel
):
    id: str
    name: str
    enter_rules: List[Optional[WorkflowStatusEnterRule]] = Field(alias="enterRules")


class RemoveWorkflowStatusAssigneesRemoveWorkflowStatusAssigneesWorkflowStatusTasksItemsChecklistItem(
    BaseModel
):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


RemoveWorkflowStatusAssignees.model_rebuild()
RemoveWorkflowStatusAssigneesRemoveWorkflowStatusAssignees.model_rebuild()
RemoveWorkflowStatusAssigneesRemoveWorkflowStatusAssigneesWorkflowStatus.model_rebuild()
RemoveWorkflowStatusAssigneesRemoveWorkflowStatusAssigneesWorkflowStatusChecklistPresets.model_rebuild()
RemoveWorkflowStatusAssigneesRemoveWorkflowStatusAssigneesWorkflowStatusTasks.model_rebuild()
RemoveWorkflowStatusAssigneesRemoveWorkflowStatusAssigneesWorkflowStatusTasksItems.model_rebuild()
