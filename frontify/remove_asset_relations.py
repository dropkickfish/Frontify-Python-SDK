# Generated by ariadne-codegen
# Source: queries-mutations

from typing import Any, List, Literal, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import AssetStatusType, CopyrightStatus, TagSource, WorkflowStatusEnterRule


class RemoveAssetRelations(BaseModel):
    remove_asset_relations: Optional["RemoveAssetRelationsRemoveAssetRelations"] = (
        Field(alias="removeAssetRelations")
    )


class RemoveAssetRelationsRemoveAssetRelations(BaseModel):
    asset: "RemoveAssetRelationsRemoveAssetRelationsAsset"
    related_assets: List["RemoveAssetRelationsRemoveAssetRelationsRelatedAssets"] = (
        Field(alias="relatedAssets")
    )


class RemoveAssetRelationsRemoveAssetRelationsAsset(BaseModel):
    typename__: Literal[
        "Asset", "Audio", "Document", "EmbeddedContent", "File", "Image", "Video"
    ] = Field(alias="__typename")
    id: str
    creator: "RemoveAssetRelationsRemoveAssetRelationsAssetCreator"
    created_at: Any = Field(alias="createdAt")
    modifier: Optional["RemoveAssetRelationsRemoveAssetRelationsAssetModifier"]
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    attachments: Optional[
        List[Optional["RemoveAssetRelationsRemoveAssetRelationsAssetAttachments"]]
    ]
    external_id: Optional[str] = Field(alias="externalId")
    tags: Optional[List[Optional["RemoveAssetRelationsRemoveAssetRelationsAssetTags"]]]
    copyright: Optional["RemoveAssetRelationsRemoveAssetRelationsAssetCopyright"]
    availability: "RemoveAssetRelationsRemoveAssetRelationsAssetAvailability"
    expires_at: Optional[Any] = Field(alias="expiresAt")
    licenses: Optional[
        List[Optional["RemoveAssetRelationsRemoveAssetRelationsAssetLicenses"]]
    ]
    status: AssetStatusType
    related_assets: "RemoveAssetRelationsRemoveAssetRelationsAssetRelatedAssets" = (
        Field(alias="relatedAssets")
    )
    comments: Optional["RemoveAssetRelationsRemoveAssetRelationsAssetComments"]
    current_user_permissions: (
        "RemoveAssetRelationsRemoveAssetRelationsAssetCurrentUserPermissions"
    ) = Field(alias="currentUserPermissions")
    custom_metadata: List[
        "RemoveAssetRelationsRemoveAssetRelationsAssetCustomMetadata"
    ] = Field(alias="customMetadata")
    workflow_task: Optional[
        "RemoveAssetRelationsRemoveAssetRelationsAssetWorkflowTask"
    ] = Field(alias="workflowTask")


class RemoveAssetRelationsRemoveAssetRelationsAssetCreator(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class RemoveAssetRelationsRemoveAssetRelationsAssetModifier(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class RemoveAssetRelationsRemoveAssetRelationsAssetAttachments(BaseModel):
    id: str
    creator: "RemoveAssetRelationsRemoveAssetRelationsAssetAttachmentsCreator"
    created_at: Any = Field(alias="createdAt")
    modifier: Optional[
        "RemoveAssetRelationsRemoveAssetRelationsAssetAttachmentsModifier"
    ]
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    name: Optional[str]
    filename: Optional[str]
    type: Optional[str]
    external_id: Optional[str] = Field(alias="externalId")
    extension: Optional[str]
    size: Optional[Any]
    download_url: Optional[Any] = Field(alias="downloadUrl")


class RemoveAssetRelationsRemoveAssetRelationsAssetAttachmentsCreator(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class RemoveAssetRelationsRemoveAssetRelationsAssetAttachmentsModifier(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class RemoveAssetRelationsRemoveAssetRelationsAssetTags(BaseModel):
    value: str
    source: Optional[TagSource]


class RemoveAssetRelationsRemoveAssetRelationsAssetCopyright(BaseModel):
    status: CopyrightStatus
    notice: Optional[str]


class RemoveAssetRelationsRemoveAssetRelationsAssetAvailability(BaseModel):
    from_: Optional[Any] = Field(alias="from")
    to: Optional[Any]


class RemoveAssetRelationsRemoveAssetRelationsAssetLicenses(BaseModel):
    id: str
    title: str
    license: str
    add_by_default: bool = Field(alias="addByDefault")
    require_consensus: bool = Field(alias="requireConsensus")


class RemoveAssetRelationsRemoveAssetRelationsAssetRelatedAssets(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")
    items: Optional[
        List[
            Optional["RemoveAssetRelationsRemoveAssetRelationsAssetRelatedAssetsItems"]
        ]
    ]


class RemoveAssetRelationsRemoveAssetRelationsAssetRelatedAssetsItems(BaseModel):
    typename__: Literal[
        "Asset", "Audio", "Document", "EmbeddedContent", "File", "Image", "Video"
    ] = Field(alias="__typename")
    id: str
    creator: "RemoveAssetRelationsRemoveAssetRelationsAssetRelatedAssetsItemsCreator"
    created_at: Any = Field(alias="createdAt")
    modifier: Optional[
        "RemoveAssetRelationsRemoveAssetRelationsAssetRelatedAssetsItemsModifier"
    ]
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    attachments: Optional[
        List[
            Optional[
                "RemoveAssetRelationsRemoveAssetRelationsAssetRelatedAssetsItemsAttachments"
            ]
        ]
    ]
    external_id: Optional[str] = Field(alias="externalId")
    tags: Optional[
        List[
            Optional[
                "RemoveAssetRelationsRemoveAssetRelationsAssetRelatedAssetsItemsTags"
            ]
        ]
    ]
    copyright: Optional[
        "RemoveAssetRelationsRemoveAssetRelationsAssetRelatedAssetsItemsCopyright"
    ]
    availability: (
        "RemoveAssetRelationsRemoveAssetRelationsAssetRelatedAssetsItemsAvailability"
    )
    expires_at: Optional[Any] = Field(alias="expiresAt")
    licenses: Optional[
        List[
            Optional[
                "RemoveAssetRelationsRemoveAssetRelationsAssetRelatedAssetsItemsLicenses"
            ]
        ]
    ]
    status: AssetStatusType
    related_assets: (
        "RemoveAssetRelationsRemoveAssetRelationsAssetRelatedAssetsItemsRelatedAssets"
    ) = Field(alias="relatedAssets")
    comments: Optional[
        "RemoveAssetRelationsRemoveAssetRelationsAssetRelatedAssetsItemsComments"
    ]
    current_user_permissions: (
        "RemoveAssetRelationsRemoveAssetRelationsAssetRelatedAssetsItemsCurrentUserPermissions"
    ) = Field(alias="currentUserPermissions")
    workflow_task: Optional[
        "RemoveAssetRelationsRemoveAssetRelationsAssetRelatedAssetsItemsWorkflowTask"
    ] = Field(alias="workflowTask")
    variants: Optional[
        "RemoveAssetRelationsRemoveAssetRelationsAssetRelatedAssetsItemsVariants"
    ]
    preview_background_color: Optional[
        "RemoveAssetRelationsRemoveAssetRelationsAssetRelatedAssetsItemsPreviewBackgroundColor"
    ] = Field(alias="previewBackgroundColor")


class RemoveAssetRelationsRemoveAssetRelationsAssetRelatedAssetsItemsCreator(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class RemoveAssetRelationsRemoveAssetRelationsAssetRelatedAssetsItemsModifier(
    BaseModel
):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class RemoveAssetRelationsRemoveAssetRelationsAssetRelatedAssetsItemsAttachments(
    BaseModel
):
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    name: Optional[str]
    filename: Optional[str]
    type: Optional[str]
    external_id: Optional[str] = Field(alias="externalId")
    extension: Optional[str]
    size: Optional[Any]
    download_url: Optional[Any] = Field(alias="downloadUrl")


class RemoveAssetRelationsRemoveAssetRelationsAssetRelatedAssetsItemsTags(BaseModel):
    value: str
    source: Optional[TagSource]


class RemoveAssetRelationsRemoveAssetRelationsAssetRelatedAssetsItemsCopyright(
    BaseModel
):
    status: CopyrightStatus
    notice: Optional[str]


class RemoveAssetRelationsRemoveAssetRelationsAssetRelatedAssetsItemsAvailability(
    BaseModel
):
    from_: Optional[Any] = Field(alias="from")
    to: Optional[Any]


class RemoveAssetRelationsRemoveAssetRelationsAssetRelatedAssetsItemsLicenses(
    BaseModel
):
    id: str
    title: str
    license: str
    add_by_default: bool = Field(alias="addByDefault")
    require_consensus: bool = Field(alias="requireConsensus")


class RemoveAssetRelationsRemoveAssetRelationsAssetRelatedAssetsItemsRelatedAssets(
    BaseModel
):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class RemoveAssetRelationsRemoveAssetRelationsAssetRelatedAssetsItemsComments(
    BaseModel
):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class RemoveAssetRelationsRemoveAssetRelationsAssetRelatedAssetsItemsCurrentUserPermissions(
    BaseModel
):
    can_edit: bool = Field(alias="canEdit")
    can_delete: bool = Field(alias="canDelete")
    can_download: bool = Field(alias="canDownload")
    can_comment: bool = Field(alias="canComment")


class RemoveAssetRelationsRemoveAssetRelationsAssetRelatedAssetsItemsWorkflowTask(
    BaseModel
):
    id: str
    title: Optional[str]
    description: Optional[str]


class RemoveAssetRelationsRemoveAssetRelationsAssetRelatedAssetsItemsVariants(
    BaseModel
):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class RemoveAssetRelationsRemoveAssetRelationsAssetRelatedAssetsItemsPreviewBackgroundColor(
    BaseModel
):
    red: Any
    green: Any
    blue: Any
    alpha: Any


class RemoveAssetRelationsRemoveAssetRelationsAssetComments(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")
    items: Optional[
        List[Optional["RemoveAssetRelationsRemoveAssetRelationsAssetCommentsItems"]]
    ]


class RemoveAssetRelationsRemoveAssetRelationsAssetCommentsItems(BaseModel):
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    content: str
    mentioned_users: List[
        Optional[
            "RemoveAssetRelationsRemoveAssetRelationsAssetCommentsItemsMentionedUsers"
        ]
    ] = Field(alias="mentionedUsers")
    is_resolved: bool = Field(alias="isResolved")
    replies: "RemoveAssetRelationsRemoveAssetRelationsAssetCommentsItemsReplies"


class RemoveAssetRelationsRemoveAssetRelationsAssetCommentsItemsMentionedUsers(
    BaseModel
):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class RemoveAssetRelationsRemoveAssetRelationsAssetCommentsItemsReplies(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class RemoveAssetRelationsRemoveAssetRelationsAssetCurrentUserPermissions(BaseModel):
    can_edit: bool = Field(alias="canEdit")
    can_delete: bool = Field(alias="canDelete")
    can_download: bool = Field(alias="canDownload")
    can_comment: bool = Field(alias="canComment")


class RemoveAssetRelationsRemoveAssetRelationsAssetCustomMetadata(BaseModel):
    typename__: Literal[
        "CustomMetadata", "CustomMetadataValue", "CustomMetadataValues"
    ] = Field(alias="__typename")
    property: "RemoveAssetRelationsRemoveAssetRelationsAssetCustomMetadataProperty"


class RemoveAssetRelationsRemoveAssetRelationsAssetCustomMetadataProperty(BaseModel):
    id: str
    creator: (
        "RemoveAssetRelationsRemoveAssetRelationsAssetCustomMetadataPropertyCreator"
    )
    created_at: Any = Field(alias="createdAt")
    modifier: Optional[
        "RemoveAssetRelationsRemoveAssetRelationsAssetCustomMetadataPropertyModifier"
    ]
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    name: str
    type: "RemoveAssetRelationsRemoveAssetRelationsAssetCustomMetadataPropertyType"
    help_text: Optional[str] = Field(alias="helpText")
    is_required: bool = Field(alias="isRequired")
    default_value: Optional[Any] = Field(alias="defaultValue")


class RemoveAssetRelationsRemoveAssetRelationsAssetCustomMetadataPropertyCreator(
    BaseModel
):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class RemoveAssetRelationsRemoveAssetRelationsAssetCustomMetadataPropertyModifier(
    BaseModel
):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class RemoveAssetRelationsRemoveAssetRelationsAssetCustomMetadataPropertyType(
    BaseModel
):
    typename__: Literal[
        "CustomMetadataPropertyType",
        "CustomMetadataPropertyTypeDate",
        "CustomMetadataPropertyTypeLongText",
        "CustomMetadataPropertyTypeMultiSelect",
        "CustomMetadataPropertyTypeNumber",
        "CustomMetadataPropertyTypeSelect",
        "CustomMetadataPropertyTypeText",
        "CustomMetadataPropertyTypeUrl",
    ] = Field(alias="__typename")
    name: str


class RemoveAssetRelationsRemoveAssetRelationsAssetWorkflowTask(BaseModel):
    id: str
    assigned_users: List[
        Optional[
            "RemoveAssetRelationsRemoveAssetRelationsAssetWorkflowTaskAssignedUsers"
        ]
    ] = Field(alias="assignedUsers")
    asset: Optional["RemoveAssetRelationsRemoveAssetRelationsAssetWorkflowTaskAsset"]
    title: Optional[str]
    description: Optional[str]
    status: "RemoveAssetRelationsRemoveAssetRelationsAssetWorkflowTaskStatus"
    checklist_item: (
        "RemoveAssetRelationsRemoveAssetRelationsAssetWorkflowTaskChecklistItem"
    ) = Field(alias="checklistItem")


class RemoveAssetRelationsRemoveAssetRelationsAssetWorkflowTaskAssignedUsers(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class RemoveAssetRelationsRemoveAssetRelationsAssetWorkflowTaskAsset(BaseModel):
    typename__: Literal[
        "Asset", "Audio", "Document", "EmbeddedContent", "File", "Image", "Video"
    ] = Field(alias="__typename")
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    external_id: Optional[str] = Field(alias="externalId")
    expires_at: Optional[Any] = Field(alias="expiresAt")
    status: AssetStatusType
    variants: Optional[
        "RemoveAssetRelationsRemoveAssetRelationsAssetWorkflowTaskAssetVariants"
    ]
    preview_background_color: Optional[
        "RemoveAssetRelationsRemoveAssetRelationsAssetWorkflowTaskAssetPreviewBackgroundColor"
    ] = Field(alias="previewBackgroundColor")


class RemoveAssetRelationsRemoveAssetRelationsAssetWorkflowTaskAssetVariants(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class RemoveAssetRelationsRemoveAssetRelationsAssetWorkflowTaskAssetPreviewBackgroundColor(
    BaseModel
):
    red: Any
    green: Any
    blue: Any
    alpha: Any


class RemoveAssetRelationsRemoveAssetRelationsAssetWorkflowTaskStatus(BaseModel):
    id: str
    name: str
    color: "RemoveAssetRelationsRemoveAssetRelationsAssetWorkflowTaskStatusColor"
    assigned_users: List[
        Optional[
            "RemoveAssetRelationsRemoveAssetRelationsAssetWorkflowTaskStatusAssignedUsers"
        ]
    ] = Field(alias="assignedUsers")
    checklist_presets: List[
        Optional[
            "RemoveAssetRelationsRemoveAssetRelationsAssetWorkflowTaskStatusChecklistPresets"
        ]
    ] = Field(alias="checklistPresets")
    tasks: "RemoveAssetRelationsRemoveAssetRelationsAssetWorkflowTaskStatusTasks"
    enter_rules: List[Optional[WorkflowStatusEnterRule]] = Field(alias="enterRules")


class RemoveAssetRelationsRemoveAssetRelationsAssetWorkflowTaskStatusColor(BaseModel):
    red: Any
    green: Any
    blue: Any
    alpha: Any


class RemoveAssetRelationsRemoveAssetRelationsAssetWorkflowTaskStatusAssignedUsers(
    BaseModel
):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class RemoveAssetRelationsRemoveAssetRelationsAssetWorkflowTaskStatusChecklistPresets(
    BaseModel
):
    id: str
    content: str


class RemoveAssetRelationsRemoveAssetRelationsAssetWorkflowTaskStatusTasks(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class RemoveAssetRelationsRemoveAssetRelationsAssetWorkflowTaskChecklistItem(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")
    items: Optional[
        List[
            Optional[
                "RemoveAssetRelationsRemoveAssetRelationsAssetWorkflowTaskChecklistItemItems"
            ]
        ]
    ]


class RemoveAssetRelationsRemoveAssetRelationsAssetWorkflowTaskChecklistItemItems(
    BaseModel
):
    id: str
    content: str


class RemoveAssetRelationsRemoveAssetRelationsRelatedAssets(BaseModel):
    typename__: Literal[
        "Asset", "Audio", "Document", "EmbeddedContent", "File", "Image", "Video"
    ] = Field(alias="__typename")
    id: str
    creator: "RemoveAssetRelationsRemoveAssetRelationsRelatedAssetsCreator"
    created_at: Any = Field(alias="createdAt")
    modifier: Optional["RemoveAssetRelationsRemoveAssetRelationsRelatedAssetsModifier"]
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    attachments: Optional[
        List[
            Optional["RemoveAssetRelationsRemoveAssetRelationsRelatedAssetsAttachments"]
        ]
    ]
    external_id: Optional[str] = Field(alias="externalId")
    tags: Optional[
        List[Optional["RemoveAssetRelationsRemoveAssetRelationsRelatedAssetsTags"]]
    ]
    copyright: Optional[
        "RemoveAssetRelationsRemoveAssetRelationsRelatedAssetsCopyright"
    ]
    availability: "RemoveAssetRelationsRemoveAssetRelationsRelatedAssetsAvailability"
    expires_at: Optional[Any] = Field(alias="expiresAt")
    licenses: Optional[
        List[Optional["RemoveAssetRelationsRemoveAssetRelationsRelatedAssetsLicenses"]]
    ]
    status: AssetStatusType
    related_assets: (
        "RemoveAssetRelationsRemoveAssetRelationsRelatedAssetsRelatedAssets"
    ) = Field(alias="relatedAssets")
    comments: Optional["RemoveAssetRelationsRemoveAssetRelationsRelatedAssetsComments"]
    current_user_permissions: (
        "RemoveAssetRelationsRemoveAssetRelationsRelatedAssetsCurrentUserPermissions"
    ) = Field(alias="currentUserPermissions")
    workflow_task: Optional[
        "RemoveAssetRelationsRemoveAssetRelationsRelatedAssetsWorkflowTask"
    ] = Field(alias="workflowTask")
    variants: Optional["RemoveAssetRelationsRemoveAssetRelationsRelatedAssetsVariants"]
    location: "RemoveAssetRelationsRemoveAssetRelationsRelatedAssetsLocation"
    preview_background_color: Optional[
        "RemoveAssetRelationsRemoveAssetRelationsRelatedAssetsPreviewBackgroundColor"
    ] = Field(alias="previewBackgroundColor")


class RemoveAssetRelationsRemoveAssetRelationsRelatedAssetsCreator(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class RemoveAssetRelationsRemoveAssetRelationsRelatedAssetsModifier(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class RemoveAssetRelationsRemoveAssetRelationsRelatedAssetsAttachments(BaseModel):
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    name: Optional[str]
    filename: Optional[str]
    type: Optional[str]
    external_id: Optional[str] = Field(alias="externalId")
    extension: Optional[str]
    size: Optional[Any]
    download_url: Optional[Any] = Field(alias="downloadUrl")


class RemoveAssetRelationsRemoveAssetRelationsRelatedAssetsTags(BaseModel):
    value: str
    source: Optional[TagSource]


class RemoveAssetRelationsRemoveAssetRelationsRelatedAssetsCopyright(BaseModel):
    status: CopyrightStatus
    notice: Optional[str]


class RemoveAssetRelationsRemoveAssetRelationsRelatedAssetsAvailability(BaseModel):
    from_: Optional[Any] = Field(alias="from")
    to: Optional[Any]


class RemoveAssetRelationsRemoveAssetRelationsRelatedAssetsLicenses(BaseModel):
    id: str
    title: str
    license: str
    add_by_default: bool = Field(alias="addByDefault")
    require_consensus: bool = Field(alias="requireConsensus")


class RemoveAssetRelationsRemoveAssetRelationsRelatedAssetsRelatedAssets(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class RemoveAssetRelationsRemoveAssetRelationsRelatedAssetsComments(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class RemoveAssetRelationsRemoveAssetRelationsRelatedAssetsCurrentUserPermissions(
    BaseModel
):
    can_edit: bool = Field(alias="canEdit")
    can_delete: bool = Field(alias="canDelete")
    can_download: bool = Field(alias="canDownload")
    can_comment: bool = Field(alias="canComment")


class RemoveAssetRelationsRemoveAssetRelationsRelatedAssetsWorkflowTask(BaseModel):
    id: str
    title: Optional[str]
    description: Optional[str]


class RemoveAssetRelationsRemoveAssetRelationsRelatedAssetsVariants(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")
    items: List[
        Optional["RemoveAssetRelationsRemoveAssetRelationsRelatedAssetsVariantsItems"]
    ]


class RemoveAssetRelationsRemoveAssetRelationsRelatedAssetsVariantsItems(BaseModel):
    key: str
    filename: Optional[str]
    download_url: Optional[Any] = Field(alias="downloadUrl")


class RemoveAssetRelationsRemoveAssetRelationsRelatedAssetsLocation(BaseModel):
    brand: Optional[
        "RemoveAssetRelationsRemoveAssetRelationsRelatedAssetsLocationBrand"
    ]
    library: Optional[
        "RemoveAssetRelationsRemoveAssetRelationsRelatedAssetsLocationLibrary"
    ]
    workspace_project: Optional[
        "RemoveAssetRelationsRemoveAssetRelationsRelatedAssetsLocationWorkspaceProject"
    ] = Field(alias="workspaceProject")
    folder: Optional[
        "RemoveAssetRelationsRemoveAssetRelationsRelatedAssetsLocationFolder"
    ]


class RemoveAssetRelationsRemoveAssetRelationsRelatedAssetsLocationBrand(BaseModel):
    id: str
    name: str


class RemoveAssetRelationsRemoveAssetRelationsRelatedAssetsLocationLibrary(BaseModel):
    id: str
    name: Optional[str]


class RemoveAssetRelationsRemoveAssetRelationsRelatedAssetsLocationWorkspaceProject(
    BaseModel
):
    id: str
    name: Optional[str]


class RemoveAssetRelationsRemoveAssetRelationsRelatedAssetsLocationFolder(BaseModel):
    id: str
    name: str
    breadcrumbs: List[
        "RemoveAssetRelationsRemoveAssetRelationsRelatedAssetsLocationFolderBreadcrumbs"
    ]


class RemoveAssetRelationsRemoveAssetRelationsRelatedAssetsLocationFolderBreadcrumbs(
    BaseModel
):
    id: Optional[str]
    name: Optional[str]


class RemoveAssetRelationsRemoveAssetRelationsRelatedAssetsPreviewBackgroundColor(
    BaseModel
):
    red: Any
    green: Any
    blue: Any
    alpha: Any


RemoveAssetRelations.model_rebuild()
RemoveAssetRelationsRemoveAssetRelations.model_rebuild()
RemoveAssetRelationsRemoveAssetRelationsAsset.model_rebuild()
RemoveAssetRelationsRemoveAssetRelationsAssetAttachments.model_rebuild()
RemoveAssetRelationsRemoveAssetRelationsAssetRelatedAssets.model_rebuild()
RemoveAssetRelationsRemoveAssetRelationsAssetRelatedAssetsItems.model_rebuild()
RemoveAssetRelationsRemoveAssetRelationsAssetComments.model_rebuild()
RemoveAssetRelationsRemoveAssetRelationsAssetCommentsItems.model_rebuild()
RemoveAssetRelationsRemoveAssetRelationsAssetCustomMetadata.model_rebuild()
RemoveAssetRelationsRemoveAssetRelationsAssetCustomMetadataProperty.model_rebuild()
RemoveAssetRelationsRemoveAssetRelationsAssetWorkflowTask.model_rebuild()
RemoveAssetRelationsRemoveAssetRelationsAssetWorkflowTaskAsset.model_rebuild()
RemoveAssetRelationsRemoveAssetRelationsAssetWorkflowTaskStatus.model_rebuild()
RemoveAssetRelationsRemoveAssetRelationsAssetWorkflowTaskChecklistItem.model_rebuild()
RemoveAssetRelationsRemoveAssetRelationsRelatedAssets.model_rebuild()
RemoveAssetRelationsRemoveAssetRelationsRelatedAssetsVariants.model_rebuild()
RemoveAssetRelationsRemoveAssetRelationsRelatedAssetsLocation.model_rebuild()
RemoveAssetRelationsRemoveAssetRelationsRelatedAssetsLocationFolder.model_rebuild()
