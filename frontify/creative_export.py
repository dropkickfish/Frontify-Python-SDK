# Generated by ariadne-codegen
# Source: queries-mutations

from typing import Any, List, Literal, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import (
    AssetStatusType,
    CopyrightStatus,
    CreativeJobStatus,
    TagSource,
    WorkflowStatusEnterRule,
)


class CreativeExport(BaseModel):
    creative_export: Optional["CreativeExportCreativeExport"] = Field(
        alias="creativeExport"
    )


class CreativeExportCreativeExport(BaseModel):
    id: str
    status: CreativeJobStatus
    result: Optional["CreativeExportCreativeExportResult"]


class CreativeExportCreativeExportResult(BaseModel):
    download_url: Any = Field(alias="downloadUrl")
    page_download_urls: List[Any] = Field(alias="pageDownloadUrls")
    asset: Optional["CreativeExportCreativeExportResultAsset"]


class CreativeExportCreativeExportResultAsset(BaseModel):
    id: str
    creator: "CreativeExportCreativeExportResultAssetCreator"
    created_at: Any = Field(alias="createdAt")
    modifier: Optional["CreativeExportCreativeExportResultAssetModifier"]
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    alternative_text: Optional[str] = Field(alias="alternativeText")
    is_decorative: bool = Field(alias="isDecorative")
    attachments: Optional[
        List[Optional["CreativeExportCreativeExportResultAssetAttachments"]]
    ]
    external_id: Optional[str] = Field(alias="externalId")
    tags: Optional[List[Optional["CreativeExportCreativeExportResultAssetTags"]]]
    copyright: Optional["CreativeExportCreativeExportResultAssetCopyright"]
    availability: "CreativeExportCreativeExportResultAssetAvailability"
    expires_at: Optional[Any] = Field(alias="expiresAt")
    licenses: Optional[
        List[Optional["CreativeExportCreativeExportResultAssetLicenses"]]
    ]
    author: Optional[str]
    status: AssetStatusType
    related_assets: "CreativeExportCreativeExportResultAssetRelatedAssets" = Field(
        alias="relatedAssets"
    )
    comments: Optional["CreativeExportCreativeExportResultAssetComments"]
    current_user_permissions: (
        "CreativeExportCreativeExportResultAssetCurrentUserPermissions"
    ) = Field(alias="currentUserPermissions")
    custom_metadata: List["CreativeExportCreativeExportResultAssetCustomMetadata"] = (
        Field(alias="customMetadata")
    )
    workflow_task: Optional["CreativeExportCreativeExportResultAssetWorkflowTask"] = (
        Field(alias="workflowTask")
    )
    variants: Optional["CreativeExportCreativeExportResultAssetVariants"]
    location: "CreativeExportCreativeExportResultAssetLocation"
    preview_background_color: Optional[
        "CreativeExportCreativeExportResultAssetPreviewBackgroundColor"
    ] = Field(alias="previewBackgroundColor")
    filename: Optional[str]
    size: Optional[Any]
    extension: str
    preview_url: Any = Field(alias="previewUrl")
    thumbnail_url: Optional[Any] = Field(alias="thumbnailUrl")
    dynamic_preview_url: Optional[Any] = Field(alias="dynamicPreviewUrl")
    download_url: Optional[Any] = Field(alias="downloadUrl")


class CreativeExportCreativeExportResultAssetCreator(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class CreativeExportCreativeExportResultAssetModifier(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class CreativeExportCreativeExportResultAssetAttachments(BaseModel):
    id: str
    creator: "CreativeExportCreativeExportResultAssetAttachmentsCreator"
    created_at: Any = Field(alias="createdAt")
    modifier: Optional["CreativeExportCreativeExportResultAssetAttachmentsModifier"]
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    name: Optional[str]
    filename: Optional[str]
    type: Optional[str]
    external_id: Optional[str] = Field(alias="externalId")
    extension: Optional[str]
    size: Optional[Any]
    download_url: Optional[Any] = Field(alias="downloadUrl")


class CreativeExportCreativeExportResultAssetAttachmentsCreator(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class CreativeExportCreativeExportResultAssetAttachmentsModifier(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class CreativeExportCreativeExportResultAssetTags(BaseModel):
    value: str
    source: Optional[TagSource]


class CreativeExportCreativeExportResultAssetCopyright(BaseModel):
    status: CopyrightStatus
    notice: Optional[str]


class CreativeExportCreativeExportResultAssetAvailability(BaseModel):
    from_: Optional[Any] = Field(alias="from")
    to: Optional[Any]


class CreativeExportCreativeExportResultAssetLicenses(BaseModel):
    id: str
    title: str
    license: str
    add_by_default: bool = Field(alias="addByDefault")
    require_consensus: bool = Field(alias="requireConsensus")


class CreativeExportCreativeExportResultAssetRelatedAssets(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")
    items: Optional[
        List[Optional["CreativeExportCreativeExportResultAssetRelatedAssetsItems"]]
    ]


class CreativeExportCreativeExportResultAssetRelatedAssetsItems(BaseModel):
    typename__: Literal[
        "Asset", "Audio", "Document", "EmbeddedContent", "File", "Image", "Video"
    ] = Field(alias="__typename")
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    external_id: Optional[str] = Field(alias="externalId")
    expires_at: Optional[Any] = Field(alias="expiresAt")
    status: AssetStatusType


class CreativeExportCreativeExportResultAssetComments(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")
    items: Optional[
        List[Optional["CreativeExportCreativeExportResultAssetCommentsItems"]]
    ]


class CreativeExportCreativeExportResultAssetCommentsItems(BaseModel):
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    content: str
    is_resolved: bool = Field(alias="isResolved")


class CreativeExportCreativeExportResultAssetCurrentUserPermissions(BaseModel):
    can_edit: bool = Field(alias="canEdit")
    can_delete: bool = Field(alias="canDelete")
    can_download: bool = Field(alias="canDownload")
    can_comment: bool = Field(alias="canComment")


class CreativeExportCreativeExportResultAssetCustomMetadata(BaseModel):
    typename__: Literal[
        "CustomMetadata", "CustomMetadataValue", "CustomMetadataValues"
    ] = Field(alias="__typename")
    property: "CreativeExportCreativeExportResultAssetCustomMetadataProperty"


class CreativeExportCreativeExportResultAssetCustomMetadataProperty(BaseModel):
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    name: str
    help_text: Optional[str] = Field(alias="helpText")
    is_required: bool = Field(alias="isRequired")
    default_value: Optional[Any] = Field(alias="defaultValue")


class CreativeExportCreativeExportResultAssetWorkflowTask(BaseModel):
    id: str
    assigned_users: List[
        Optional["CreativeExportCreativeExportResultAssetWorkflowTaskAssignedUsers"]
    ] = Field(alias="assignedUsers")
    asset: Optional["CreativeExportCreativeExportResultAssetWorkflowTaskAsset"]
    title: Optional[str]
    description: Optional[str]
    status: "CreativeExportCreativeExportResultAssetWorkflowTaskStatus"
    checklist_item: (
        "CreativeExportCreativeExportResultAssetWorkflowTaskChecklistItem"
    ) = Field(alias="checklistItem")


class CreativeExportCreativeExportResultAssetWorkflowTaskAssignedUsers(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class CreativeExportCreativeExportResultAssetWorkflowTaskAsset(BaseModel):
    typename__: Literal[
        "Asset", "Audio", "Document", "EmbeddedContent", "File", "Image", "Video"
    ] = Field(alias="__typename")
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    external_id: Optional[str] = Field(alias="externalId")
    expires_at: Optional[Any] = Field(alias="expiresAt")
    status: AssetStatusType


class CreativeExportCreativeExportResultAssetWorkflowTaskStatus(BaseModel):
    id: str
    name: str
    enter_rules: List[Optional[WorkflowStatusEnterRule]] = Field(alias="enterRules")


class CreativeExportCreativeExportResultAssetWorkflowTaskChecklistItem(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class CreativeExportCreativeExportResultAssetVariants(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")
    items: List[Optional["CreativeExportCreativeExportResultAssetVariantsItems"]]


class CreativeExportCreativeExportResultAssetVariantsItems(BaseModel):
    key: str
    filename: Optional[str]
    download_url: Optional[Any] = Field(alias="downloadUrl")


class CreativeExportCreativeExportResultAssetLocation(BaseModel):
    brand: Optional["CreativeExportCreativeExportResultAssetLocationBrand"]
    library: Optional["CreativeExportCreativeExportResultAssetLocationLibrary"]
    workspace_project: Optional[
        "CreativeExportCreativeExportResultAssetLocationWorkspaceProject"
    ] = Field(alias="workspaceProject")
    folder: Optional["CreativeExportCreativeExportResultAssetLocationFolder"]


class CreativeExportCreativeExportResultAssetLocationBrand(BaseModel):
    id: str
    name: str


class CreativeExportCreativeExportResultAssetLocationLibrary(BaseModel):
    id: str
    name: Optional[str]


class CreativeExportCreativeExportResultAssetLocationWorkspaceProject(BaseModel):
    id: str
    name: Optional[str]


class CreativeExportCreativeExportResultAssetLocationFolder(BaseModel):
    id: str
    name: str


class CreativeExportCreativeExportResultAssetPreviewBackgroundColor(BaseModel):
    red: Any
    green: Any
    blue: Any
    alpha: Any


CreativeExport.model_rebuild()
CreativeExportCreativeExport.model_rebuild()
CreativeExportCreativeExportResult.model_rebuild()
CreativeExportCreativeExportResultAsset.model_rebuild()
CreativeExportCreativeExportResultAssetAttachments.model_rebuild()
CreativeExportCreativeExportResultAssetRelatedAssets.model_rebuild()
CreativeExportCreativeExportResultAssetComments.model_rebuild()
CreativeExportCreativeExportResultAssetCustomMetadata.model_rebuild()
CreativeExportCreativeExportResultAssetWorkflowTask.model_rebuild()
CreativeExportCreativeExportResultAssetVariants.model_rebuild()
CreativeExportCreativeExportResultAssetLocation.model_rebuild()
