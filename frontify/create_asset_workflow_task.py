# Generated by ariadne-codegen
# Source: queries-mutations

from typing import Any, List, Literal, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import AssetStatusType, CopyrightStatus, TagSource, WorkflowStatusEnterRule


class CreateAssetWorkflowTask(BaseModel):
    create_asset_workflow_task: Optional[
        "CreateAssetWorkflowTaskCreateAssetWorkflowTask"
    ] = Field(alias="createAssetWorkflowTask")


class CreateAssetWorkflowTaskCreateAssetWorkflowTask(BaseModel):
    workflow_task: Optional[
        "CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTask"
    ] = Field(alias="workflowTask")


class CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTask(BaseModel):
    id: str
    assigned_users: List[
        Optional[
            "CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssignedUsers"
        ]
    ] = Field(alias="assignedUsers")
    asset: Optional["CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAsset"]
    title: Optional[str]
    description: Optional[str]


class CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssignedUsers(
    BaseModel
):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAsset(BaseModel):
    typename__: Literal[
        "Asset", "Audio", "Document", "EmbeddedContent", "File", "Image", "Video"
    ] = Field(alias="__typename")
    id: str
    creator: "CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetCreator"
    created_at: Any = Field(alias="createdAt")
    modifier: Optional[
        "CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetModifier"
    ]
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    attachments: Optional[
        List[
            Optional[
                "CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetAttachments"
            ]
        ]
    ]
    external_id: Optional[str] = Field(alias="externalId")
    tags: Optional[
        List[
            Optional[
                "CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetTags"
            ]
        ]
    ]
    copyright: Optional[
        "CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetCopyright"
    ]
    availability: (
        "CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetAvailability"
    )
    expires_at: Optional[Any] = Field(alias="expiresAt")
    licenses: Optional[
        List[
            Optional[
                "CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetLicenses"
            ]
        ]
    ]
    status: AssetStatusType
    related_assets: (
        "CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetRelatedAssets"
    ) = Field(alias="relatedAssets")
    comments: Optional[
        "CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetComments"
    ]
    current_user_permissions: (
        "CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetCurrentUserPermissions"
    ) = Field(alias="currentUserPermissions")
    custom_metadata: List[
        "CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetCustomMetadata"
    ] = Field(alias="customMetadata")
    workflow_task: Optional[
        "CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetWorkflowTask"
    ] = Field(alias="workflowTask")
    variants: Optional[
        "CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetVariants"
    ]
    location: "CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetLocation"
    preview_background_color: Optional[
        "CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetPreviewBackgroundColor"
    ] = Field(alias="previewBackgroundColor")


class CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetCreator(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetModifier(
    BaseModel
):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetAttachments(
    BaseModel
):
    id: str
    creator: "CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetAttachmentsCreator"
    created_at: Any = Field(alias="createdAt")
    modifier: Optional[
        "CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetAttachmentsModifier"
    ]
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    name: Optional[str]
    filename: Optional[str]
    type: Optional[str]
    external_id: Optional[str] = Field(alias="externalId")
    extension: Optional[str]
    size: Optional[Any]
    download_url: Optional[Any] = Field(alias="downloadUrl")


class CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetAttachmentsCreator(
    BaseModel
):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetAttachmentsModifier(
    BaseModel
):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetTags(BaseModel):
    value: str
    source: Optional[TagSource]


class CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetCopyright(
    BaseModel
):
    status: CopyrightStatus
    notice: Optional[str]


class CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetAvailability(
    BaseModel
):
    from_: Optional[Any] = Field(alias="from")
    to: Optional[Any]


class CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetLicenses(
    BaseModel
):
    id: str
    title: str
    license: str
    add_by_default: bool = Field(alias="addByDefault")
    require_consensus: bool = Field(alias="requireConsensus")


class CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetRelatedAssets(
    BaseModel
):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")
    items: Optional[
        List[
            Optional[
                "CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetRelatedAssetsItems"
            ]
        ]
    ]


class CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetRelatedAssetsItems(
    BaseModel
):
    typename__: Literal[
        "Asset", "Audio", "Document", "EmbeddedContent", "File", "Image", "Video"
    ] = Field(alias="__typename")
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    external_id: Optional[str] = Field(alias="externalId")
    expires_at: Optional[Any] = Field(alias="expiresAt")
    status: AssetStatusType


class CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetComments(
    BaseModel
):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")
    items: Optional[
        List[
            Optional[
                "CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetCommentsItems"
            ]
        ]
    ]


class CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetCommentsItems(
    BaseModel
):
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    content: str
    is_resolved: bool = Field(alias="isResolved")


class CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetCurrentUserPermissions(
    BaseModel
):
    can_edit: bool = Field(alias="canEdit")
    can_delete: bool = Field(alias="canDelete")
    can_download: bool = Field(alias="canDownload")
    can_comment: bool = Field(alias="canComment")


class CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetCustomMetadata(
    BaseModel
):
    typename__: Literal[
        "CustomMetadata", "CustomMetadataValue", "CustomMetadataValues"
    ] = Field(alias="__typename")
    property: "CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetCustomMetadataProperty"


class CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetCustomMetadataProperty(
    BaseModel
):
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    name: str
    help_text: Optional[str] = Field(alias="helpText")
    is_required: bool = Field(alias="isRequired")
    default_value: Optional[Any] = Field(alias="defaultValue")


class CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetWorkflowTask(
    BaseModel
):
    id: str
    title: Optional[str]
    description: Optional[str]
    status: "CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetWorkflowTaskStatus"
    checklist_item: (
        "CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetWorkflowTaskChecklistItem"
    ) = Field(alias="checklistItem")


class CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetWorkflowTaskStatus(
    BaseModel
):
    id: str
    name: str
    enter_rules: List[Optional[WorkflowStatusEnterRule]] = Field(alias="enterRules")


class CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetWorkflowTaskChecklistItem(
    BaseModel
):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetVariants(
    BaseModel
):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")
    items: List[
        Optional[
            "CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetVariantsItems"
        ]
    ]


class CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetVariantsItems(
    BaseModel
):
    key: str
    filename: Optional[str]
    download_url: Optional[Any] = Field(alias="downloadUrl")


class CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetLocation(
    BaseModel
):
    brand: Optional[
        "CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetLocationBrand"
    ]
    library: Optional[
        "CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetLocationLibrary"
    ]
    workspace_project: Optional[
        "CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetLocationWorkspaceProject"
    ] = Field(alias="workspaceProject")
    folder: Optional[
        "CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetLocationFolder"
    ]


class CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetLocationBrand(
    BaseModel
):
    id: str
    name: str


class CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetLocationLibrary(
    BaseModel
):
    id: str
    name: Optional[str]


class CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetLocationWorkspaceProject(
    BaseModel
):
    id: str
    name: Optional[str]


class CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetLocationFolder(
    BaseModel
):
    id: str
    name: str


class CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetPreviewBackgroundColor(
    BaseModel
):
    red: Any
    green: Any
    blue: Any
    alpha: Any


CreateAssetWorkflowTask.model_rebuild()
CreateAssetWorkflowTaskCreateAssetWorkflowTask.model_rebuild()
CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTask.model_rebuild()
CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAsset.model_rebuild()
CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetAttachments.model_rebuild()
CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetRelatedAssets.model_rebuild()
CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetComments.model_rebuild()
CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetCustomMetadata.model_rebuild()
CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetWorkflowTask.model_rebuild()
CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetVariants.model_rebuild()
CreateAssetWorkflowTaskCreateAssetWorkflowTaskWorkflowTaskAssetLocation.model_rebuild()
