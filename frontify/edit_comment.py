# Generated by ariadne-codegen
# Source: queries-mutations

from typing import Any, Literal, Optional

from pydantic import Field

from .base_model import BaseModel


class EditComment(BaseModel):
    edit_comment: Optional["EditCommentEditComment"] = Field(alias="editComment")


class EditCommentEditComment(BaseModel):
    comment: "EditCommentEditCommentComment"


class EditCommentEditCommentComment(BaseModel):
    typename__: Literal["AssetComment", "AssetCommentReply", "Comment"] = Field(
        alias="__typename"
    )
    id: str
    creator: "EditCommentEditCommentCommentCreator"
    created_at: Any = Field(alias="createdAt")
    modifier: Optional["EditCommentEditCommentCommentModifier"]
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    content: str


class EditCommentEditCommentCommentCreator(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    email: Any
    name: Optional[str]
    avatar: Optional[Any]


class EditCommentEditCommentCommentModifier(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    email: Any
    name: Optional[str]
    avatar: Optional[Any]


EditComment.model_rebuild()
EditCommentEditComment.model_rebuild()
EditCommentEditCommentComment.model_rebuild()
