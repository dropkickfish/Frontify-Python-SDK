# Generated by ariadne-codegen
# Source: queries-mutations

from typing import Any, List, Literal, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import AssetStatusType, CopyrightStatus, TagSource, WorkflowStatusEnterRule


class AddAssetTags(BaseModel):
    add_asset_tags: Optional["AddAssetTagsAddAssetTags"] = Field(alias="addAssetTags")


class AddAssetTagsAddAssetTags(BaseModel):
    asset: Optional["AddAssetTagsAddAssetTagsAsset"]


class AddAssetTagsAddAssetTagsAsset(BaseModel):
    typename__: Literal[
        "Asset", "Audio", "Document", "EmbeddedContent", "File", "Image", "Video"
    ] = Field(alias="__typename")
    id: str
    creator: "AddAssetTagsAddAssetTagsAssetCreator"
    created_at: Any = Field(alias="createdAt")
    modifier: Optional["AddAssetTagsAddAssetTagsAssetModifier"]
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    attachments: Optional[List[Optional["AddAssetTagsAddAssetTagsAssetAttachments"]]]
    external_id: Optional[str] = Field(alias="externalId")
    tags: Optional[List[Optional["AddAssetTagsAddAssetTagsAssetTags"]]]
    copyright: Optional["AddAssetTagsAddAssetTagsAssetCopyright"]
    availability: "AddAssetTagsAddAssetTagsAssetAvailability"
    expires_at: Optional[Any] = Field(alias="expiresAt")
    licenses: Optional[List[Optional["AddAssetTagsAddAssetTagsAssetLicenses"]]]
    status: AssetStatusType
    related_assets: "AddAssetTagsAddAssetTagsAssetRelatedAssets" = Field(
        alias="relatedAssets"
    )
    comments: Optional["AddAssetTagsAddAssetTagsAssetComments"]
    current_user_permissions: "AddAssetTagsAddAssetTagsAssetCurrentUserPermissions" = (
        Field(alias="currentUserPermissions")
    )
    custom_metadata: List["AddAssetTagsAddAssetTagsAssetCustomMetadata"] = Field(
        alias="customMetadata"
    )
    workflow_task: Optional["AddAssetTagsAddAssetTagsAssetWorkflowTask"] = Field(
        alias="workflowTask"
    )


class AddAssetTagsAddAssetTagsAssetCreator(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class AddAssetTagsAddAssetTagsAssetModifier(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class AddAssetTagsAddAssetTagsAssetAttachments(BaseModel):
    id: str
    creator: "AddAssetTagsAddAssetTagsAssetAttachmentsCreator"
    created_at: Any = Field(alias="createdAt")
    modifier: Optional["AddAssetTagsAddAssetTagsAssetAttachmentsModifier"]
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    name: Optional[str]
    filename: Optional[str]
    type: Optional[str]
    external_id: Optional[str] = Field(alias="externalId")
    extension: Optional[str]
    size: Optional[Any]
    download_url: Optional[Any] = Field(alias="downloadUrl")


class AddAssetTagsAddAssetTagsAssetAttachmentsCreator(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class AddAssetTagsAddAssetTagsAssetAttachmentsModifier(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class AddAssetTagsAddAssetTagsAssetTags(BaseModel):
    value: str
    source: Optional[TagSource]


class AddAssetTagsAddAssetTagsAssetCopyright(BaseModel):
    status: CopyrightStatus
    notice: Optional[str]


class AddAssetTagsAddAssetTagsAssetAvailability(BaseModel):
    from_: Optional[Any] = Field(alias="from")
    to: Optional[Any]


class AddAssetTagsAddAssetTagsAssetLicenses(BaseModel):
    id: str
    title: str
    license: str
    add_by_default: bool = Field(alias="addByDefault")
    require_consensus: bool = Field(alias="requireConsensus")


class AddAssetTagsAddAssetTagsAssetRelatedAssets(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")
    items: Optional[List[Optional["AddAssetTagsAddAssetTagsAssetRelatedAssetsItems"]]]


class AddAssetTagsAddAssetTagsAssetRelatedAssetsItems(BaseModel):
    typename__: Literal[
        "Asset", "Audio", "Document", "EmbeddedContent", "File", "Image", "Video"
    ] = Field(alias="__typename")
    id: str
    creator: "AddAssetTagsAddAssetTagsAssetRelatedAssetsItemsCreator"
    created_at: Any = Field(alias="createdAt")
    modifier: Optional["AddAssetTagsAddAssetTagsAssetRelatedAssetsItemsModifier"]
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    attachments: Optional[
        List[Optional["AddAssetTagsAddAssetTagsAssetRelatedAssetsItemsAttachments"]]
    ]
    external_id: Optional[str] = Field(alias="externalId")
    tags: Optional[
        List[Optional["AddAssetTagsAddAssetTagsAssetRelatedAssetsItemsTags"]]
    ]
    copyright: Optional["AddAssetTagsAddAssetTagsAssetRelatedAssetsItemsCopyright"]
    availability: "AddAssetTagsAddAssetTagsAssetRelatedAssetsItemsAvailability"
    expires_at: Optional[Any] = Field(alias="expiresAt")
    licenses: Optional[
        List[Optional["AddAssetTagsAddAssetTagsAssetRelatedAssetsItemsLicenses"]]
    ]
    status: AssetStatusType
    related_assets: "AddAssetTagsAddAssetTagsAssetRelatedAssetsItemsRelatedAssets" = (
        Field(alias="relatedAssets")
    )
    comments: Optional["AddAssetTagsAddAssetTagsAssetRelatedAssetsItemsComments"]
    current_user_permissions: (
        "AddAssetTagsAddAssetTagsAssetRelatedAssetsItemsCurrentUserPermissions"
    ) = Field(alias="currentUserPermissions")
    workflow_task: Optional[
        "AddAssetTagsAddAssetTagsAssetRelatedAssetsItemsWorkflowTask"
    ] = Field(alias="workflowTask")
    variants: Optional["AddAssetTagsAddAssetTagsAssetRelatedAssetsItemsVariants"]
    preview_background_color: Optional[
        "AddAssetTagsAddAssetTagsAssetRelatedAssetsItemsPreviewBackgroundColor"
    ] = Field(alias="previewBackgroundColor")


class AddAssetTagsAddAssetTagsAssetRelatedAssetsItemsCreator(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class AddAssetTagsAddAssetTagsAssetRelatedAssetsItemsModifier(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class AddAssetTagsAddAssetTagsAssetRelatedAssetsItemsAttachments(BaseModel):
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    name: Optional[str]
    filename: Optional[str]
    type: Optional[str]
    external_id: Optional[str] = Field(alias="externalId")
    extension: Optional[str]
    size: Optional[Any]
    download_url: Optional[Any] = Field(alias="downloadUrl")


class AddAssetTagsAddAssetTagsAssetRelatedAssetsItemsTags(BaseModel):
    value: str
    source: Optional[TagSource]


class AddAssetTagsAddAssetTagsAssetRelatedAssetsItemsCopyright(BaseModel):
    status: CopyrightStatus
    notice: Optional[str]


class AddAssetTagsAddAssetTagsAssetRelatedAssetsItemsAvailability(BaseModel):
    from_: Optional[Any] = Field(alias="from")
    to: Optional[Any]


class AddAssetTagsAddAssetTagsAssetRelatedAssetsItemsLicenses(BaseModel):
    id: str
    title: str
    license: str
    add_by_default: bool = Field(alias="addByDefault")
    require_consensus: bool = Field(alias="requireConsensus")


class AddAssetTagsAddAssetTagsAssetRelatedAssetsItemsRelatedAssets(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class AddAssetTagsAddAssetTagsAssetRelatedAssetsItemsComments(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class AddAssetTagsAddAssetTagsAssetRelatedAssetsItemsCurrentUserPermissions(BaseModel):
    can_edit: bool = Field(alias="canEdit")
    can_delete: bool = Field(alias="canDelete")
    can_download: bool = Field(alias="canDownload")
    can_comment: bool = Field(alias="canComment")


class AddAssetTagsAddAssetTagsAssetRelatedAssetsItemsWorkflowTask(BaseModel):
    id: str
    title: Optional[str]
    description: Optional[str]


class AddAssetTagsAddAssetTagsAssetRelatedAssetsItemsVariants(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class AddAssetTagsAddAssetTagsAssetRelatedAssetsItemsPreviewBackgroundColor(BaseModel):
    red: Any
    green: Any
    blue: Any
    alpha: Any


class AddAssetTagsAddAssetTagsAssetComments(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")
    items: Optional[List[Optional["AddAssetTagsAddAssetTagsAssetCommentsItems"]]]


class AddAssetTagsAddAssetTagsAssetCommentsItems(BaseModel):
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    content: str
    mentioned_users: List[
        Optional["AddAssetTagsAddAssetTagsAssetCommentsItemsMentionedUsers"]
    ] = Field(alias="mentionedUsers")
    is_resolved: bool = Field(alias="isResolved")
    replies: "AddAssetTagsAddAssetTagsAssetCommentsItemsReplies"


class AddAssetTagsAddAssetTagsAssetCommentsItemsMentionedUsers(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class AddAssetTagsAddAssetTagsAssetCommentsItemsReplies(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class AddAssetTagsAddAssetTagsAssetCurrentUserPermissions(BaseModel):
    can_edit: bool = Field(alias="canEdit")
    can_delete: bool = Field(alias="canDelete")
    can_download: bool = Field(alias="canDownload")
    can_comment: bool = Field(alias="canComment")


class AddAssetTagsAddAssetTagsAssetCustomMetadata(BaseModel):
    typename__: Literal[
        "CustomMetadata", "CustomMetadataValue", "CustomMetadataValues"
    ] = Field(alias="__typename")
    property: "AddAssetTagsAddAssetTagsAssetCustomMetadataProperty"


class AddAssetTagsAddAssetTagsAssetCustomMetadataProperty(BaseModel):
    id: str
    creator: "AddAssetTagsAddAssetTagsAssetCustomMetadataPropertyCreator"
    created_at: Any = Field(alias="createdAt")
    modifier: Optional["AddAssetTagsAddAssetTagsAssetCustomMetadataPropertyModifier"]
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    name: str
    type: "AddAssetTagsAddAssetTagsAssetCustomMetadataPropertyType"
    help_text: Optional[str] = Field(alias="helpText")
    is_required: bool = Field(alias="isRequired")
    default_value: Optional[Any] = Field(alias="defaultValue")


class AddAssetTagsAddAssetTagsAssetCustomMetadataPropertyCreator(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class AddAssetTagsAddAssetTagsAssetCustomMetadataPropertyModifier(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class AddAssetTagsAddAssetTagsAssetCustomMetadataPropertyType(BaseModel):
    typename__: Literal[
        "CustomMetadataPropertyType",
        "CustomMetadataPropertyTypeDate",
        "CustomMetadataPropertyTypeLongText",
        "CustomMetadataPropertyTypeMultiSelect",
        "CustomMetadataPropertyTypeNumber",
        "CustomMetadataPropertyTypeSelect",
        "CustomMetadataPropertyTypeText",
        "CustomMetadataPropertyTypeUrl",
    ] = Field(alias="__typename")
    name: str


class AddAssetTagsAddAssetTagsAssetWorkflowTask(BaseModel):
    id: str
    assigned_users: List[
        Optional["AddAssetTagsAddAssetTagsAssetWorkflowTaskAssignedUsers"]
    ] = Field(alias="assignedUsers")
    asset: Optional["AddAssetTagsAddAssetTagsAssetWorkflowTaskAsset"]
    title: Optional[str]
    description: Optional[str]
    status: "AddAssetTagsAddAssetTagsAssetWorkflowTaskStatus"
    checklist_item: "AddAssetTagsAddAssetTagsAssetWorkflowTaskChecklistItem" = Field(
        alias="checklistItem"
    )


class AddAssetTagsAddAssetTagsAssetWorkflowTaskAssignedUsers(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class AddAssetTagsAddAssetTagsAssetWorkflowTaskAsset(BaseModel):
    typename__: Literal[
        "Asset", "Audio", "Document", "EmbeddedContent", "File", "Image", "Video"
    ] = Field(alias="__typename")
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    external_id: Optional[str] = Field(alias="externalId")
    expires_at: Optional[Any] = Field(alias="expiresAt")
    status: AssetStatusType
    variants: Optional["AddAssetTagsAddAssetTagsAssetWorkflowTaskAssetVariants"]
    preview_background_color: Optional[
        "AddAssetTagsAddAssetTagsAssetWorkflowTaskAssetPreviewBackgroundColor"
    ] = Field(alias="previewBackgroundColor")


class AddAssetTagsAddAssetTagsAssetWorkflowTaskAssetVariants(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class AddAssetTagsAddAssetTagsAssetWorkflowTaskAssetPreviewBackgroundColor(BaseModel):
    red: Any
    green: Any
    blue: Any
    alpha: Any


class AddAssetTagsAddAssetTagsAssetWorkflowTaskStatus(BaseModel):
    id: str
    name: str
    color: "AddAssetTagsAddAssetTagsAssetWorkflowTaskStatusColor"
    assigned_users: List[
        Optional["AddAssetTagsAddAssetTagsAssetWorkflowTaskStatusAssignedUsers"]
    ] = Field(alias="assignedUsers")
    checklist_presets: List[
        Optional["AddAssetTagsAddAssetTagsAssetWorkflowTaskStatusChecklistPresets"]
    ] = Field(alias="checklistPresets")
    tasks: "AddAssetTagsAddAssetTagsAssetWorkflowTaskStatusTasks"
    enter_rules: List[Optional[WorkflowStatusEnterRule]] = Field(alias="enterRules")


class AddAssetTagsAddAssetTagsAssetWorkflowTaskStatusColor(BaseModel):
    red: Any
    green: Any
    blue: Any
    alpha: Any


class AddAssetTagsAddAssetTagsAssetWorkflowTaskStatusAssignedUsers(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class AddAssetTagsAddAssetTagsAssetWorkflowTaskStatusChecklistPresets(BaseModel):
    id: str
    content: str


class AddAssetTagsAddAssetTagsAssetWorkflowTaskStatusTasks(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class AddAssetTagsAddAssetTagsAssetWorkflowTaskChecklistItem(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")
    items: Optional[
        List[Optional["AddAssetTagsAddAssetTagsAssetWorkflowTaskChecklistItemItems"]]
    ]


class AddAssetTagsAddAssetTagsAssetWorkflowTaskChecklistItemItems(BaseModel):
    id: str
    content: str


AddAssetTags.model_rebuild()
AddAssetTagsAddAssetTags.model_rebuild()
AddAssetTagsAddAssetTagsAsset.model_rebuild()
AddAssetTagsAddAssetTagsAssetAttachments.model_rebuild()
AddAssetTagsAddAssetTagsAssetRelatedAssets.model_rebuild()
AddAssetTagsAddAssetTagsAssetRelatedAssetsItems.model_rebuild()
AddAssetTagsAddAssetTagsAssetComments.model_rebuild()
AddAssetTagsAddAssetTagsAssetCommentsItems.model_rebuild()
AddAssetTagsAddAssetTagsAssetCustomMetadata.model_rebuild()
AddAssetTagsAddAssetTagsAssetCustomMetadataProperty.model_rebuild()
AddAssetTagsAddAssetTagsAssetWorkflowTask.model_rebuild()
AddAssetTagsAddAssetTagsAssetWorkflowTaskAsset.model_rebuild()
AddAssetTagsAddAssetTagsAssetWorkflowTaskStatus.model_rebuild()
AddAssetTagsAddAssetTagsAssetWorkflowTaskChecklistItem.model_rebuild()
