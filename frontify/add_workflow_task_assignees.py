# Generated by ariadne-codegen
# Source: queries-mutations

from typing import Any, List, Literal, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import AssetStatusType, CopyrightStatus, TagSource, WorkflowStatusEnterRule


class AddWorkflowTaskAssignees(BaseModel):
    add_workflow_task_assignees: Optional[
        "AddWorkflowTaskAssigneesAddWorkflowTaskAssignees"
    ] = Field(alias="addWorkflowTaskAssignees")


class AddWorkflowTaskAssigneesAddWorkflowTaskAssignees(BaseModel):
    workflow_task: Optional[
        "AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTask"
    ] = Field(alias="workflowTask")


class AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTask(BaseModel):
    id: str
    assigned_users: List[
        Optional[
            "AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssignedUsers"
        ]
    ] = Field(alias="assignedUsers")
    asset: Optional["AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAsset"]
    title: Optional[str]
    description: Optional[str]


class AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssignedUsers(
    BaseModel
):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAsset(BaseModel):
    typename__: Literal[
        "Asset", "Audio", "Document", "EmbeddedContent", "File", "Image", "Video"
    ] = Field(alias="__typename")
    id: str
    creator: "AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetCreator"
    created_at: Any = Field(alias="createdAt")
    modifier: Optional[
        "AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetModifier"
    ]
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    attachments: Optional[
        List[
            Optional[
                "AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetAttachments"
            ]
        ]
    ]
    external_id: Optional[str] = Field(alias="externalId")
    tags: Optional[
        List[
            Optional[
                "AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetTags"
            ]
        ]
    ]
    copyright: Optional[
        "AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetCopyright"
    ]
    availability: (
        "AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetAvailability"
    )
    expires_at: Optional[Any] = Field(alias="expiresAt")
    licenses: Optional[
        List[
            Optional[
                "AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetLicenses"
            ]
        ]
    ]
    status: AssetStatusType
    related_assets: (
        "AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetRelatedAssets"
    ) = Field(alias="relatedAssets")
    comments: Optional[
        "AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetComments"
    ]
    current_user_permissions: (
        "AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetCurrentUserPermissions"
    ) = Field(alias="currentUserPermissions")
    custom_metadata: List[
        "AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetCustomMetadata"
    ] = Field(alias="customMetadata")
    workflow_task: Optional[
        "AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetWorkflowTask"
    ] = Field(alias="workflowTask")
    variants: Optional[
        "AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetVariants"
    ]
    location: (
        "AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetLocation"
    )
    preview_background_color: Optional[
        "AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetPreviewBackgroundColor"
    ] = Field(alias="previewBackgroundColor")


class AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetCreator(
    BaseModel
):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetModifier(
    BaseModel
):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetAttachments(
    BaseModel
):
    id: str
    creator: "AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetAttachmentsCreator"
    created_at: Any = Field(alias="createdAt")
    modifier: Optional[
        "AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetAttachmentsModifier"
    ]
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    name: Optional[str]
    filename: Optional[str]
    type: Optional[str]
    external_id: Optional[str] = Field(alias="externalId")
    extension: Optional[str]
    size: Optional[Any]
    download_url: Optional[Any] = Field(alias="downloadUrl")


class AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetAttachmentsCreator(
    BaseModel
):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetAttachmentsModifier(
    BaseModel
):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetTags(BaseModel):
    value: str
    source: Optional[TagSource]


class AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetCopyright(
    BaseModel
):
    status: CopyrightStatus
    notice: Optional[str]


class AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetAvailability(
    BaseModel
):
    from_: Optional[Any] = Field(alias="from")
    to: Optional[Any]


class AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetLicenses(
    BaseModel
):
    id: str
    title: str
    license: str
    add_by_default: bool = Field(alias="addByDefault")
    require_consensus: bool = Field(alias="requireConsensus")


class AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetRelatedAssets(
    BaseModel
):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")
    items: Optional[
        List[
            Optional[
                "AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetRelatedAssetsItems"
            ]
        ]
    ]


class AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetRelatedAssetsItems(
    BaseModel
):
    typename__: Literal[
        "Asset", "Audio", "Document", "EmbeddedContent", "File", "Image", "Video"
    ] = Field(alias="__typename")
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    external_id: Optional[str] = Field(alias="externalId")
    expires_at: Optional[Any] = Field(alias="expiresAt")
    status: AssetStatusType


class AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetComments(
    BaseModel
):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")
    items: Optional[
        List[
            Optional[
                "AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetCommentsItems"
            ]
        ]
    ]


class AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetCommentsItems(
    BaseModel
):
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    content: str
    is_resolved: bool = Field(alias="isResolved")


class AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetCurrentUserPermissions(
    BaseModel
):
    can_edit: bool = Field(alias="canEdit")
    can_delete: bool = Field(alias="canDelete")
    can_download: bool = Field(alias="canDownload")
    can_comment: bool = Field(alias="canComment")


class AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetCustomMetadata(
    BaseModel
):
    typename__: Literal[
        "CustomMetadata", "CustomMetadataValue", "CustomMetadataValues"
    ] = Field(alias="__typename")
    property: "AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetCustomMetadataProperty"


class AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetCustomMetadataProperty(
    BaseModel
):
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    name: str
    help_text: Optional[str] = Field(alias="helpText")
    is_required: bool = Field(alias="isRequired")
    default_value: Optional[Any] = Field(alias="defaultValue")


class AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetWorkflowTask(
    BaseModel
):
    id: str
    title: Optional[str]
    description: Optional[str]
    status: "AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetWorkflowTaskStatus"
    checklist_item: (
        "AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetWorkflowTaskChecklistItem"
    ) = Field(alias="checklistItem")


class AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetWorkflowTaskStatus(
    BaseModel
):
    id: str
    name: str
    enter_rules: List[Optional[WorkflowStatusEnterRule]] = Field(alias="enterRules")


class AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetWorkflowTaskChecklistItem(
    BaseModel
):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetVariants(
    BaseModel
):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")
    items: List[
        Optional[
            "AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetVariantsItems"
        ]
    ]


class AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetVariantsItems(
    BaseModel
):
    key: str
    filename: Optional[str]
    download_url: Optional[Any] = Field(alias="downloadUrl")


class AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetLocation(
    BaseModel
):
    brand: Optional[
        "AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetLocationBrand"
    ]
    library: Optional[
        "AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetLocationLibrary"
    ]
    workspace_project: Optional[
        "AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetLocationWorkspaceProject"
    ] = Field(alias="workspaceProject")
    folder: Optional[
        "AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetLocationFolder"
    ]


class AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetLocationBrand(
    BaseModel
):
    id: str
    name: str


class AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetLocationLibrary(
    BaseModel
):
    id: str
    name: Optional[str]


class AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetLocationWorkspaceProject(
    BaseModel
):
    id: str
    name: Optional[str]


class AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetLocationFolder(
    BaseModel
):
    id: str
    name: str


class AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetPreviewBackgroundColor(
    BaseModel
):
    red: Any
    green: Any
    blue: Any
    alpha: Any


AddWorkflowTaskAssignees.model_rebuild()
AddWorkflowTaskAssigneesAddWorkflowTaskAssignees.model_rebuild()
AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTask.model_rebuild()
AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAsset.model_rebuild()
AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetAttachments.model_rebuild()
AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetRelatedAssets.model_rebuild()
AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetComments.model_rebuild()
AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetCustomMetadata.model_rebuild()
AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetWorkflowTask.model_rebuild()
AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetVariants.model_rebuild()
AddWorkflowTaskAssigneesAddWorkflowTaskAssigneesWorkflowTaskAssetLocation.model_rebuild()
