# Generated by ariadne-codegen
# Source: queries-mutations

from typing import Any, Literal, Optional

from pydantic import Field

from .base_model import BaseModel


class InstallProjectWebhook(BaseModel):
    install_project_webhook: Optional["InstallProjectWebhookInstallProjectWebhook"] = (
        Field(alias="installProjectWebhook")
    )


class InstallProjectWebhookInstallProjectWebhook(BaseModel):
    webhook: "InstallProjectWebhookInstallProjectWebhookWebhook"


class InstallProjectWebhookInstallProjectWebhookWebhook(BaseModel):
    typename__: Literal["ProjectWebhook", "Webhook"] = Field(alias="__typename")
    id: str
    creator: "InstallProjectWebhookInstallProjectWebhookWebhookCreator"
    created_at: Any = Field(alias="createdAt")
    name: str
    notification_url: Any = Field(alias="notificationUrl")
    secret: str


class InstallProjectWebhookInstallProjectWebhookWebhookCreator(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    email: Any
    name: Optional[str]
    avatar: Optional[Any]


InstallProjectWebhook.model_rebuild()
InstallProjectWebhookInstallProjectWebhook.model_rebuild()
InstallProjectWebhookInstallProjectWebhookWebhook.model_rebuild()
