# Generated by ariadne-codegen
# Source: queries-mutations

from typing import Any, List, Literal, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import AssetStatusType, CopyrightStatus, TagSource, WorkflowStatusEnterRule


class RemoveAssetTags(BaseModel):
    remove_asset_tags: Optional["RemoveAssetTagsRemoveAssetTags"] = Field(
        alias="removeAssetTags"
    )


class RemoveAssetTagsRemoveAssetTags(BaseModel):
    asset: Optional["RemoveAssetTagsRemoveAssetTagsAsset"]


class RemoveAssetTagsRemoveAssetTagsAsset(BaseModel):
    typename__: Literal[
        "Asset", "Audio", "Document", "EmbeddedContent", "File", "Image", "Video"
    ] = Field(alias="__typename")
    id: str
    creator: "RemoveAssetTagsRemoveAssetTagsAssetCreator"
    created_at: Any = Field(alias="createdAt")
    modifier: Optional["RemoveAssetTagsRemoveAssetTagsAssetModifier"]
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    attachments: Optional[
        List[Optional["RemoveAssetTagsRemoveAssetTagsAssetAttachments"]]
    ]
    external_id: Optional[str] = Field(alias="externalId")
    tags: Optional[List[Optional["RemoveAssetTagsRemoveAssetTagsAssetTags"]]]
    copyright: Optional["RemoveAssetTagsRemoveAssetTagsAssetCopyright"]
    availability: "RemoveAssetTagsRemoveAssetTagsAssetAvailability"
    expires_at: Optional[Any] = Field(alias="expiresAt")
    licenses: Optional[List[Optional["RemoveAssetTagsRemoveAssetTagsAssetLicenses"]]]
    status: AssetStatusType
    related_assets: "RemoveAssetTagsRemoveAssetTagsAssetRelatedAssets" = Field(
        alias="relatedAssets"
    )
    comments: Optional["RemoveAssetTagsRemoveAssetTagsAssetComments"]
    current_user_permissions: (
        "RemoveAssetTagsRemoveAssetTagsAssetCurrentUserPermissions"
    ) = Field(alias="currentUserPermissions")
    custom_metadata: List["RemoveAssetTagsRemoveAssetTagsAssetCustomMetadata"] = Field(
        alias="customMetadata"
    )
    workflow_task: Optional["RemoveAssetTagsRemoveAssetTagsAssetWorkflowTask"] = Field(
        alias="workflowTask"
    )


class RemoveAssetTagsRemoveAssetTagsAssetCreator(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class RemoveAssetTagsRemoveAssetTagsAssetModifier(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class RemoveAssetTagsRemoveAssetTagsAssetAttachments(BaseModel):
    id: str
    creator: "RemoveAssetTagsRemoveAssetTagsAssetAttachmentsCreator"
    created_at: Any = Field(alias="createdAt")
    modifier: Optional["RemoveAssetTagsRemoveAssetTagsAssetAttachmentsModifier"]
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    name: Optional[str]
    filename: Optional[str]
    type: Optional[str]
    external_id: Optional[str] = Field(alias="externalId")
    extension: Optional[str]
    size: Optional[Any]
    download_url: Optional[Any] = Field(alias="downloadUrl")


class RemoveAssetTagsRemoveAssetTagsAssetAttachmentsCreator(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class RemoveAssetTagsRemoveAssetTagsAssetAttachmentsModifier(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class RemoveAssetTagsRemoveAssetTagsAssetTags(BaseModel):
    value: str
    source: Optional[TagSource]


class RemoveAssetTagsRemoveAssetTagsAssetCopyright(BaseModel):
    status: CopyrightStatus
    notice: Optional[str]


class RemoveAssetTagsRemoveAssetTagsAssetAvailability(BaseModel):
    from_: Optional[Any] = Field(alias="from")
    to: Optional[Any]


class RemoveAssetTagsRemoveAssetTagsAssetLicenses(BaseModel):
    id: str
    title: str
    license: str
    add_by_default: bool = Field(alias="addByDefault")
    require_consensus: bool = Field(alias="requireConsensus")


class RemoveAssetTagsRemoveAssetTagsAssetRelatedAssets(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")
    items: Optional[
        List[Optional["RemoveAssetTagsRemoveAssetTagsAssetRelatedAssetsItems"]]
    ]


class RemoveAssetTagsRemoveAssetTagsAssetRelatedAssetsItems(BaseModel):
    typename__: Literal[
        "Asset", "Audio", "Document", "EmbeddedContent", "File", "Image", "Video"
    ] = Field(alias="__typename")
    id: str
    creator: "RemoveAssetTagsRemoveAssetTagsAssetRelatedAssetsItemsCreator"
    created_at: Any = Field(alias="createdAt")
    modifier: Optional["RemoveAssetTagsRemoveAssetTagsAssetRelatedAssetsItemsModifier"]
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    attachments: Optional[
        List[
            Optional["RemoveAssetTagsRemoveAssetTagsAssetRelatedAssetsItemsAttachments"]
        ]
    ]
    external_id: Optional[str] = Field(alias="externalId")
    tags: Optional[
        List[Optional["RemoveAssetTagsRemoveAssetTagsAssetRelatedAssetsItemsTags"]]
    ]
    copyright: Optional[
        "RemoveAssetTagsRemoveAssetTagsAssetRelatedAssetsItemsCopyright"
    ]
    availability: "RemoveAssetTagsRemoveAssetTagsAssetRelatedAssetsItemsAvailability"
    expires_at: Optional[Any] = Field(alias="expiresAt")
    licenses: Optional[
        List[Optional["RemoveAssetTagsRemoveAssetTagsAssetRelatedAssetsItemsLicenses"]]
    ]
    status: AssetStatusType
    related_assets: (
        "RemoveAssetTagsRemoveAssetTagsAssetRelatedAssetsItemsRelatedAssets"
    ) = Field(alias="relatedAssets")
    comments: Optional["RemoveAssetTagsRemoveAssetTagsAssetRelatedAssetsItemsComments"]
    current_user_permissions: (
        "RemoveAssetTagsRemoveAssetTagsAssetRelatedAssetsItemsCurrentUserPermissions"
    ) = Field(alias="currentUserPermissions")
    workflow_task: Optional[
        "RemoveAssetTagsRemoveAssetTagsAssetRelatedAssetsItemsWorkflowTask"
    ] = Field(alias="workflowTask")
    variants: Optional["RemoveAssetTagsRemoveAssetTagsAssetRelatedAssetsItemsVariants"]
    preview_background_color: Optional[
        "RemoveAssetTagsRemoveAssetTagsAssetRelatedAssetsItemsPreviewBackgroundColor"
    ] = Field(alias="previewBackgroundColor")


class RemoveAssetTagsRemoveAssetTagsAssetRelatedAssetsItemsCreator(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class RemoveAssetTagsRemoveAssetTagsAssetRelatedAssetsItemsModifier(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class RemoveAssetTagsRemoveAssetTagsAssetRelatedAssetsItemsAttachments(BaseModel):
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    name: Optional[str]
    filename: Optional[str]
    type: Optional[str]
    external_id: Optional[str] = Field(alias="externalId")
    extension: Optional[str]
    size: Optional[Any]
    download_url: Optional[Any] = Field(alias="downloadUrl")


class RemoveAssetTagsRemoveAssetTagsAssetRelatedAssetsItemsTags(BaseModel):
    value: str
    source: Optional[TagSource]


class RemoveAssetTagsRemoveAssetTagsAssetRelatedAssetsItemsCopyright(BaseModel):
    status: CopyrightStatus
    notice: Optional[str]


class RemoveAssetTagsRemoveAssetTagsAssetRelatedAssetsItemsAvailability(BaseModel):
    from_: Optional[Any] = Field(alias="from")
    to: Optional[Any]


class RemoveAssetTagsRemoveAssetTagsAssetRelatedAssetsItemsLicenses(BaseModel):
    id: str
    title: str
    license: str
    add_by_default: bool = Field(alias="addByDefault")
    require_consensus: bool = Field(alias="requireConsensus")


class RemoveAssetTagsRemoveAssetTagsAssetRelatedAssetsItemsRelatedAssets(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class RemoveAssetTagsRemoveAssetTagsAssetRelatedAssetsItemsComments(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class RemoveAssetTagsRemoveAssetTagsAssetRelatedAssetsItemsCurrentUserPermissions(
    BaseModel
):
    can_edit: bool = Field(alias="canEdit")
    can_delete: bool = Field(alias="canDelete")
    can_download: bool = Field(alias="canDownload")
    can_comment: bool = Field(alias="canComment")


class RemoveAssetTagsRemoveAssetTagsAssetRelatedAssetsItemsWorkflowTask(BaseModel):
    id: str
    title: Optional[str]
    description: Optional[str]


class RemoveAssetTagsRemoveAssetTagsAssetRelatedAssetsItemsVariants(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class RemoveAssetTagsRemoveAssetTagsAssetRelatedAssetsItemsPreviewBackgroundColor(
    BaseModel
):
    red: Any
    green: Any
    blue: Any
    alpha: Any


class RemoveAssetTagsRemoveAssetTagsAssetComments(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")
    items: Optional[List[Optional["RemoveAssetTagsRemoveAssetTagsAssetCommentsItems"]]]


class RemoveAssetTagsRemoveAssetTagsAssetCommentsItems(BaseModel):
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    content: str
    mentioned_users: List[
        Optional["RemoveAssetTagsRemoveAssetTagsAssetCommentsItemsMentionedUsers"]
    ] = Field(alias="mentionedUsers")
    is_resolved: bool = Field(alias="isResolved")
    replies: "RemoveAssetTagsRemoveAssetTagsAssetCommentsItemsReplies"


class RemoveAssetTagsRemoveAssetTagsAssetCommentsItemsMentionedUsers(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class RemoveAssetTagsRemoveAssetTagsAssetCommentsItemsReplies(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class RemoveAssetTagsRemoveAssetTagsAssetCurrentUserPermissions(BaseModel):
    can_edit: bool = Field(alias="canEdit")
    can_delete: bool = Field(alias="canDelete")
    can_download: bool = Field(alias="canDownload")
    can_comment: bool = Field(alias="canComment")


class RemoveAssetTagsRemoveAssetTagsAssetCustomMetadata(BaseModel):
    typename__: Literal[
        "CustomMetadata", "CustomMetadataValue", "CustomMetadataValues"
    ] = Field(alias="__typename")
    property: "RemoveAssetTagsRemoveAssetTagsAssetCustomMetadataProperty"


class RemoveAssetTagsRemoveAssetTagsAssetCustomMetadataProperty(BaseModel):
    id: str
    creator: "RemoveAssetTagsRemoveAssetTagsAssetCustomMetadataPropertyCreator"
    created_at: Any = Field(alias="createdAt")
    modifier: Optional[
        "RemoveAssetTagsRemoveAssetTagsAssetCustomMetadataPropertyModifier"
    ]
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    name: str
    type: "RemoveAssetTagsRemoveAssetTagsAssetCustomMetadataPropertyType"
    help_text: Optional[str] = Field(alias="helpText")
    is_required: bool = Field(alias="isRequired")
    default_value: Optional[Any] = Field(alias="defaultValue")


class RemoveAssetTagsRemoveAssetTagsAssetCustomMetadataPropertyCreator(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class RemoveAssetTagsRemoveAssetTagsAssetCustomMetadataPropertyModifier(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class RemoveAssetTagsRemoveAssetTagsAssetCustomMetadataPropertyType(BaseModel):
    typename__: Literal[
        "CustomMetadataPropertyType",
        "CustomMetadataPropertyTypeDate",
        "CustomMetadataPropertyTypeLongText",
        "CustomMetadataPropertyTypeMultiSelect",
        "CustomMetadataPropertyTypeNumber",
        "CustomMetadataPropertyTypeSelect",
        "CustomMetadataPropertyTypeText",
        "CustomMetadataPropertyTypeUrl",
    ] = Field(alias="__typename")
    name: str


class RemoveAssetTagsRemoveAssetTagsAssetWorkflowTask(BaseModel):
    id: str
    assigned_users: List[
        Optional["RemoveAssetTagsRemoveAssetTagsAssetWorkflowTaskAssignedUsers"]
    ] = Field(alias="assignedUsers")
    asset: Optional["RemoveAssetTagsRemoveAssetTagsAssetWorkflowTaskAsset"]
    title: Optional[str]
    description: Optional[str]
    status: "RemoveAssetTagsRemoveAssetTagsAssetWorkflowTaskStatus"
    checklist_item: "RemoveAssetTagsRemoveAssetTagsAssetWorkflowTaskChecklistItem" = (
        Field(alias="checklistItem")
    )


class RemoveAssetTagsRemoveAssetTagsAssetWorkflowTaskAssignedUsers(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class RemoveAssetTagsRemoveAssetTagsAssetWorkflowTaskAsset(BaseModel):
    typename__: Literal[
        "Asset", "Audio", "Document", "EmbeddedContent", "File", "Image", "Video"
    ] = Field(alias="__typename")
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    external_id: Optional[str] = Field(alias="externalId")
    expires_at: Optional[Any] = Field(alias="expiresAt")
    status: AssetStatusType
    variants: Optional["RemoveAssetTagsRemoveAssetTagsAssetWorkflowTaskAssetVariants"]
    preview_background_color: Optional[
        "RemoveAssetTagsRemoveAssetTagsAssetWorkflowTaskAssetPreviewBackgroundColor"
    ] = Field(alias="previewBackgroundColor")


class RemoveAssetTagsRemoveAssetTagsAssetWorkflowTaskAssetVariants(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class RemoveAssetTagsRemoveAssetTagsAssetWorkflowTaskAssetPreviewBackgroundColor(
    BaseModel
):
    red: Any
    green: Any
    blue: Any
    alpha: Any


class RemoveAssetTagsRemoveAssetTagsAssetWorkflowTaskStatus(BaseModel):
    id: str
    name: str
    color: "RemoveAssetTagsRemoveAssetTagsAssetWorkflowTaskStatusColor"
    assigned_users: List[
        Optional["RemoveAssetTagsRemoveAssetTagsAssetWorkflowTaskStatusAssignedUsers"]
    ] = Field(alias="assignedUsers")
    checklist_presets: List[
        Optional[
            "RemoveAssetTagsRemoveAssetTagsAssetWorkflowTaskStatusChecklistPresets"
        ]
    ] = Field(alias="checklistPresets")
    tasks: "RemoveAssetTagsRemoveAssetTagsAssetWorkflowTaskStatusTasks"
    enter_rules: List[Optional[WorkflowStatusEnterRule]] = Field(alias="enterRules")


class RemoveAssetTagsRemoveAssetTagsAssetWorkflowTaskStatusColor(BaseModel):
    red: Any
    green: Any
    blue: Any
    alpha: Any


class RemoveAssetTagsRemoveAssetTagsAssetWorkflowTaskStatusAssignedUsers(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class RemoveAssetTagsRemoveAssetTagsAssetWorkflowTaskStatusChecklistPresets(BaseModel):
    id: str
    content: str


class RemoveAssetTagsRemoveAssetTagsAssetWorkflowTaskStatusTasks(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class RemoveAssetTagsRemoveAssetTagsAssetWorkflowTaskChecklistItem(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")
    items: Optional[
        List[
            Optional[
                "RemoveAssetTagsRemoveAssetTagsAssetWorkflowTaskChecklistItemItems"
            ]
        ]
    ]


class RemoveAssetTagsRemoveAssetTagsAssetWorkflowTaskChecklistItemItems(BaseModel):
    id: str
    content: str


RemoveAssetTags.model_rebuild()
RemoveAssetTagsRemoveAssetTags.model_rebuild()
RemoveAssetTagsRemoveAssetTagsAsset.model_rebuild()
RemoveAssetTagsRemoveAssetTagsAssetAttachments.model_rebuild()
RemoveAssetTagsRemoveAssetTagsAssetRelatedAssets.model_rebuild()
RemoveAssetTagsRemoveAssetTagsAssetRelatedAssetsItems.model_rebuild()
RemoveAssetTagsRemoveAssetTagsAssetComments.model_rebuild()
RemoveAssetTagsRemoveAssetTagsAssetCommentsItems.model_rebuild()
RemoveAssetTagsRemoveAssetTagsAssetCustomMetadata.model_rebuild()
RemoveAssetTagsRemoveAssetTagsAssetCustomMetadataProperty.model_rebuild()
RemoveAssetTagsRemoveAssetTagsAssetWorkflowTask.model_rebuild()
RemoveAssetTagsRemoveAssetTagsAssetWorkflowTaskAsset.model_rebuild()
RemoveAssetTagsRemoveAssetTagsAssetWorkflowTaskStatus.model_rebuild()
RemoveAssetTagsRemoveAssetTagsAssetWorkflowTaskChecklistItem.model_rebuild()
