# Generated by ariadne-codegen
# Source: queries-mutations

from typing import Any, List, Literal, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import AssetStatusType, CopyrightStatus, CreativeJobStatus, TagSource


class ExportCreative(BaseModel):
    export_creative: Optional["ExportCreativeExportCreative"] = Field(
        alias="exportCreative"
    )


class ExportCreativeExportCreative(BaseModel):
    job: "ExportCreativeExportCreativeJob"


class ExportCreativeExportCreativeJob(BaseModel):
    id: str
    status: CreativeJobStatus
    result: Optional["ExportCreativeExportCreativeJobResult"]


class ExportCreativeExportCreativeJobResult(BaseModel):
    download_url: Any = Field(alias="downloadUrl")
    page_download_urls: List[Any] = Field(alias="pageDownloadUrls")
    asset: Optional["ExportCreativeExportCreativeJobResultAsset"]


class ExportCreativeExportCreativeJobResultAsset(BaseModel):
    id: str
    creator: "ExportCreativeExportCreativeJobResultAssetCreator"
    created_at: Any = Field(alias="createdAt")
    modifier: Optional["ExportCreativeExportCreativeJobResultAssetModifier"]
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    alternative_text: Optional[str] = Field(alias="alternativeText")
    is_decorative: bool = Field(alias="isDecorative")
    attachments: Optional[
        List[Optional["ExportCreativeExportCreativeJobResultAssetAttachments"]]
    ]
    external_id: Optional[str] = Field(alias="externalId")
    tags: Optional[List[Optional["ExportCreativeExportCreativeJobResultAssetTags"]]]
    copyright: Optional["ExportCreativeExportCreativeJobResultAssetCopyright"]
    availability: "ExportCreativeExportCreativeJobResultAssetAvailability"
    expires_at: Optional[Any] = Field(alias="expiresAt")
    licenses: Optional[
        List[Optional["ExportCreativeExportCreativeJobResultAssetLicenses"]]
    ]
    author: Optional[str]
    status: AssetStatusType
    related_assets: "ExportCreativeExportCreativeJobResultAssetRelatedAssets" = Field(
        alias="relatedAssets"
    )
    comments: Optional["ExportCreativeExportCreativeJobResultAssetComments"]
    current_user_permissions: (
        "ExportCreativeExportCreativeJobResultAssetCurrentUserPermissions"
    ) = Field(alias="currentUserPermissions")
    workflow_task: Optional[
        "ExportCreativeExportCreativeJobResultAssetWorkflowTask"
    ] = Field(alias="workflowTask")
    variants: Optional["ExportCreativeExportCreativeJobResultAssetVariants"]
    preview_background_color: Optional[
        "ExportCreativeExportCreativeJobResultAssetPreviewBackgroundColor"
    ] = Field(alias="previewBackgroundColor")
    filename: Optional[str]
    size: Optional[Any]
    extension: str
    preview_url: Any = Field(alias="previewUrl")
    thumbnail_url: Optional[Any] = Field(alias="thumbnailUrl")
    dynamic_preview_url: Optional[Any] = Field(alias="dynamicPreviewUrl")
    download_url: Optional[Any] = Field(alias="downloadUrl")


class ExportCreativeExportCreativeJobResultAssetCreator(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class ExportCreativeExportCreativeJobResultAssetModifier(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class ExportCreativeExportCreativeJobResultAssetAttachments(BaseModel):
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    name: Optional[str]
    filename: Optional[str]
    type: Optional[str]
    external_id: Optional[str] = Field(alias="externalId")
    extension: Optional[str]
    size: Optional[Any]
    download_url: Optional[Any] = Field(alias="downloadUrl")


class ExportCreativeExportCreativeJobResultAssetTags(BaseModel):
    value: str
    source: Optional[TagSource]


class ExportCreativeExportCreativeJobResultAssetCopyright(BaseModel):
    status: CopyrightStatus
    notice: Optional[str]


class ExportCreativeExportCreativeJobResultAssetAvailability(BaseModel):
    from_: Optional[Any] = Field(alias="from")
    to: Optional[Any]


class ExportCreativeExportCreativeJobResultAssetLicenses(BaseModel):
    id: str
    title: str
    license: str
    add_by_default: bool = Field(alias="addByDefault")
    require_consensus: bool = Field(alias="requireConsensus")


class ExportCreativeExportCreativeJobResultAssetRelatedAssets(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class ExportCreativeExportCreativeJobResultAssetComments(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class ExportCreativeExportCreativeJobResultAssetCurrentUserPermissions(BaseModel):
    can_edit: bool = Field(alias="canEdit")
    can_delete: bool = Field(alias="canDelete")
    can_download: bool = Field(alias="canDownload")
    can_comment: bool = Field(alias="canComment")


class ExportCreativeExportCreativeJobResultAssetWorkflowTask(BaseModel):
    id: str
    title: Optional[str]
    description: Optional[str]


class ExportCreativeExportCreativeJobResultAssetVariants(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class ExportCreativeExportCreativeJobResultAssetPreviewBackgroundColor(BaseModel):
    red: Any
    green: Any
    blue: Any
    alpha: Any


ExportCreative.model_rebuild()
ExportCreativeExportCreative.model_rebuild()
ExportCreativeExportCreativeJob.model_rebuild()
ExportCreativeExportCreativeJobResult.model_rebuild()
ExportCreativeExportCreativeJobResultAsset.model_rebuild()
