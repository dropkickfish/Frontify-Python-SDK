# Generated by ariadne-codegen
# Source: queries-mutations

from typing import Any, List, Literal, Optional

from pydantic import Field

from .base_model import BaseModel


class Webhooks(BaseModel):
    webhooks: Optional["WebhooksWebhooks"]


class WebhooksWebhooks(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")
    items: Optional[List[Optional["WebhooksWebhooksItems"]]]


class WebhooksWebhooksItems(BaseModel):
    typename__: Literal["ProjectWebhook", "Webhook"] = Field(alias="__typename")
    id: str
    creator: "WebhooksWebhooksItemsCreator"
    created_at: Any = Field(alias="createdAt")
    name: str
    notification_url: Any = Field(alias="notificationUrl")
    secret: str


class WebhooksWebhooksItemsCreator(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    email: Any
    name: Optional[str]
    avatar: Optional[Any]


Webhooks.model_rebuild()
WebhooksWebhooks.model_rebuild()
WebhooksWebhooksItems.model_rebuild()
