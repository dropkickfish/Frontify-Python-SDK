# Generated by ariadne-codegen
# Source: queries-mutations

from typing import Annotated, Any, List, Literal, Optional, Union

from pydantic import Field

from .base_model import BaseModel
from .enums import (
    AssetStatusType,
    CopyrightStatus,
    CreativeTemplateVariableType,
    LanguageCode,
    TagSource,
    WorkflowStatusEnterRule,
)


class UpdateBrand(BaseModel):
    update_brand: Optional["UpdateBrandUpdateBrand"] = Field(alias="updateBrand")


class UpdateBrandUpdateBrand(BaseModel):
    brand: "UpdateBrandUpdateBrandBrand"


class UpdateBrandUpdateBrandBrand(BaseModel):
    id: str
    name: str
    rgba_color: Optional["UpdateBrandUpdateBrandBrandRgbaColor"] = Field(
        alias="rgbaColor"
    )
    avatar: Optional[Any]
    slug: Optional[str]
    search: Optional["UpdateBrandUpdateBrandBrandSearch"]
    libraries: Optional["UpdateBrandUpdateBrandBrandLibraries"]
    workspace_projects: Optional["UpdateBrandUpdateBrandBrandWorkspaceProjects"] = (
        Field(alias="workspaceProjects")
    )
    guidelines: Optional["UpdateBrandUpdateBrandBrandGuidelines"]
    custom_metadata_properties: List[
        "UpdateBrandUpdateBrandBrandCustomMetadataProperties"
    ] = Field(alias="customMetadataProperties")
    creative_templates: "UpdateBrandUpdateBrandBrandCreativeTemplates" = Field(
        alias="creativeTemplates"
    )


class UpdateBrandUpdateBrandBrandRgbaColor(BaseModel):
    red: Any
    green: Any
    blue: Any
    alpha: Any


class UpdateBrandUpdateBrandBrandSearch(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")
    items: Optional[
        List[
            Optional[
                Annotated[
                    Union[
                        "UpdateBrandUpdateBrandBrandSearchItemsAudio",
                        "UpdateBrandUpdateBrandBrandSearchItemsDocument",
                        "UpdateBrandUpdateBrandBrandSearchItemsEmbeddedContent",
                        "UpdateBrandUpdateBrandBrandSearchItemsFile",
                        "UpdateBrandUpdateBrandBrandSearchItemsImage",
                        "UpdateBrandUpdateBrandBrandSearchItemsVideo",
                    ],
                    Field(discriminator="typename__"),
                ]
            ]
        ]
    ]
    edges: Optional[List[Optional["UpdateBrandUpdateBrandBrandSearchEdges"]]]


class UpdateBrandUpdateBrandBrandSearchItemsAudio(BaseModel):
    typename__: Literal["Audio"] = Field(alias="__typename")
    id: str
    creator: "UpdateBrandUpdateBrandBrandSearchItemsAudioCreator"
    created_at: Any = Field(alias="createdAt")
    modifier: Optional["UpdateBrandUpdateBrandBrandSearchItemsAudioModifier"]
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    alternative_text: Optional[str] = Field(alias="alternativeText")
    is_decorative: bool = Field(alias="isDecorative")
    attachments: Optional[
        List[Optional["UpdateBrandUpdateBrandBrandSearchItemsAudioAttachments"]]
    ]
    external_id: Optional[str] = Field(alias="externalId")
    tags: Optional[List[Optional["UpdateBrandUpdateBrandBrandSearchItemsAudioTags"]]]
    external_products: Optional[
        List[Optional["UpdateBrandUpdateBrandBrandSearchItemsAudioExternalProducts"]]
    ] = Field(alias="externalProducts")
    copyright: Optional["UpdateBrandUpdateBrandBrandSearchItemsAudioCopyright"]
    availability: "UpdateBrandUpdateBrandBrandSearchItemsAudioAvailability"
    expires_at: Optional[Any] = Field(alias="expiresAt")
    licenses: Optional[
        List[Optional["UpdateBrandUpdateBrandBrandSearchItemsAudioLicenses"]]
    ]
    author: Optional[str]
    status: AssetStatusType
    related_assets: "UpdateBrandUpdateBrandBrandSearchItemsAudioRelatedAssets" = Field(
        alias="relatedAssets"
    )
    comments: Optional["UpdateBrandUpdateBrandBrandSearchItemsAudioComments"]
    current_user_permissions: (
        "UpdateBrandUpdateBrandBrandSearchItemsAudioCurrentUserPermissions"
    ) = Field(alias="currentUserPermissions")
    custom_metadata: List[
        "UpdateBrandUpdateBrandBrandSearchItemsAudioCustomMetadata"
    ] = Field(alias="customMetadata")
    workflow_task: Optional[
        "UpdateBrandUpdateBrandBrandSearchItemsAudioWorkflowTask"
    ] = Field(alias="workflowTask")
    variants: Optional["UpdateBrandUpdateBrandBrandSearchItemsAudioVariants"]
    location: "UpdateBrandUpdateBrandBrandSearchItemsAudioLocation"
    preview_background_color: Optional[
        "UpdateBrandUpdateBrandBrandSearchItemsAudioPreviewBackgroundColor"
    ] = Field(alias="previewBackgroundColor")
    filename: Optional[str]
    size: Optional[Any]
    extension: str
    download_url: Optional[Any] = Field(alias="downloadUrl")
    preview_url: Any = Field(alias="previewUrl")
    thumbnail_url: Optional[Any] = Field(alias="thumbnailUrl")
    dynamic_preview_url: Optional[Any] = Field(alias="dynamicPreviewUrl")


class UpdateBrandUpdateBrandBrandSearchItemsAudioCreator(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class UpdateBrandUpdateBrandBrandSearchItemsAudioModifier(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class UpdateBrandUpdateBrandBrandSearchItemsAudioAttachments(BaseModel):
    id: str
    creator: "UpdateBrandUpdateBrandBrandSearchItemsAudioAttachmentsCreator"
    created_at: Any = Field(alias="createdAt")
    modifier: Optional["UpdateBrandUpdateBrandBrandSearchItemsAudioAttachmentsModifier"]
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    name: Optional[str]
    filename: Optional[str]
    type: Optional[str]
    external_id: Optional[str] = Field(alias="externalId")
    extension: Optional[str]
    size: Optional[Any]
    download_url: Optional[Any] = Field(alias="downloadUrl")


class UpdateBrandUpdateBrandBrandSearchItemsAudioAttachmentsCreator(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class UpdateBrandUpdateBrandBrandSearchItemsAudioAttachmentsModifier(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class UpdateBrandUpdateBrandBrandSearchItemsAudioTags(BaseModel):
    value: str
    source: Optional[TagSource]


class UpdateBrandUpdateBrandBrandSearchItemsAudioExternalProducts(BaseModel):
    id: str
    name: str
    external_id: Optional[str] = Field(alias="externalId")
    title: Optional[str]


class UpdateBrandUpdateBrandBrandSearchItemsAudioCopyright(BaseModel):
    status: CopyrightStatus
    notice: Optional[str]


class UpdateBrandUpdateBrandBrandSearchItemsAudioAvailability(BaseModel):
    from_: Optional[Any] = Field(alias="from")
    to: Optional[Any]


class UpdateBrandUpdateBrandBrandSearchItemsAudioLicenses(BaseModel):
    id: str
    title: str
    license: str
    add_by_default: bool = Field(alias="addByDefault")
    require_consensus: bool = Field(alias="requireConsensus")


class UpdateBrandUpdateBrandBrandSearchItemsAudioRelatedAssets(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")
    items: Optional[
        List[Optional["UpdateBrandUpdateBrandBrandSearchItemsAudioRelatedAssetsItems"]]
    ]


class UpdateBrandUpdateBrandBrandSearchItemsAudioRelatedAssetsItems(BaseModel):
    typename__: Literal[
        "Asset", "Audio", "Document", "EmbeddedContent", "File", "Image", "Video"
    ] = Field(alias="__typename")
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    external_id: Optional[str] = Field(alias="externalId")
    expires_at: Optional[Any] = Field(alias="expiresAt")
    status: AssetStatusType


class UpdateBrandUpdateBrandBrandSearchItemsAudioComments(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")
    items: Optional[
        List[Optional["UpdateBrandUpdateBrandBrandSearchItemsAudioCommentsItems"]]
    ]


class UpdateBrandUpdateBrandBrandSearchItemsAudioCommentsItems(BaseModel):
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    content: str
    is_resolved: bool = Field(alias="isResolved")


class UpdateBrandUpdateBrandBrandSearchItemsAudioCurrentUserPermissions(BaseModel):
    can_edit: bool = Field(alias="canEdit")
    can_delete: bool = Field(alias="canDelete")
    can_download: bool = Field(alias="canDownload")
    can_comment: bool = Field(alias="canComment")


class UpdateBrandUpdateBrandBrandSearchItemsAudioCustomMetadata(BaseModel):
    typename__: Literal[
        "CustomMetadata", "CustomMetadataValue", "CustomMetadataValues"
    ] = Field(alias="__typename")
    property: "UpdateBrandUpdateBrandBrandSearchItemsAudioCustomMetadataProperty"


class UpdateBrandUpdateBrandBrandSearchItemsAudioCustomMetadataProperty(BaseModel):
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    name: str
    help_text: Optional[str] = Field(alias="helpText")
    is_required: bool = Field(alias="isRequired")
    default_value: Optional[Any] = Field(alias="defaultValue")


class UpdateBrandUpdateBrandBrandSearchItemsAudioWorkflowTask(BaseModel):
    id: str
    assigned_users: List[
        Optional["UpdateBrandUpdateBrandBrandSearchItemsAudioWorkflowTaskAssignedUsers"]
    ] = Field(alias="assignedUsers")
    asset: Optional["UpdateBrandUpdateBrandBrandSearchItemsAudioWorkflowTaskAsset"]
    title: Optional[str]
    description: Optional[str]
    status: "UpdateBrandUpdateBrandBrandSearchItemsAudioWorkflowTaskStatus"
    checklist_item: (
        "UpdateBrandUpdateBrandBrandSearchItemsAudioWorkflowTaskChecklistItem"
    ) = Field(alias="checklistItem")


class UpdateBrandUpdateBrandBrandSearchItemsAudioWorkflowTaskAssignedUsers(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class UpdateBrandUpdateBrandBrandSearchItemsAudioWorkflowTaskAsset(BaseModel):
    typename__: Literal[
        "Asset", "Audio", "Document", "EmbeddedContent", "File", "Image", "Video"
    ] = Field(alias="__typename")
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    external_id: Optional[str] = Field(alias="externalId")
    expires_at: Optional[Any] = Field(alias="expiresAt")
    status: AssetStatusType


class UpdateBrandUpdateBrandBrandSearchItemsAudioWorkflowTaskStatus(BaseModel):
    id: str
    name: str
    enter_rules: List[Optional[WorkflowStatusEnterRule]] = Field(alias="enterRules")


class UpdateBrandUpdateBrandBrandSearchItemsAudioWorkflowTaskChecklistItem(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class UpdateBrandUpdateBrandBrandSearchItemsAudioVariants(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")
    items: List[Optional["UpdateBrandUpdateBrandBrandSearchItemsAudioVariantsItems"]]


class UpdateBrandUpdateBrandBrandSearchItemsAudioVariantsItems(BaseModel):
    key: str
    filename: Optional[str]
    download_url: Optional[Any] = Field(alias="downloadUrl")


class UpdateBrandUpdateBrandBrandSearchItemsAudioLocation(BaseModel):
    brand: Optional["UpdateBrandUpdateBrandBrandSearchItemsAudioLocationBrand"]
    library: Optional["UpdateBrandUpdateBrandBrandSearchItemsAudioLocationLibrary"]
    workspace_project: Optional[
        "UpdateBrandUpdateBrandBrandSearchItemsAudioLocationWorkspaceProject"
    ] = Field(alias="workspaceProject")
    folder: Optional["UpdateBrandUpdateBrandBrandSearchItemsAudioLocationFolder"]


class UpdateBrandUpdateBrandBrandSearchItemsAudioLocationBrand(BaseModel):
    id: str
    name: str


class UpdateBrandUpdateBrandBrandSearchItemsAudioLocationLibrary(BaseModel):
    id: str
    name: Optional[str]


class UpdateBrandUpdateBrandBrandSearchItemsAudioLocationWorkspaceProject(BaseModel):
    id: str
    name: Optional[str]


class UpdateBrandUpdateBrandBrandSearchItemsAudioLocationFolder(BaseModel):
    id: str
    name: str


class UpdateBrandUpdateBrandBrandSearchItemsAudioPreviewBackgroundColor(BaseModel):
    red: Any
    green: Any
    blue: Any
    alpha: Any


class UpdateBrandUpdateBrandBrandSearchItemsDocument(BaseModel):
    typename__: Literal["Document"] = Field(alias="__typename")
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    alternative_text: Optional[str] = Field(alias="alternativeText")
    is_decorative: bool = Field(alias="isDecorative")
    external_id: Optional[str] = Field(alias="externalId")
    expires_at: Optional[Any] = Field(alias="expiresAt")
    author: Optional[str]
    status: AssetStatusType
    filename: Optional[str]
    size: Optional[Any]
    extension: str
    preview_url: Any = Field(alias="previewUrl")
    thumbnail_url: Optional[Any] = Field(alias="thumbnailUrl")
    dynamic_preview_url: Optional[Any] = Field(alias="dynamicPreviewUrl")
    download_url: Optional[Any] = Field(alias="downloadUrl")
    focal_point: Optional[List[Optional[float]]] = Field(alias="focalPoint")
    width: int
    height: int
    page_count: Optional[int] = Field(alias="pageCount")


class UpdateBrandUpdateBrandBrandSearchItemsEmbeddedContent(BaseModel):
    typename__: Literal["EmbeddedContent"] = Field(alias="__typename")
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    alternative_text: Optional[str] = Field(alias="alternativeText")
    is_decorative: bool = Field(alias="isDecorative")
    external_id: Optional[str] = Field(alias="externalId")
    expires_at: Optional[Any] = Field(alias="expiresAt")
    author: Optional[str]
    status: AssetStatusType
    preview_url: Any = Field(alias="previewUrl")
    thumbnail_url: Optional[Any] = Field(alias="thumbnailUrl")


class UpdateBrandUpdateBrandBrandSearchItemsFile(BaseModel):
    typename__: Literal["File"] = Field(alias="__typename")
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    alternative_text: Optional[str] = Field(alias="alternativeText")
    is_decorative: bool = Field(alias="isDecorative")
    external_id: Optional[str] = Field(alias="externalId")
    expires_at: Optional[Any] = Field(alias="expiresAt")
    author: Optional[str]
    status: AssetStatusType
    filename: Optional[str]
    size: Optional[Any]
    extension: str
    preview_url: Any = Field(alias="previewUrl")
    thumbnail_url: Optional[Any] = Field(alias="thumbnailUrl")
    dynamic_preview_url: Optional[Any] = Field(alias="dynamicPreviewUrl")
    download_url: Optional[Any] = Field(alias="downloadUrl")


class UpdateBrandUpdateBrandBrandSearchItemsImage(BaseModel):
    typename__: Literal["Image"] = Field(alias="__typename")
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    alternative_text: Optional[str] = Field(alias="alternativeText")
    is_decorative: bool = Field(alias="isDecorative")
    external_id: Optional[str] = Field(alias="externalId")
    expires_at: Optional[Any] = Field(alias="expiresAt")
    author: Optional[str]
    status: AssetStatusType
    filename: Optional[str]
    size: Optional[Any]
    extension: str
    preview_url: Any = Field(alias="previewUrl")
    thumbnail_url: Optional[Any] = Field(alias="thumbnailUrl")
    dynamic_preview_url: Optional[Any] = Field(alias="dynamicPreviewUrl")
    download_url: Optional[Any] = Field(alias="downloadUrl")
    focal_point: Optional[List[Optional[float]]] = Field(alias="focalPoint")
    width: int
    height: int


class UpdateBrandUpdateBrandBrandSearchItemsVideo(BaseModel):
    typename__: Literal["Video"] = Field(alias="__typename")
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    alternative_text: Optional[str] = Field(alias="alternativeText")
    is_decorative: bool = Field(alias="isDecorative")
    external_id: Optional[str] = Field(alias="externalId")
    expires_at: Optional[Any] = Field(alias="expiresAt")
    author: Optional[str]
    status: AssetStatusType
    filename: Optional[str]
    size: Optional[Any]
    extension: str
    preview_url: Any = Field(alias="previewUrl")
    thumbnail_url: Optional[Any] = Field(alias="thumbnailUrl")
    dynamic_preview_url: Optional[Any] = Field(alias="dynamicPreviewUrl")
    download_url: Optional[Any] = Field(alias="downloadUrl")
    width: int
    height: int
    duration: float
    bitrate: int


class UpdateBrandUpdateBrandBrandSearchEdges(BaseModel):
    title: str
    node: Optional[
        Annotated[
            Union[
                "UpdateBrandUpdateBrandBrandSearchEdgesNodeAudio",
                "UpdateBrandUpdateBrandBrandSearchEdgesNodeDocument",
                "UpdateBrandUpdateBrandBrandSearchEdgesNodeEmbeddedContent",
                "UpdateBrandUpdateBrandBrandSearchEdgesNodeFile",
                "UpdateBrandUpdateBrandBrandSearchEdgesNodeImage",
                "UpdateBrandUpdateBrandBrandSearchEdgesNodeVideo",
            ],
            Field(discriminator="typename__"),
        ]
    ]


class UpdateBrandUpdateBrandBrandSearchEdgesNodeAudio(BaseModel):
    typename__: Literal["Audio"] = Field(alias="__typename")
    id: str
    creator: "UpdateBrandUpdateBrandBrandSearchEdgesNodeAudioCreator"
    created_at: Any = Field(alias="createdAt")
    modifier: Optional["UpdateBrandUpdateBrandBrandSearchEdgesNodeAudioModifier"]
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    alternative_text: Optional[str] = Field(alias="alternativeText")
    is_decorative: bool = Field(alias="isDecorative")
    attachments: Optional[
        List[Optional["UpdateBrandUpdateBrandBrandSearchEdgesNodeAudioAttachments"]]
    ]
    external_id: Optional[str] = Field(alias="externalId")
    tags: Optional[
        List[Optional["UpdateBrandUpdateBrandBrandSearchEdgesNodeAudioTags"]]
    ]
    external_products: Optional[
        List[
            Optional["UpdateBrandUpdateBrandBrandSearchEdgesNodeAudioExternalProducts"]
        ]
    ] = Field(alias="externalProducts")
    copyright: Optional["UpdateBrandUpdateBrandBrandSearchEdgesNodeAudioCopyright"]
    availability: "UpdateBrandUpdateBrandBrandSearchEdgesNodeAudioAvailability"
    expires_at: Optional[Any] = Field(alias="expiresAt")
    licenses: Optional[
        List[Optional["UpdateBrandUpdateBrandBrandSearchEdgesNodeAudioLicenses"]]
    ]
    author: Optional[str]
    status: AssetStatusType
    related_assets: "UpdateBrandUpdateBrandBrandSearchEdgesNodeAudioRelatedAssets" = (
        Field(alias="relatedAssets")
    )
    comments: Optional["UpdateBrandUpdateBrandBrandSearchEdgesNodeAudioComments"]
    current_user_permissions: (
        "UpdateBrandUpdateBrandBrandSearchEdgesNodeAudioCurrentUserPermissions"
    ) = Field(alias="currentUserPermissions")
    workflow_task: Optional[
        "UpdateBrandUpdateBrandBrandSearchEdgesNodeAudioWorkflowTask"
    ] = Field(alias="workflowTask")
    variants: Optional["UpdateBrandUpdateBrandBrandSearchEdgesNodeAudioVariants"]
    preview_background_color: Optional[
        "UpdateBrandUpdateBrandBrandSearchEdgesNodeAudioPreviewBackgroundColor"
    ] = Field(alias="previewBackgroundColor")
    filename: Optional[str]
    size: Optional[Any]
    extension: str
    download_url: Optional[Any] = Field(alias="downloadUrl")
    preview_url: Any = Field(alias="previewUrl")
    thumbnail_url: Optional[Any] = Field(alias="thumbnailUrl")
    dynamic_preview_url: Optional[Any] = Field(alias="dynamicPreviewUrl")


class UpdateBrandUpdateBrandBrandSearchEdgesNodeAudioCreator(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class UpdateBrandUpdateBrandBrandSearchEdgesNodeAudioModifier(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class UpdateBrandUpdateBrandBrandSearchEdgesNodeAudioAttachments(BaseModel):
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    name: Optional[str]
    filename: Optional[str]
    type: Optional[str]
    external_id: Optional[str] = Field(alias="externalId")
    extension: Optional[str]
    size: Optional[Any]
    download_url: Optional[Any] = Field(alias="downloadUrl")


class UpdateBrandUpdateBrandBrandSearchEdgesNodeAudioTags(BaseModel):
    value: str
    source: Optional[TagSource]


class UpdateBrandUpdateBrandBrandSearchEdgesNodeAudioExternalProducts(BaseModel):
    id: str
    name: str
    external_id: Optional[str] = Field(alias="externalId")
    title: Optional[str]


class UpdateBrandUpdateBrandBrandSearchEdgesNodeAudioCopyright(BaseModel):
    status: CopyrightStatus
    notice: Optional[str]


class UpdateBrandUpdateBrandBrandSearchEdgesNodeAudioAvailability(BaseModel):
    from_: Optional[Any] = Field(alias="from")
    to: Optional[Any]


class UpdateBrandUpdateBrandBrandSearchEdgesNodeAudioLicenses(BaseModel):
    id: str
    title: str
    license: str
    add_by_default: bool = Field(alias="addByDefault")
    require_consensus: bool = Field(alias="requireConsensus")


class UpdateBrandUpdateBrandBrandSearchEdgesNodeAudioRelatedAssets(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class UpdateBrandUpdateBrandBrandSearchEdgesNodeAudioComments(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class UpdateBrandUpdateBrandBrandSearchEdgesNodeAudioCurrentUserPermissions(BaseModel):
    can_edit: bool = Field(alias="canEdit")
    can_delete: bool = Field(alias="canDelete")
    can_download: bool = Field(alias="canDownload")
    can_comment: bool = Field(alias="canComment")


class UpdateBrandUpdateBrandBrandSearchEdgesNodeAudioWorkflowTask(BaseModel):
    id: str
    title: Optional[str]
    description: Optional[str]


class UpdateBrandUpdateBrandBrandSearchEdgesNodeAudioVariants(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class UpdateBrandUpdateBrandBrandSearchEdgesNodeAudioPreviewBackgroundColor(BaseModel):
    red: Any
    green: Any
    blue: Any
    alpha: Any


class UpdateBrandUpdateBrandBrandSearchEdgesNodeDocument(BaseModel):
    typename__: Literal["Document"] = Field(alias="__typename")
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    alternative_text: Optional[str] = Field(alias="alternativeText")
    is_decorative: bool = Field(alias="isDecorative")
    external_id: Optional[str] = Field(alias="externalId")
    expires_at: Optional[Any] = Field(alias="expiresAt")
    author: Optional[str]
    status: AssetStatusType
    filename: Optional[str]
    size: Optional[Any]
    extension: str
    preview_url: Any = Field(alias="previewUrl")
    thumbnail_url: Optional[Any] = Field(alias="thumbnailUrl")
    dynamic_preview_url: Optional[Any] = Field(alias="dynamicPreviewUrl")
    download_url: Optional[Any] = Field(alias="downloadUrl")
    focal_point: Optional[List[Optional[float]]] = Field(alias="focalPoint")
    width: int
    height: int
    page_count: Optional[int] = Field(alias="pageCount")


class UpdateBrandUpdateBrandBrandSearchEdgesNodeEmbeddedContent(BaseModel):
    typename__: Literal["EmbeddedContent"] = Field(alias="__typename")
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    alternative_text: Optional[str] = Field(alias="alternativeText")
    is_decorative: bool = Field(alias="isDecorative")
    external_id: Optional[str] = Field(alias="externalId")
    expires_at: Optional[Any] = Field(alias="expiresAt")
    author: Optional[str]
    status: AssetStatusType
    preview_url: Any = Field(alias="previewUrl")
    thumbnail_url: Optional[Any] = Field(alias="thumbnailUrl")


class UpdateBrandUpdateBrandBrandSearchEdgesNodeFile(BaseModel):
    typename__: Literal["File"] = Field(alias="__typename")
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    alternative_text: Optional[str] = Field(alias="alternativeText")
    is_decorative: bool = Field(alias="isDecorative")
    external_id: Optional[str] = Field(alias="externalId")
    expires_at: Optional[Any] = Field(alias="expiresAt")
    author: Optional[str]
    status: AssetStatusType
    filename: Optional[str]
    size: Optional[Any]
    extension: str
    preview_url: Any = Field(alias="previewUrl")
    thumbnail_url: Optional[Any] = Field(alias="thumbnailUrl")
    dynamic_preview_url: Optional[Any] = Field(alias="dynamicPreviewUrl")
    download_url: Optional[Any] = Field(alias="downloadUrl")


class UpdateBrandUpdateBrandBrandSearchEdgesNodeImage(BaseModel):
    typename__: Literal["Image"] = Field(alias="__typename")
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    alternative_text: Optional[str] = Field(alias="alternativeText")
    is_decorative: bool = Field(alias="isDecorative")
    external_id: Optional[str] = Field(alias="externalId")
    expires_at: Optional[Any] = Field(alias="expiresAt")
    author: Optional[str]
    status: AssetStatusType
    filename: Optional[str]
    size: Optional[Any]
    extension: str
    preview_url: Any = Field(alias="previewUrl")
    thumbnail_url: Optional[Any] = Field(alias="thumbnailUrl")
    dynamic_preview_url: Optional[Any] = Field(alias="dynamicPreviewUrl")
    download_url: Optional[Any] = Field(alias="downloadUrl")
    focal_point: Optional[List[Optional[float]]] = Field(alias="focalPoint")
    width: int
    height: int


class UpdateBrandUpdateBrandBrandSearchEdgesNodeVideo(BaseModel):
    typename__: Literal["Video"] = Field(alias="__typename")
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    alternative_text: Optional[str] = Field(alias="alternativeText")
    is_decorative: bool = Field(alias="isDecorative")
    external_id: Optional[str] = Field(alias="externalId")
    expires_at: Optional[Any] = Field(alias="expiresAt")
    author: Optional[str]
    status: AssetStatusType
    filename: Optional[str]
    size: Optional[Any]
    extension: str
    preview_url: Any = Field(alias="previewUrl")
    thumbnail_url: Optional[Any] = Field(alias="thumbnailUrl")
    dynamic_preview_url: Optional[Any] = Field(alias="dynamicPreviewUrl")
    download_url: Optional[Any] = Field(alias="downloadUrl")
    width: int
    height: int
    duration: float
    bitrate: int


class UpdateBrandUpdateBrandBrandLibraries(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")
    items: Optional[List[Optional["UpdateBrandUpdateBrandBrandLibrariesItems"]]]


class UpdateBrandUpdateBrandBrandLibrariesItems(BaseModel):
    typename__: Literal[
        "DocumentLibrary", "IconLibrary", "Library", "LogoLibrary", "MediaLibrary"
    ] = Field(alias="__typename")
    id: str
    name: str
    color: Optional["UpdateBrandUpdateBrandBrandLibrariesItemsColor"]
    assets: "UpdateBrandUpdateBrandBrandLibrariesItemsAssets"
    collections: "UpdateBrandUpdateBrandBrandLibrariesItemsCollections"
    workflow: "UpdateBrandUpdateBrandBrandLibrariesItemsWorkflow"
    custom_metadata_properties: List[
        "UpdateBrandUpdateBrandBrandLibrariesItemsCustomMetadataProperties"
    ] = Field(alias="customMetadataProperties")
    asset_submission_requests: List[
        "UpdateBrandUpdateBrandBrandLibrariesItemsAssetSubmissionRequests"
    ] = Field(alias="assetSubmissionRequests")


class UpdateBrandUpdateBrandBrandLibrariesItemsColor(BaseModel):
    red: Any
    green: Any
    blue: Any
    alpha: Any


class UpdateBrandUpdateBrandBrandLibrariesItemsAssets(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class UpdateBrandUpdateBrandBrandLibrariesItemsCollections(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class UpdateBrandUpdateBrandBrandLibrariesItemsWorkflow(BaseModel):
    id: str


class UpdateBrandUpdateBrandBrandLibrariesItemsCustomMetadataProperties(BaseModel):
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    name: str
    help_text: Optional[str] = Field(alias="helpText")
    is_required: bool = Field(alias="isRequired")
    default_value: Optional[Any] = Field(alias="defaultValue")


class UpdateBrandUpdateBrandBrandLibrariesItemsAssetSubmissionRequests(BaseModel):
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    project_id: str = Field(alias="projectId")
    title: str
    description: str
    configuration: Optional[Any]


class UpdateBrandUpdateBrandBrandWorkspaceProjects(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")
    items: Optional[List[Optional["UpdateBrandUpdateBrandBrandWorkspaceProjectsItems"]]]


class UpdateBrandUpdateBrandBrandWorkspaceProjectsItems(BaseModel):
    id: str
    name: str
    is_archived: bool = Field(alias="isArchived")


class UpdateBrandUpdateBrandBrandGuidelines(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")
    items: Optional[List[Optional["UpdateBrandUpdateBrandBrandGuidelinesItems"]]]


class UpdateBrandUpdateBrandBrandGuidelinesItems(BaseModel):
    id: str
    name: Optional[str]
    url: Any
    default_language: Optional[
        "UpdateBrandUpdateBrandBrandGuidelinesItemsDefaultLanguage"
    ] = Field(alias="defaultLanguage")
    translation_languages: List[
        Optional["UpdateBrandUpdateBrandBrandGuidelinesItemsTranslationLanguages"]
    ] = Field(alias="translationLanguages")
    library_pages: "UpdateBrandUpdateBrandBrandGuidelinesItemsLibraryPages" = Field(
        alias="libraryPages"
    )
    pages: Optional["UpdateBrandUpdateBrandBrandGuidelinesItemsPages"]


class UpdateBrandUpdateBrandBrandGuidelinesItemsDefaultLanguage(BaseModel):
    code: LanguageCode
    name: str


class UpdateBrandUpdateBrandBrandGuidelinesItemsTranslationLanguages(BaseModel):
    code: LanguageCode
    name: str


class UpdateBrandUpdateBrandBrandGuidelinesItemsLibraryPages(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class UpdateBrandUpdateBrandBrandGuidelinesItemsPages(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class UpdateBrandUpdateBrandBrandCustomMetadataProperties(BaseModel):
    id: str
    creator: "UpdateBrandUpdateBrandBrandCustomMetadataPropertiesCreator"
    created_at: Any = Field(alias="createdAt")
    modifier: Optional["UpdateBrandUpdateBrandBrandCustomMetadataPropertiesModifier"]
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    name: str
    type: "UpdateBrandUpdateBrandBrandCustomMetadataPropertiesType"
    help_text: Optional[str] = Field(alias="helpText")
    is_required: bool = Field(alias="isRequired")
    default_value: Optional[Any] = Field(alias="defaultValue")


class UpdateBrandUpdateBrandBrandCustomMetadataPropertiesCreator(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class UpdateBrandUpdateBrandBrandCustomMetadataPropertiesModifier(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class UpdateBrandUpdateBrandBrandCustomMetadataPropertiesType(BaseModel):
    typename__: Literal[
        "CustomMetadataPropertyType",
        "CustomMetadataPropertyTypeDate",
        "CustomMetadataPropertyTypeLongText",
        "CustomMetadataPropertyTypeMultiSelect",
        "CustomMetadataPropertyTypeNumber",
        "CustomMetadataPropertyTypeSelect",
        "CustomMetadataPropertyTypeText",
        "CustomMetadataPropertyTypeUrl",
    ] = Field(alias="__typename")
    name: str


class UpdateBrandUpdateBrandBrandCreativeTemplates(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")
    items: List[Optional["UpdateBrandUpdateBrandBrandCreativeTemplatesItems"]]


class UpdateBrandUpdateBrandBrandCreativeTemplatesItems(BaseModel):
    id: str
    brand_id: str = Field(alias="brandId")
    name: str
    description: Optional[str]
    variable: Optional["UpdateBrandUpdateBrandBrandCreativeTemplatesItemsVariable"]
    variables: List["UpdateBrandUpdateBrandBrandCreativeTemplatesItemsVariables"]
    asset_id: Optional[str] = Field(alias="assetId")


class UpdateBrandUpdateBrandBrandCreativeTemplatesItemsVariable(BaseModel):
    key: str
    name: str
    description: Optional[str]
    type: CreativeTemplateVariableType
    value: Optional[Any]
    connection_count: int = Field(alias="connectionCount")


class UpdateBrandUpdateBrandBrandCreativeTemplatesItemsVariables(BaseModel):
    key: str
    name: str
    description: Optional[str]
    type: CreativeTemplateVariableType
    value: Optional[Any]
    connection_count: int = Field(alias="connectionCount")


UpdateBrand.model_rebuild()
UpdateBrandUpdateBrand.model_rebuild()
UpdateBrandUpdateBrandBrand.model_rebuild()
UpdateBrandUpdateBrandBrandSearch.model_rebuild()
UpdateBrandUpdateBrandBrandSearchItemsAudio.model_rebuild()
UpdateBrandUpdateBrandBrandSearchItemsAudioAttachments.model_rebuild()
UpdateBrandUpdateBrandBrandSearchItemsAudioRelatedAssets.model_rebuild()
UpdateBrandUpdateBrandBrandSearchItemsAudioComments.model_rebuild()
UpdateBrandUpdateBrandBrandSearchItemsAudioCustomMetadata.model_rebuild()
UpdateBrandUpdateBrandBrandSearchItemsAudioWorkflowTask.model_rebuild()
UpdateBrandUpdateBrandBrandSearchItemsAudioVariants.model_rebuild()
UpdateBrandUpdateBrandBrandSearchItemsAudioLocation.model_rebuild()
UpdateBrandUpdateBrandBrandSearchEdges.model_rebuild()
UpdateBrandUpdateBrandBrandSearchEdgesNodeAudio.model_rebuild()
UpdateBrandUpdateBrandBrandLibraries.model_rebuild()
UpdateBrandUpdateBrandBrandLibrariesItems.model_rebuild()
UpdateBrandUpdateBrandBrandWorkspaceProjects.model_rebuild()
UpdateBrandUpdateBrandBrandGuidelines.model_rebuild()
UpdateBrandUpdateBrandBrandGuidelinesItems.model_rebuild()
UpdateBrandUpdateBrandBrandCustomMetadataProperties.model_rebuild()
UpdateBrandUpdateBrandBrandCreativeTemplates.model_rebuild()
UpdateBrandUpdateBrandBrandCreativeTemplatesItems.model_rebuild()
