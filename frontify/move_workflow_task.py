# Generated by ariadne-codegen
# Source: queries-mutations

from typing import Any, List, Literal, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import AssetStatusType, WorkflowStatusEnterRule


class MoveWorkflowTask(BaseModel):
    move_workflow_task: Optional["MoveWorkflowTaskMoveWorkflowTask"] = Field(
        alias="moveWorkflowTask"
    )


class MoveWorkflowTaskMoveWorkflowTask(BaseModel):
    workflow_status: Optional["MoveWorkflowTaskMoveWorkflowTaskWorkflowStatus"] = Field(
        alias="workflowStatus"
    )


class MoveWorkflowTaskMoveWorkflowTaskWorkflowStatus(BaseModel):
    id: str
    name: str
    color: "MoveWorkflowTaskMoveWorkflowTaskWorkflowStatusColor"
    assigned_users: List[
        Optional["MoveWorkflowTaskMoveWorkflowTaskWorkflowStatusAssignedUsers"]
    ] = Field(alias="assignedUsers")
    checklist_presets: List[
        Optional["MoveWorkflowTaskMoveWorkflowTaskWorkflowStatusChecklistPresets"]
    ] = Field(alias="checklistPresets")
    tasks: "MoveWorkflowTaskMoveWorkflowTaskWorkflowStatusTasks"
    enter_rules: List[Optional[WorkflowStatusEnterRule]] = Field(alias="enterRules")


class MoveWorkflowTaskMoveWorkflowTaskWorkflowStatusColor(BaseModel):
    red: Any
    green: Any
    blue: Any
    alpha: Any


class MoveWorkflowTaskMoveWorkflowTaskWorkflowStatusAssignedUsers(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class MoveWorkflowTaskMoveWorkflowTaskWorkflowStatusChecklistPresets(BaseModel):
    id: str
    content: str
    assigned_user: Optional[
        "MoveWorkflowTaskMoveWorkflowTaskWorkflowStatusChecklistPresetsAssignedUser"
    ] = Field(alias="assignedUser")


class MoveWorkflowTaskMoveWorkflowTaskWorkflowStatusChecklistPresetsAssignedUser(
    BaseModel
):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class MoveWorkflowTaskMoveWorkflowTaskWorkflowStatusTasks(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")
    items: Optional[
        List[Optional["MoveWorkflowTaskMoveWorkflowTaskWorkflowStatusTasksItems"]]
    ]


class MoveWorkflowTaskMoveWorkflowTaskWorkflowStatusTasksItems(BaseModel):
    id: str
    assigned_users: List[
        Optional[
            "MoveWorkflowTaskMoveWorkflowTaskWorkflowStatusTasksItemsAssignedUsers"
        ]
    ] = Field(alias="assignedUsers")
    asset: Optional["MoveWorkflowTaskMoveWorkflowTaskWorkflowStatusTasksItemsAsset"]
    title: Optional[str]
    description: Optional[str]
    status: "MoveWorkflowTaskMoveWorkflowTaskWorkflowStatusTasksItemsStatus"
    checklist_item: (
        "MoveWorkflowTaskMoveWorkflowTaskWorkflowStatusTasksItemsChecklistItem"
    ) = Field(alias="checklistItem")


class MoveWorkflowTaskMoveWorkflowTaskWorkflowStatusTasksItemsAssignedUsers(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class MoveWorkflowTaskMoveWorkflowTaskWorkflowStatusTasksItemsAsset(BaseModel):
    typename__: Literal[
        "Asset", "Audio", "Document", "EmbeddedContent", "File", "Image", "Video"
    ] = Field(alias="__typename")
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    external_id: Optional[str] = Field(alias="externalId")
    expires_at: Optional[Any] = Field(alias="expiresAt")
    status: AssetStatusType


class MoveWorkflowTaskMoveWorkflowTaskWorkflowStatusTasksItemsStatus(BaseModel):
    id: str
    name: str
    enter_rules: List[Optional[WorkflowStatusEnterRule]] = Field(alias="enterRules")


class MoveWorkflowTaskMoveWorkflowTaskWorkflowStatusTasksItemsChecklistItem(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


MoveWorkflowTask.model_rebuild()
MoveWorkflowTaskMoveWorkflowTask.model_rebuild()
MoveWorkflowTaskMoveWorkflowTaskWorkflowStatus.model_rebuild()
MoveWorkflowTaskMoveWorkflowTaskWorkflowStatusChecklistPresets.model_rebuild()
MoveWorkflowTaskMoveWorkflowTaskWorkflowStatusTasks.model_rebuild()
MoveWorkflowTaskMoveWorkflowTaskWorkflowStatusTasksItems.model_rebuild()
