# Generated by ariadne-codegen
# Source: queries-mutations

from typing import Any, List, Literal, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import AssetStatusType, CopyrightStatus, CreativeJobStatus, TagSource


class CancelExportCreatives(BaseModel):
    cancel_export_creatives: Optional["CancelExportCreativesCancelExportCreatives"] = (
        Field(alias="cancelExportCreatives")
    )


class CancelExportCreativesCancelExportCreatives(BaseModel):
    canceled_jobs: List[
        Optional["CancelExportCreativesCancelExportCreativesCanceledJobs"]
    ] = Field(alias="canceledJobs")


class CancelExportCreativesCancelExportCreativesCanceledJobs(BaseModel):
    id: str
    status: CreativeJobStatus
    result: Optional["CancelExportCreativesCancelExportCreativesCanceledJobsResult"]


class CancelExportCreativesCancelExportCreativesCanceledJobsResult(BaseModel):
    download_url: Any = Field(alias="downloadUrl")
    page_download_urls: List[Any] = Field(alias="pageDownloadUrls")
    asset: Optional["CancelExportCreativesCancelExportCreativesCanceledJobsResultAsset"]


class CancelExportCreativesCancelExportCreativesCanceledJobsResultAsset(BaseModel):
    id: str
    creator: "CancelExportCreativesCancelExportCreativesCanceledJobsResultAssetCreator"
    created_at: Any = Field(alias="createdAt")
    modifier: Optional[
        "CancelExportCreativesCancelExportCreativesCanceledJobsResultAssetModifier"
    ]
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    alternative_text: Optional[str] = Field(alias="alternativeText")
    is_decorative: bool = Field(alias="isDecorative")
    attachments: Optional[
        List[
            Optional[
                "CancelExportCreativesCancelExportCreativesCanceledJobsResultAssetAttachments"
            ]
        ]
    ]
    external_id: Optional[str] = Field(alias="externalId")
    tags: Optional[
        List[
            Optional[
                "CancelExportCreativesCancelExportCreativesCanceledJobsResultAssetTags"
            ]
        ]
    ]
    copyright: Optional[
        "CancelExportCreativesCancelExportCreativesCanceledJobsResultAssetCopyright"
    ]
    availability: (
        "CancelExportCreativesCancelExportCreativesCanceledJobsResultAssetAvailability"
    )
    expires_at: Optional[Any] = Field(alias="expiresAt")
    licenses: Optional[
        List[
            Optional[
                "CancelExportCreativesCancelExportCreativesCanceledJobsResultAssetLicenses"
            ]
        ]
    ]
    author: Optional[str]
    status: AssetStatusType
    related_assets: (
        "CancelExportCreativesCancelExportCreativesCanceledJobsResultAssetRelatedAssets"
    ) = Field(alias="relatedAssets")
    comments: Optional[
        "CancelExportCreativesCancelExportCreativesCanceledJobsResultAssetComments"
    ]
    current_user_permissions: (
        "CancelExportCreativesCancelExportCreativesCanceledJobsResultAssetCurrentUserPermissions"
    ) = Field(alias="currentUserPermissions")
    workflow_task: Optional[
        "CancelExportCreativesCancelExportCreativesCanceledJobsResultAssetWorkflowTask"
    ] = Field(alias="workflowTask")
    variants: Optional[
        "CancelExportCreativesCancelExportCreativesCanceledJobsResultAssetVariants"
    ]
    preview_background_color: Optional[
        "CancelExportCreativesCancelExportCreativesCanceledJobsResultAssetPreviewBackgroundColor"
    ] = Field(alias="previewBackgroundColor")
    filename: Optional[str]
    size: Optional[Any]
    extension: str
    preview_url: Any = Field(alias="previewUrl")
    thumbnail_url: Optional[Any] = Field(alias="thumbnailUrl")
    dynamic_preview_url: Optional[Any] = Field(alias="dynamicPreviewUrl")
    download_url: Optional[Any] = Field(alias="downloadUrl")


class CancelExportCreativesCancelExportCreativesCanceledJobsResultAssetCreator(
    BaseModel
):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class CancelExportCreativesCancelExportCreativesCanceledJobsResultAssetModifier(
    BaseModel
):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class CancelExportCreativesCancelExportCreativesCanceledJobsResultAssetAttachments(
    BaseModel
):
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    name: Optional[str]
    filename: Optional[str]
    type: Optional[str]
    external_id: Optional[str] = Field(alias="externalId")
    extension: Optional[str]
    size: Optional[Any]
    download_url: Optional[Any] = Field(alias="downloadUrl")


class CancelExportCreativesCancelExportCreativesCanceledJobsResultAssetTags(BaseModel):
    value: str
    source: Optional[TagSource]


class CancelExportCreativesCancelExportCreativesCanceledJobsResultAssetCopyright(
    BaseModel
):
    status: CopyrightStatus
    notice: Optional[str]


class CancelExportCreativesCancelExportCreativesCanceledJobsResultAssetAvailability(
    BaseModel
):
    from_: Optional[Any] = Field(alias="from")
    to: Optional[Any]


class CancelExportCreativesCancelExportCreativesCanceledJobsResultAssetLicenses(
    BaseModel
):
    id: str
    title: str
    license: str
    add_by_default: bool = Field(alias="addByDefault")
    require_consensus: bool = Field(alias="requireConsensus")


class CancelExportCreativesCancelExportCreativesCanceledJobsResultAssetRelatedAssets(
    BaseModel
):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class CancelExportCreativesCancelExportCreativesCanceledJobsResultAssetComments(
    BaseModel
):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class CancelExportCreativesCancelExportCreativesCanceledJobsResultAssetCurrentUserPermissions(
    BaseModel
):
    can_edit: bool = Field(alias="canEdit")
    can_delete: bool = Field(alias="canDelete")
    can_download: bool = Field(alias="canDownload")
    can_comment: bool = Field(alias="canComment")


class CancelExportCreativesCancelExportCreativesCanceledJobsResultAssetWorkflowTask(
    BaseModel
):
    id: str
    title: Optional[str]
    description: Optional[str]


class CancelExportCreativesCancelExportCreativesCanceledJobsResultAssetVariants(
    BaseModel
):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class CancelExportCreativesCancelExportCreativesCanceledJobsResultAssetPreviewBackgroundColor(
    BaseModel
):
    red: Any
    green: Any
    blue: Any
    alpha: Any


CancelExportCreatives.model_rebuild()
CancelExportCreativesCancelExportCreatives.model_rebuild()
CancelExportCreativesCancelExportCreativesCanceledJobs.model_rebuild()
CancelExportCreativesCancelExportCreativesCanceledJobsResult.model_rebuild()
CancelExportCreativesCancelExportCreativesCanceledJobsResultAsset.model_rebuild()
