# Generated by ariadne-codegen
# Source: queries-mutations

from typing import Any, List, Literal, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import AssetStatusType, CopyrightStatus, TagSource


class AddAssetRelations(BaseModel):
    add_asset_relations: Optional["AddAssetRelationsAddAssetRelations"] = Field(
        alias="addAssetRelations"
    )


class AddAssetRelationsAddAssetRelations(BaseModel):
    asset: "AddAssetRelationsAddAssetRelationsAsset"
    related_assets: Optional[
        List[Optional["AddAssetRelationsAddAssetRelationsRelatedAssets"]]
    ] = Field(alias="relatedAssets")


class AddAssetRelationsAddAssetRelationsAsset(BaseModel):
    typename__: Literal[
        "Asset", "Audio", "Document", "EmbeddedContent", "File", "Image", "Video"
    ] = Field(alias="__typename")
    id: str
    creator: "AddAssetRelationsAddAssetRelationsAssetCreator"
    created_at: Any = Field(alias="createdAt")
    modifier: Optional["AddAssetRelationsAddAssetRelationsAssetModifier"]
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    attachments: Optional[
        List[Optional["AddAssetRelationsAddAssetRelationsAssetAttachments"]]
    ]
    external_id: Optional[str] = Field(alias="externalId")
    tags: Optional[List[Optional["AddAssetRelationsAddAssetRelationsAssetTags"]]]
    copyright: Optional["AddAssetRelationsAddAssetRelationsAssetCopyright"]
    expires_at: Optional[Any] = Field(alias="expiresAt")
    licenses: Optional[
        List[Optional["AddAssetRelationsAddAssetRelationsAssetLicenses"]]
    ]
    status: AssetStatusType
    related_assets: "AddAssetRelationsAddAssetRelationsAssetRelatedAssets" = Field(
        alias="relatedAssets"
    )
    comments: Optional["AddAssetRelationsAddAssetRelationsAssetComments"]
    current_user_permissions: (
        "AddAssetRelationsAddAssetRelationsAssetCurrentUserPermissions"
    ) = Field(alias="currentUserPermissions")
    custom_metadata: List["AddAssetRelationsAddAssetRelationsAssetCustomMetadata"] = (
        Field(alias="customMetadata")
    )
    location: "AddAssetRelationsAddAssetRelationsAssetLocation"


class AddAssetRelationsAddAssetRelationsAssetCreator(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    email: Any
    name: Optional[str]
    avatar: Optional[Any]


class AddAssetRelationsAddAssetRelationsAssetModifier(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    email: Any
    name: Optional[str]
    avatar: Optional[Any]


class AddAssetRelationsAddAssetRelationsAssetAttachments(BaseModel):
    id: str
    creator: "AddAssetRelationsAddAssetRelationsAssetAttachmentsCreator"
    created_at: Any = Field(alias="createdAt")
    modifier: Optional["AddAssetRelationsAddAssetRelationsAssetAttachmentsModifier"]
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    name: Optional[str]
    filename: Optional[str]
    type: Optional[str]
    external_id: Optional[str] = Field(alias="externalId")
    extension: Optional[str]
    size: Optional[Any]
    download_url: Optional[Any] = Field(alias="downloadUrl")


class AddAssetRelationsAddAssetRelationsAssetAttachmentsCreator(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    email: Any
    name: Optional[str]
    avatar: Optional[Any]


class AddAssetRelationsAddAssetRelationsAssetAttachmentsModifier(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    email: Any
    name: Optional[str]
    avatar: Optional[Any]


class AddAssetRelationsAddAssetRelationsAssetTags(BaseModel):
    value: str
    source: Optional[TagSource]


class AddAssetRelationsAddAssetRelationsAssetCopyright(BaseModel):
    status: CopyrightStatus
    notice: Optional[str]


class AddAssetRelationsAddAssetRelationsAssetLicenses(BaseModel):
    id: str
    title: str
    license: str
    add_by_default: bool = Field(alias="addByDefault")
    require_consensus: bool = Field(alias="requireConsensus")


class AddAssetRelationsAddAssetRelationsAssetRelatedAssets(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")
    items: Optional[
        List[Optional["AddAssetRelationsAddAssetRelationsAssetRelatedAssetsItems"]]
    ]


class AddAssetRelationsAddAssetRelationsAssetRelatedAssetsItems(BaseModel):
    typename__: Literal[
        "Asset", "Audio", "Document", "EmbeddedContent", "File", "Image", "Video"
    ] = Field(alias="__typename")
    id: str
    creator: "AddAssetRelationsAddAssetRelationsAssetRelatedAssetsItemsCreator"
    created_at: Any = Field(alias="createdAt")
    modifier: Optional[
        "AddAssetRelationsAddAssetRelationsAssetRelatedAssetsItemsModifier"
    ]
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    attachments: Optional[
        List[
            Optional[
                "AddAssetRelationsAddAssetRelationsAssetRelatedAssetsItemsAttachments"
            ]
        ]
    ]
    external_id: Optional[str] = Field(alias="externalId")
    tags: Optional[
        List[Optional["AddAssetRelationsAddAssetRelationsAssetRelatedAssetsItemsTags"]]
    ]
    copyright: Optional[
        "AddAssetRelationsAddAssetRelationsAssetRelatedAssetsItemsCopyright"
    ]
    expires_at: Optional[Any] = Field(alias="expiresAt")
    licenses: Optional[
        List[
            Optional[
                "AddAssetRelationsAddAssetRelationsAssetRelatedAssetsItemsLicenses"
            ]
        ]
    ]
    status: AssetStatusType
    related_assets: (
        "AddAssetRelationsAddAssetRelationsAssetRelatedAssetsItemsRelatedAssets"
    ) = Field(alias="relatedAssets")
    comments: Optional[
        "AddAssetRelationsAddAssetRelationsAssetRelatedAssetsItemsComments"
    ]
    current_user_permissions: (
        "AddAssetRelationsAddAssetRelationsAssetRelatedAssetsItemsCurrentUserPermissions"
    ) = Field(alias="currentUserPermissions")


class AddAssetRelationsAddAssetRelationsAssetRelatedAssetsItemsCreator(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    email: Any
    name: Optional[str]
    avatar: Optional[Any]


class AddAssetRelationsAddAssetRelationsAssetRelatedAssetsItemsModifier(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    email: Any
    name: Optional[str]
    avatar: Optional[Any]


class AddAssetRelationsAddAssetRelationsAssetRelatedAssetsItemsAttachments(BaseModel):
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    name: Optional[str]
    filename: Optional[str]
    type: Optional[str]
    external_id: Optional[str] = Field(alias="externalId")
    extension: Optional[str]
    size: Optional[Any]
    download_url: Optional[Any] = Field(alias="downloadUrl")


class AddAssetRelationsAddAssetRelationsAssetRelatedAssetsItemsTags(BaseModel):
    value: str
    source: Optional[TagSource]


class AddAssetRelationsAddAssetRelationsAssetRelatedAssetsItemsCopyright(BaseModel):
    status: CopyrightStatus
    notice: Optional[str]


class AddAssetRelationsAddAssetRelationsAssetRelatedAssetsItemsLicenses(BaseModel):
    id: str
    title: str
    license: str
    add_by_default: bool = Field(alias="addByDefault")
    require_consensus: bool = Field(alias="requireConsensus")


class AddAssetRelationsAddAssetRelationsAssetRelatedAssetsItemsRelatedAssets(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class AddAssetRelationsAddAssetRelationsAssetRelatedAssetsItemsComments(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class AddAssetRelationsAddAssetRelationsAssetRelatedAssetsItemsCurrentUserPermissions(
    BaseModel
):
    can_edit: bool = Field(alias="canEdit")
    can_delete: bool = Field(alias="canDelete")
    can_download: bool = Field(alias="canDownload")
    can_comment: bool = Field(alias="canComment")


class AddAssetRelationsAddAssetRelationsAssetComments(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")
    items: Optional[
        List[Optional["AddAssetRelationsAddAssetRelationsAssetCommentsItems"]]
    ]


class AddAssetRelationsAddAssetRelationsAssetCommentsItems(BaseModel):
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    content: str
    mentioned_users: List[
        Optional["AddAssetRelationsAddAssetRelationsAssetCommentsItemsMentionedUsers"]
    ] = Field(alias="mentionedUsers")
    is_resolved: bool = Field(alias="isResolved")
    replies: "AddAssetRelationsAddAssetRelationsAssetCommentsItemsReplies"


class AddAssetRelationsAddAssetRelationsAssetCommentsItemsMentionedUsers(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    email: Any
    name: Optional[str]
    avatar: Optional[Any]


class AddAssetRelationsAddAssetRelationsAssetCommentsItemsReplies(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class AddAssetRelationsAddAssetRelationsAssetCurrentUserPermissions(BaseModel):
    can_edit: bool = Field(alias="canEdit")
    can_delete: bool = Field(alias="canDelete")
    can_download: bool = Field(alias="canDownload")
    can_comment: bool = Field(alias="canComment")


class AddAssetRelationsAddAssetRelationsAssetCustomMetadata(BaseModel):
    typename__: Literal[
        "CustomMetadata", "CustomMetadataValue", "CustomMetadataValues"
    ] = Field(alias="__typename")
    property: "AddAssetRelationsAddAssetRelationsAssetCustomMetadataProperty"


class AddAssetRelationsAddAssetRelationsAssetCustomMetadataProperty(BaseModel):
    id: str
    creator: "AddAssetRelationsAddAssetRelationsAssetCustomMetadataPropertyCreator"
    created_at: Any = Field(alias="createdAt")
    modifier: Optional[
        "AddAssetRelationsAddAssetRelationsAssetCustomMetadataPropertyModifier"
    ]
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    name: str
    type: "AddAssetRelationsAddAssetRelationsAssetCustomMetadataPropertyType"
    help_text: Optional[str] = Field(alias="helpText")
    is_required: bool = Field(alias="isRequired")
    default_value: Optional[Any] = Field(alias="defaultValue")


class AddAssetRelationsAddAssetRelationsAssetCustomMetadataPropertyCreator(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    email: Any
    name: Optional[str]
    avatar: Optional[Any]


class AddAssetRelationsAddAssetRelationsAssetCustomMetadataPropertyModifier(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    email: Any
    name: Optional[str]
    avatar: Optional[Any]


class AddAssetRelationsAddAssetRelationsAssetCustomMetadataPropertyType(BaseModel):
    typename__: Literal[
        "CustomMetadataPropertyType",
        "CustomMetadataPropertyTypeDate",
        "CustomMetadataPropertyTypeLongText",
        "CustomMetadataPropertyTypeMultiSelect",
        "CustomMetadataPropertyTypeNumber",
        "CustomMetadataPropertyTypeSelect",
        "CustomMetadataPropertyTypeText",
        "CustomMetadataPropertyTypeUrl",
    ] = Field(alias="__typename")
    name: str


class AddAssetRelationsAddAssetRelationsAssetLocation(BaseModel):
    brand: Optional["AddAssetRelationsAddAssetRelationsAssetLocationBrand"]
    library: Optional["AddAssetRelationsAddAssetRelationsAssetLocationLibrary"]
    workspace_project: Optional[
        "AddAssetRelationsAddAssetRelationsAssetLocationWorkspaceProject"
    ] = Field(alias="workspaceProject")
    folder: Optional["AddAssetRelationsAddAssetRelationsAssetLocationFolder"]


class AddAssetRelationsAddAssetRelationsAssetLocationBrand(BaseModel):
    id: str
    name: str


class AddAssetRelationsAddAssetRelationsAssetLocationLibrary(BaseModel):
    id: str
    name: Optional[str]


class AddAssetRelationsAddAssetRelationsAssetLocationWorkspaceProject(BaseModel):
    id: str
    name: Optional[str]


class AddAssetRelationsAddAssetRelationsAssetLocationFolder(BaseModel):
    id: str
    name: str
    breadcrumbs: List[
        "AddAssetRelationsAddAssetRelationsAssetLocationFolderBreadcrumbs"
    ]


class AddAssetRelationsAddAssetRelationsAssetLocationFolderBreadcrumbs(BaseModel):
    id: Optional[str]
    name: Optional[str]


class AddAssetRelationsAddAssetRelationsRelatedAssets(BaseModel):
    typename__: Literal[
        "Asset", "Audio", "Document", "EmbeddedContent", "File", "Image", "Video"
    ] = Field(alias="__typename")
    id: str
    creator: "AddAssetRelationsAddAssetRelationsRelatedAssetsCreator"
    created_at: Any = Field(alias="createdAt")
    modifier: Optional["AddAssetRelationsAddAssetRelationsRelatedAssetsModifier"]
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    attachments: Optional[
        List[Optional["AddAssetRelationsAddAssetRelationsRelatedAssetsAttachments"]]
    ]
    external_id: Optional[str] = Field(alias="externalId")
    tags: Optional[
        List[Optional["AddAssetRelationsAddAssetRelationsRelatedAssetsTags"]]
    ]
    copyright: Optional["AddAssetRelationsAddAssetRelationsRelatedAssetsCopyright"]
    expires_at: Optional[Any] = Field(alias="expiresAt")
    licenses: Optional[
        List[Optional["AddAssetRelationsAddAssetRelationsRelatedAssetsLicenses"]]
    ]
    status: AssetStatusType
    related_assets: "AddAssetRelationsAddAssetRelationsRelatedAssetsRelatedAssets" = (
        Field(alias="relatedAssets")
    )
    comments: Optional["AddAssetRelationsAddAssetRelationsRelatedAssetsComments"]
    current_user_permissions: (
        "AddAssetRelationsAddAssetRelationsRelatedAssetsCurrentUserPermissions"
    ) = Field(alias="currentUserPermissions")


class AddAssetRelationsAddAssetRelationsRelatedAssetsCreator(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    email: Any
    name: Optional[str]
    avatar: Optional[Any]


class AddAssetRelationsAddAssetRelationsRelatedAssetsModifier(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    email: Any
    name: Optional[str]
    avatar: Optional[Any]


class AddAssetRelationsAddAssetRelationsRelatedAssetsAttachments(BaseModel):
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    name: Optional[str]
    filename: Optional[str]
    type: Optional[str]
    external_id: Optional[str] = Field(alias="externalId")
    extension: Optional[str]
    size: Optional[Any]
    download_url: Optional[Any] = Field(alias="downloadUrl")


class AddAssetRelationsAddAssetRelationsRelatedAssetsTags(BaseModel):
    value: str
    source: Optional[TagSource]


class AddAssetRelationsAddAssetRelationsRelatedAssetsCopyright(BaseModel):
    status: CopyrightStatus
    notice: Optional[str]


class AddAssetRelationsAddAssetRelationsRelatedAssetsLicenses(BaseModel):
    id: str
    title: str
    license: str
    add_by_default: bool = Field(alias="addByDefault")
    require_consensus: bool = Field(alias="requireConsensus")


class AddAssetRelationsAddAssetRelationsRelatedAssetsRelatedAssets(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class AddAssetRelationsAddAssetRelationsRelatedAssetsComments(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class AddAssetRelationsAddAssetRelationsRelatedAssetsCurrentUserPermissions(BaseModel):
    can_edit: bool = Field(alias="canEdit")
    can_delete: bool = Field(alias="canDelete")
    can_download: bool = Field(alias="canDownload")
    can_comment: bool = Field(alias="canComment")


AddAssetRelations.model_rebuild()
AddAssetRelationsAddAssetRelations.model_rebuild()
AddAssetRelationsAddAssetRelationsAsset.model_rebuild()
AddAssetRelationsAddAssetRelationsAssetAttachments.model_rebuild()
AddAssetRelationsAddAssetRelationsAssetRelatedAssets.model_rebuild()
AddAssetRelationsAddAssetRelationsAssetRelatedAssetsItems.model_rebuild()
AddAssetRelationsAddAssetRelationsAssetComments.model_rebuild()
AddAssetRelationsAddAssetRelationsAssetCommentsItems.model_rebuild()
AddAssetRelationsAddAssetRelationsAssetCustomMetadata.model_rebuild()
AddAssetRelationsAddAssetRelationsAssetCustomMetadataProperty.model_rebuild()
AddAssetRelationsAddAssetRelationsAssetLocation.model_rebuild()
AddAssetRelationsAddAssetRelationsAssetLocationFolder.model_rebuild()
AddAssetRelationsAddAssetRelationsRelatedAssets.model_rebuild()
