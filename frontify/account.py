# Generated by ariadne-codegen
# Source: queries-mutations

from typing import Annotated, Any, List, Literal, Optional, Union

from pydantic import Field

from .base_model import BaseModel
from .enums import AssetStatusType, CopyrightStatus, TagSource


class Account(BaseModel):
    account: "AccountAccount"


class AccountAccount(BaseModel):
    id: str
    users: Optional["AccountAccountUsers"]
    user_groups: Optional["AccountAccountUserGroups"] = Field(alias="userGroups")
    search: Optional["AccountAccountSearch"]


class AccountAccountUsers(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")
    items: Optional[List[Optional["AccountAccountUsersItems"]]]


class AccountAccountUsersItems(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class AccountAccountUserGroups(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")
    items: Optional[List[Optional["AccountAccountUserGroupsItems"]]]


class AccountAccountUserGroupsItems(BaseModel):
    id: str
    name: Optional[str]
    users: Optional["AccountAccountUserGroupsItemsUsers"]


class AccountAccountUserGroupsItemsUsers(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class AccountAccountSearch(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")
    items: Optional[
        List[
            Optional[
                Annotated[
                    Union[
                        "AccountAccountSearchItemsAudio",
                        "AccountAccountSearchItemsDocument",
                        "AccountAccountSearchItemsEmbeddedContent",
                        "AccountAccountSearchItemsFile",
                        "AccountAccountSearchItemsImage",
                        "AccountAccountSearchItemsVideo",
                    ],
                    Field(discriminator="typename__"),
                ]
            ]
        ]
    ]


class AccountAccountSearchItemsAudio(BaseModel):
    typename__: Literal["Audio"] = Field(alias="__typename")
    id: str
    creator: "AccountAccountSearchItemsAudioCreator"
    created_at: Any = Field(alias="createdAt")
    modifier: Optional["AccountAccountSearchItemsAudioModifier"]
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    alternative_text: Optional[str] = Field(alias="alternativeText")
    is_decorative: bool = Field(alias="isDecorative")
    attachments: Optional[List[Optional["AccountAccountSearchItemsAudioAttachments"]]]
    external_id: Optional[str] = Field(alias="externalId")
    tags: Optional[List[Optional["AccountAccountSearchItemsAudioTags"]]]
    external_products: Optional[
        List[Optional["AccountAccountSearchItemsAudioExternalProducts"]]
    ] = Field(alias="externalProducts")
    copyright: Optional["AccountAccountSearchItemsAudioCopyright"]
    availability: "AccountAccountSearchItemsAudioAvailability"
    expires_at: Optional[Any] = Field(alias="expiresAt")
    licenses: Optional[List[Optional["AccountAccountSearchItemsAudioLicenses"]]]
    author: Optional[str]
    status: AssetStatusType
    related_assets: "AccountAccountSearchItemsAudioRelatedAssets" = Field(
        alias="relatedAssets"
    )
    filename: Optional[str]
    size: Optional[Any]
    extension: str
    download_url: Optional[Any] = Field(alias="downloadUrl")
    preview_url: Any = Field(alias="previewUrl")
    thumbnail_url: Optional[Any] = Field(alias="thumbnailUrl")
    dynamic_preview_url: Optional[Any] = Field(alias="dynamicPreviewUrl")


class AccountAccountSearchItemsAudioCreator(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class AccountAccountSearchItemsAudioModifier(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class AccountAccountSearchItemsAudioAttachments(BaseModel):
    id: str
    creator: "AccountAccountSearchItemsAudioAttachmentsCreator"
    created_at: Any = Field(alias="createdAt")
    modifier: Optional["AccountAccountSearchItemsAudioAttachmentsModifier"]
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    name: Optional[str]
    filename: Optional[str]
    type: Optional[str]
    external_id: Optional[str] = Field(alias="externalId")
    extension: Optional[str]
    size: Optional[Any]
    download_url: Optional[Any] = Field(alias="downloadUrl")


class AccountAccountSearchItemsAudioAttachmentsCreator(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class AccountAccountSearchItemsAudioAttachmentsModifier(BaseModel):
    typename__: Literal["AccountUser", "User"] = Field(alias="__typename")
    id: str
    name: Optional[str]


class AccountAccountSearchItemsAudioTags(BaseModel):
    value: str
    source: Optional[TagSource]


class AccountAccountSearchItemsAudioExternalProducts(BaseModel):
    id: str
    name: str
    external_id: Optional[str] = Field(alias="externalId")
    title: Optional[str]


class AccountAccountSearchItemsAudioCopyright(BaseModel):
    status: CopyrightStatus
    notice: Optional[str]


class AccountAccountSearchItemsAudioAvailability(BaseModel):
    from_: Optional[Any] = Field(alias="from")
    to: Optional[Any]


class AccountAccountSearchItemsAudioLicenses(BaseModel):
    id: str
    title: str
    license: str
    add_by_default: bool = Field(alias="addByDefault")
    require_consensus: bool = Field(alias="requireConsensus")


class AccountAccountSearchItemsAudioRelatedAssets(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")
    items: Optional[List[Optional["AccountAccountSearchItemsAudioRelatedAssetsItems"]]]


class AccountAccountSearchItemsAudioRelatedAssetsItems(BaseModel):
    typename__: Literal[
        "Asset", "Audio", "Document", "EmbeddedContent", "File", "Image", "Video"
    ] = Field(alias="__typename")
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    external_id: Optional[str] = Field(alias="externalId")
    expires_at: Optional[Any] = Field(alias="expiresAt")
    status: AssetStatusType
    comments: Optional["AccountAccountSearchItemsAudioRelatedAssetsItemsComments"]
    current_user_permissions: (
        "AccountAccountSearchItemsAudioRelatedAssetsItemsCurrentUserPermissions"
    ) = Field(alias="currentUserPermissions")
    workflow_task: Optional[
        "AccountAccountSearchItemsAudioRelatedAssetsItemsWorkflowTask"
    ] = Field(alias="workflowTask")
    variants: Optional["AccountAccountSearchItemsAudioRelatedAssetsItemsVariants"]
    preview_background_color: Optional[
        "AccountAccountSearchItemsAudioRelatedAssetsItemsPreviewBackgroundColor"
    ] = Field(alias="previewBackgroundColor")


class AccountAccountSearchItemsAudioRelatedAssetsItemsComments(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class AccountAccountSearchItemsAudioRelatedAssetsItemsCurrentUserPermissions(BaseModel):
    can_edit: bool = Field(alias="canEdit")
    can_delete: bool = Field(alias="canDelete")
    can_download: bool = Field(alias="canDownload")
    can_comment: bool = Field(alias="canComment")


class AccountAccountSearchItemsAudioRelatedAssetsItemsWorkflowTask(BaseModel):
    id: str
    title: Optional[str]
    description: Optional[str]


class AccountAccountSearchItemsAudioRelatedAssetsItemsVariants(BaseModel):
    total: int
    page: int
    limit: int
    has_next_page: bool = Field(alias="hasNextPage")


class AccountAccountSearchItemsAudioRelatedAssetsItemsPreviewBackgroundColor(BaseModel):
    red: Any
    green: Any
    blue: Any
    alpha: Any


class AccountAccountSearchItemsDocument(BaseModel):
    typename__: Literal["Document"] = Field(alias="__typename")
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    alternative_text: Optional[str] = Field(alias="alternativeText")
    is_decorative: bool = Field(alias="isDecorative")
    external_id: Optional[str] = Field(alias="externalId")
    expires_at: Optional[Any] = Field(alias="expiresAt")
    author: Optional[str]
    status: AssetStatusType
    filename: Optional[str]
    size: Optional[Any]
    extension: str
    preview_url: Any = Field(alias="previewUrl")
    thumbnail_url: Optional[Any] = Field(alias="thumbnailUrl")
    dynamic_preview_url: Optional[Any] = Field(alias="dynamicPreviewUrl")
    download_url: Optional[Any] = Field(alias="downloadUrl")
    focal_point: Optional[List[Optional[float]]] = Field(alias="focalPoint")
    width: int
    height: int
    page_count: Optional[int] = Field(alias="pageCount")


class AccountAccountSearchItemsEmbeddedContent(BaseModel):
    typename__: Literal["EmbeddedContent"] = Field(alias="__typename")
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    alternative_text: Optional[str] = Field(alias="alternativeText")
    is_decorative: bool = Field(alias="isDecorative")
    external_id: Optional[str] = Field(alias="externalId")
    expires_at: Optional[Any] = Field(alias="expiresAt")
    author: Optional[str]
    status: AssetStatusType
    preview_url: Any = Field(alias="previewUrl")
    thumbnail_url: Optional[Any] = Field(alias="thumbnailUrl")


class AccountAccountSearchItemsFile(BaseModel):
    typename__: Literal["File"] = Field(alias="__typename")
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    alternative_text: Optional[str] = Field(alias="alternativeText")
    is_decorative: bool = Field(alias="isDecorative")
    external_id: Optional[str] = Field(alias="externalId")
    expires_at: Optional[Any] = Field(alias="expiresAt")
    author: Optional[str]
    status: AssetStatusType
    filename: Optional[str]
    size: Optional[Any]
    extension: str
    preview_url: Any = Field(alias="previewUrl")
    thumbnail_url: Optional[Any] = Field(alias="thumbnailUrl")
    dynamic_preview_url: Optional[Any] = Field(alias="dynamicPreviewUrl")
    download_url: Optional[Any] = Field(alias="downloadUrl")


class AccountAccountSearchItemsImage(BaseModel):
    typename__: Literal["Image"] = Field(alias="__typename")
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    alternative_text: Optional[str] = Field(alias="alternativeText")
    is_decorative: bool = Field(alias="isDecorative")
    external_id: Optional[str] = Field(alias="externalId")
    expires_at: Optional[Any] = Field(alias="expiresAt")
    author: Optional[str]
    status: AssetStatusType
    filename: Optional[str]
    size: Optional[Any]
    extension: str
    preview_url: Any = Field(alias="previewUrl")
    thumbnail_url: Optional[Any] = Field(alias="thumbnailUrl")
    dynamic_preview_url: Optional[Any] = Field(alias="dynamicPreviewUrl")
    download_url: Optional[Any] = Field(alias="downloadUrl")
    focal_point: Optional[List[Optional[float]]] = Field(alias="focalPoint")
    width: int
    height: int


class AccountAccountSearchItemsVideo(BaseModel):
    typename__: Literal["Video"] = Field(alias="__typename")
    id: str
    created_at: Any = Field(alias="createdAt")
    modified_at: Optional[Any] = Field(alias="modifiedAt")
    title: str
    description: Optional[str]
    alternative_text: Optional[str] = Field(alias="alternativeText")
    is_decorative: bool = Field(alias="isDecorative")
    external_id: Optional[str] = Field(alias="externalId")
    expires_at: Optional[Any] = Field(alias="expiresAt")
    author: Optional[str]
    status: AssetStatusType
    filename: Optional[str]
    size: Optional[Any]
    extension: str
    preview_url: Any = Field(alias="previewUrl")
    thumbnail_url: Optional[Any] = Field(alias="thumbnailUrl")
    dynamic_preview_url: Optional[Any] = Field(alias="dynamicPreviewUrl")
    download_url: Optional[Any] = Field(alias="downloadUrl")
    width: int
    height: int
    duration: float
    bitrate: int


Account.model_rebuild()
AccountAccount.model_rebuild()
AccountAccountUsers.model_rebuild()
AccountAccountUserGroups.model_rebuild()
AccountAccountUserGroupsItems.model_rebuild()
AccountAccountSearch.model_rebuild()
AccountAccountSearchItemsAudio.model_rebuild()
AccountAccountSearchItemsAudioAttachments.model_rebuild()
AccountAccountSearchItemsAudioRelatedAssets.model_rebuild()
AccountAccountSearchItemsAudioRelatedAssetsItems.model_rebuild()
